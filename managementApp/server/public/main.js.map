{"version":3,"sources":["webpack:///./client/$_lazy_route_resource lazy namespace object","webpack:///./client/app/app-routing.module.ts","webpack:///./client/app/app.component.css","webpack:///./client/app/app.component.html","webpack:///./client/app/app.component.ts","webpack:///./client/app/app.module.ts","webpack:///./client/app/core/http/HttpServiceHelper.ts","webpack:///./client/app/core/interfaces/address-role.ts","webpack:///./client/app/core/interfaces/ms-aggregation.ts","webpack:///./client/app/core/interfaces/partner-role.ts","webpack:///./client/app/core/interfaces/user-role.ts","webpack:///./client/app/core/interfaces/virtual-substation-role.ts","webpack:///./client/app/core/services/auth.service.ts","webpack:///./client/app/core/services/bay-form.service.ts","webpack:///./client/app/core/services/device-form.service.ts","webpack:///./client/app/core/services/device-ms-mt-form.service.ts","webpack:///./client/app/core/services/device-type-form.service.ts","webpack:///./client/app/core/services/expanding-bay.service.ts","webpack:///./client/app/core/services/expanding-device.service.ts","webpack:///./client/app/core/services/expanding-ms-mt.service.ts","webpack:///./client/app/core/services/expanding-partner-children.service.ts","webpack:///./client/app/core/services/measurement-form.service.ts","webpack:///./client/app/core/services/metering-form.service.ts","webpack:///./client/app/core/services/navigation.service.ts","webpack:///./client/app/core/services/partner-form.service.ts","webpack:///./client/app/core/services/read-icd.service.ts","webpack:///./client/app/core/services/scroll-moving.service.ts","webpack:///./client/app/core/services/setting.service.ts","webpack:///./client/app/core/services/sub-form.service.ts","webpack:///./client/app/core/services/update-bay.service.ts","webpack:///./client/app/core/services/update-device-ms-mr.service.ts","webpack:///./client/app/core/services/update-device-type.service.ts","webpack:///./client/app/core/services/update-device.service.ts","webpack:///./client/app/core/services/update-measurement-type.service.ts","webpack:///./client/app/core/services/update-metering-type.service.ts","webpack:///./client/app/core/services/update-partner.service.ts","webpack:///./client/app/core/services/update-substation.service.ts","webpack:///./client/app/modules/components/bay-form/bay-form.component.css","webpack:///./client/app/modules/components/bay-form/bay-form.component.html","webpack:///./client/app/modules/components/bay-form/bay-form.component.ts","webpack:///./client/app/modules/components/bay-table/bay-table.component.css","webpack:///./client/app/modules/components/bay-table/bay-table.component.html","webpack:///./client/app/modules/components/bay-table/bay-table.component.ts","webpack:///./client/app/modules/components/device-form/device-form.component.css","webpack:///./client/app/modules/components/device-form/device-form.component.html","webpack:///./client/app/modules/components/device-form/device-form.component.ts","webpack:///./client/app/modules/components/device-measurement-form/device-measurement-form.component.css","webpack:///./client/app/modules/components/device-measurement-form/device-measurement-form.component.html","webpack:///./client/app/modules/components/device-measurement-form/device-measurement-form.component.ts","webpack:///./client/app/modules/components/device-measurement-table/device-measurement-table.component.css","webpack:///./client/app/modules/components/device-measurement-table/device-measurement-table.component.html","webpack:///./client/app/modules/components/device-measurement-table/device-measurement-table.component.ts","webpack:///./client/app/modules/components/device-metering-table/device-metering-table.component.css","webpack:///./client/app/modules/components/device-metering-table/device-metering-table.component.html","webpack:///./client/app/modules/components/device-metering-table/device-metering-table.component.ts","webpack:///./client/app/modules/components/device-table/device-table.component.css","webpack:///./client/app/modules/components/device-table/device-table.component.html","webpack:///./client/app/modules/components/device-table/device-table.component.ts","webpack:///./client/app/modules/components/device-type-form/device-type-form.component.css","webpack:///./client/app/modules/components/device-type-form/device-type-form.component.html","webpack:///./client/app/modules/components/device-type-form/device-type-form.component.ts","webpack:///./client/app/modules/components/device-type-table/device-type-table.component.css","webpack:///./client/app/modules/components/device-type-table/device-type-table.component.html","webpack:///./client/app/modules/components/device-type-table/device-type-table.component.ts","webpack:///./client/app/modules/components/global-setting/global-setting.component.css","webpack:///./client/app/modules/components/global-setting/global-setting.component.html","webpack:///./client/app/modules/components/global-setting/global-setting.component.ts","webpack:///./client/app/modules/components/measurement-form/measurement-form.component.css","webpack:///./client/app/modules/components/measurement-form/measurement-form.component.html","webpack:///./client/app/modules/components/measurement-form/measurement-form.component.ts","webpack:///./client/app/modules/components/measurement-table/measurement-table.component.css","webpack:///./client/app/modules/components/measurement-table/measurement-table.component.html","webpack:///./client/app/modules/components/measurement-table/measurement-table.component.ts","webpack:///./client/app/modules/components/partner-address-table/partner-address-table.component.css","webpack:///./client/app/modules/components/partner-address-table/partner-address-table.component.html","webpack:///./client/app/modules/components/partner-address-table/partner-address-table.component.ts","webpack:///./client/app/modules/components/partner-contact-table/partner-contact-table.component.css","webpack:///./client/app/modules/components/partner-contact-table/partner-contact-table.component.html","webpack:///./client/app/modules/components/partner-contact-table/partner-contact-table.component.ts","webpack:///./client/app/modules/components/partner-form/partner-form.component.css","webpack:///./client/app/modules/components/partner-form/partner-form.component.html","webpack:///./client/app/modules/components/partner-form/partner-form.component.ts","webpack:///./client/app/modules/components/partner-substation-table/partner-substation-table.component.css","webpack:///./client/app/modules/components/partner-substation-table/partner-substation-table.component.html","webpack:///./client/app/modules/components/partner-substation-table/partner-substation-table.component.ts","webpack:///./client/app/modules/components/partner-table/partner-table.component.css","webpack:///./client/app/modules/components/partner-table/partner-table.component.html","webpack:///./client/app/modules/components/partner-table/partner-table.component.ts","webpack:///./client/app/modules/components/physical-substation-form/physical-substation-form.component.css","webpack:///./client/app/modules/components/physical-substation-form/physical-substation-form.component.html","webpack:///./client/app/modules/components/physical-substation-form/physical-substation-form.component.ts","webpack:///./client/app/modules/components/sidebar/sidebar.component.css","webpack:///./client/app/modules/components/sidebar/sidebar.component.html","webpack:///./client/app/modules/components/sidebar/sidebar.component.ts","webpack:///./client/app/modules/components/substation-form/substation-form.component.css","webpack:///./client/app/modules/components/substation-form/substation-form.component.html","webpack:///./client/app/modules/components/substation-form/substation-form.component.ts","webpack:///./client/app/modules/components/substation-table/substation-table.component.css","webpack:///./client/app/modules/components/substation-table/substation-table.component.html","webpack:///./client/app/modules/components/substation-table/substation-table.component.ts","webpack:///./client/app/modules/components/virtual-substation-form/virtual-substation-form.component.css","webpack:///./client/app/modules/components/virtual-substation-form/virtual-substation-form.component.html","webpack:///./client/app/modules/components/virtual-substation-form/virtual-substation-form.component.ts","webpack:///./client/app/modules/components/virtual-substation-table/virtual-substation-table.component.css","webpack:///./client/app/modules/components/virtual-substation-table/virtual-substation-table.component.html","webpack:///./client/app/modules/components/virtual-substation-table/virtual-substation-table.component.ts","webpack:///./client/app/modules/pages/device-type/device-type.component.css","webpack:///./client/app/modules/pages/device-type/device-type.component.html","webpack:///./client/app/modules/pages/device-type/device-type.component.ts","webpack:///./client/app/modules/pages/home/home.component.css","webpack:///./client/app/modules/pages/home/home.component.html","webpack:///./client/app/modules/pages/home/home.component.ts","webpack:///./client/app/modules/pages/measurements/measurements.component.css","webpack:///./client/app/modules/pages/measurements/measurements.component.html","webpack:///./client/app/modules/pages/measurements/measurements.component.ts","webpack:///./client/app/modules/pages/partner/partner.component.css","webpack:///./client/app/modules/pages/partner/partner.component.html","webpack:///./client/app/modules/pages/partner/partner.component.ts","webpack:///./client/app/modules/pages/substation/substation.component.css","webpack:///./client/app/modules/pages/substation/substation.component.html","webpack:///./client/app/modules/pages/substation/substation.component.ts","webpack:///./client/app/modules/pages/virtual-substation/virtual-substation.component.css","webpack:///./client/app/modules/pages/virtual-substation/virtual-substation.component.html","webpack:///./client/app/modules/pages/virtual-substation/virtual-substation.component.ts","webpack:///./client/environments/environment.ts","webpack:///./client/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./client/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {SubstationComponent} from './modules/pages/substation/substation.component';\nimport {PartnerComponent} from './modules/pages/partner/partner.component';\nimport {MeasurementsComponent} from './modules/pages/measurements/measurements.component';\nimport {HomeComponent} from './modules/pages/home/home.component';\nimport {DeviceTypeComponent} from \"./modules/pages/device-type/device-type.component\";\nimport {GlobalSettingComponent} from \"./modules/components/global-setting/global-setting.component\";\nimport {VirtualSubstationComponent} from \"./modules/pages/virtual-substation/virtual-substation.component\";\n\nconst routes: Routes = [\n  {path: 'app/home', component: HomeComponent},\n  {path: 'app/substation', component: SubstationComponent},\n  {path: 'app/virtual-substation', component: VirtualSubstationComponent},\n  {path: 'app/partner', component: PartnerComponent},\n  {path: 'app/measurements', component: MeasurementsComponent},\n  {path: 'app/device-types', component: DeviceTypeComponent},\n  {path: 'app/global-settings', component: GlobalSettingComponent},\n  {path: '', redirectTo: 'app/home', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"nav.navbar {\\r\\n    box-shadow: 0 1px #232323;\\r\\n}\\r\\n\\r\\n.navbar-nav {\\r\\n    flex-direction: row;\\r\\n\\r\\n}\\r\\n\\r\\n.nav-link {\\r\\n    padding-right: .5rem !important;\\r\\n    padding-left: .5rem !important;\\r\\n}\\r\\n\\r\\n/* Fixes dropdown menus placed on the right side */\\r\\n\\r\\n.ml-auto .dropdown-menu {\\r\\n    left: auto !important;\\r\\n    right: 0;\\r\\n}\\r\\n\\r\\n.navbar a {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.page-loading {\\r\\n    position: absolute;\\r\\n    z-index: 300;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    background-color: #e2e2e6fc;\\r\\n    border: 1px solid black;\\r\\n}\\r\\n\\r\\n.tree-waiting .loader {\\r\\n    width: 50px;\\r\\n    height: 50px;\\r\\n    border-width: 6px;\\r\\n}\\r\\n\\r\\n.navbar-nav .dropdown-menu {\\r\\n    min-width: 7rem;\\r\\n}\\r\\n\\r\\n.dropdown-menu a:hover {\\r\\n    background-color: #037bfc;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.navbar-dark .navbar-nav .nav-link {\\r\\n    color: rgb(255, 255, 255);\\r\\n}\\r\\n\\r\\n.login-failed-msg {\\r\\n    position: fixed;\\r\\n    right: 10px;\\r\\n    top: 62px;\\r\\n    padding: 9px;\\r\\n    color: #ffffff;\\r\\n    background-color: #f90837;\\r\\n    border-radius: 10px;\\r\\n    z-index:10;\\r\\n}\\r\\n\\r\\n.mg-app-container {\\r\\n    display: flex;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.mg-app-content {\\r\\n    padding: 50px 0 20px 0;\\r\\n    width: 100%;\\r\\n    position: relative;\\r\\n    overflow-y: auto;\\r\\n    overflow-x: auto;\\r\\n    height: calc(100vh - 56px);\\r\\n}\\r\\n\\r\\n.sb-page-loading {\\r\\n    position: absolute;\\r\\n    z-index: 300;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    background-color: #e2e2e6fc;\\r\\n}\\r\\n\\r\\n.loader {\\r\\n    margin: 42vh auto;\\r\\n    font-size: 10px;\\r\\n    position: relative;\\r\\n    text-indent: -9999em;\\r\\n    border-top: 9px solid rgba(37, 37, 37, 0.2);\\r\\n    border-right: 9px solid rgba(37, 37, 37, 0.2);\\r\\n    border-bottom: 9px solid rgba(37, 37, 37, 0.2);\\r\\n    border-left: 9px solid #252525;\\r\\n    -webkit-transform: translateZ(0);\\r\\n    transform: translateZ(0);\\r\\n    -webkit-animation: load8 1.1s infinite linear;\\r\\n    animation: load8 1.1s infinite linear;\\r\\n}\\r\\n\\r\\n.loader, .loader:after {\\r\\n    border-radius: 50%;\\r\\n    width: 80px;\\r\\n    height: 80px;\\r\\n}\\r\\n\\r\\n@-webkit-keyframes load8 {\\r\\n    0% {\\r\\n        -webkit-transform: rotate(0deg);\\r\\n        transform: rotate(0deg);\\r\\n    }\\r\\n    100% {\\r\\n        -webkit-transform: rotate(360deg);\\r\\n        transform: rotate(360deg);\\r\\n    }\\r\\n}\\r\\n\\r\\n@keyframes load8 {\\r\\n    0% {\\r\\n        -webkit-transform: rotate(0deg);\\r\\n        transform: rotate(0deg);\\r\\n    }\\r\\n    100% {\\r\\n        -webkit-transform: rotate(360deg);\\r\\n        transform: rotate(360deg);\\r\\n    }\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxtQkFBbUI7O0FBRXZCOztBQUVBO0lBQ0ksK0JBQStCO0lBQy9CLDhCQUE4QjtBQUNsQzs7QUFFQSxrREFBa0Q7O0FBQ2xEO0lBQ0kscUJBQXFCO0lBQ3JCLFFBQVE7QUFDWjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLFdBQVc7SUFDWCxZQUFZO0lBQ1osTUFBTTtJQUNOLE9BQU87SUFDUCwyQkFBMkI7SUFDM0IsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsV0FBVztJQUNYLFNBQVM7SUFDVCxZQUFZO0lBQ1osY0FBYztJQUNkLHlCQUF5QjtJQUN6QixtQkFBbUI7SUFDbkIsVUFBVTtBQUNkOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFdBQVc7QUFDZjs7QUFFQTtJQUNJLHNCQUFzQjtJQUN0QixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsMEJBQTBCO0FBQzlCOztBQUdBO0lBQ0ksa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixXQUFXO0lBQ1gsWUFBWTtJQUNaLE1BQU07SUFDTixPQUFPO0lBQ1AsMkJBQTJCO0FBQy9COztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsb0JBQW9CO0lBQ3BCLDJDQUEyQztJQUMzQyw2Q0FBNkM7SUFDN0MsOENBQThDO0lBQzlDLDhCQUE4QjtJQUM5QixnQ0FBZ0M7SUFDaEMsd0JBQXdCO0lBQ3hCLDZDQUE2QztJQUM3QyxxQ0FBcUM7QUFDekM7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFlBQVk7QUFDaEI7O0FBRUE7SUFDSTtRQUNJLCtCQUErQjtRQUMvQix1QkFBdUI7SUFDM0I7SUFDQTtRQUNJLGlDQUFpQztRQUNqQyx5QkFBeUI7SUFDN0I7QUFDSjs7QUFFQTtJQUNJO1FBQ0ksK0JBQStCO1FBQy9CLHVCQUF1QjtJQUMzQjtJQUNBO1FBQ0ksaUNBQWlDO1FBQ2pDLHlCQUF5QjtJQUM3QjtBQUNKIiwiZmlsZSI6ImNsaWVudC9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJuYXYubmF2YmFyIHtcclxuICAgIGJveC1zaGFkb3c6IDAgMXB4ICMyMzIzMjM7XHJcbn1cclxuXHJcbi5uYXZiYXItbmF2IHtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG59XHJcblxyXG4ubmF2LWxpbmsge1xyXG4gICAgcGFkZGluZy1yaWdodDogLjVyZW0gIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmctbGVmdDogLjVyZW0gIWltcG9ydGFudDtcclxufVxyXG5cclxuLyogRml4ZXMgZHJvcGRvd24gbWVudXMgcGxhY2VkIG9uIHRoZSByaWdodCBzaWRlICovXHJcbi5tbC1hdXRvIC5kcm9wZG93bi1tZW51IHtcclxuICAgIGxlZnQ6IGF1dG8gIWltcG9ydGFudDtcclxuICAgIHJpZ2h0OiAwO1xyXG59XHJcblxyXG4ubmF2YmFyIGEge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4ucGFnZS1sb2FkaW5nIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHotaW5kZXg6IDMwMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlMmUyZTZmYztcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG59XHJcblxyXG4udHJlZS13YWl0aW5nIC5sb2FkZXIge1xyXG4gICAgd2lkdGg6IDUwcHg7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICBib3JkZXItd2lkdGg6IDZweDtcclxufVxyXG5cclxuLm5hdmJhci1uYXYgLmRyb3Bkb3duLW1lbnUge1xyXG4gICAgbWluLXdpZHRoOiA3cmVtO1xyXG59XHJcblxyXG4uZHJvcGRvd24tbWVudSBhOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMzdiZmM7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5uYXZiYXItZGFyayAubmF2YmFyLW5hdiAubmF2LWxpbmsge1xyXG4gICAgY29sb3I6IHJnYigyNTUsIDI1NSwgMjU1KTtcclxufVxyXG5cclxuLmxvZ2luLWZhaWxlZC1tc2cge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgcmlnaHQ6IDEwcHg7XHJcbiAgICB0b3A6IDYycHg7XHJcbiAgICBwYWRkaW5nOiA5cHg7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOTA4Mzc7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgei1pbmRleDoxMDtcclxufVxyXG5cclxuLm1nLWFwcC1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWctYXBwLWNvbnRlbnQge1xyXG4gICAgcGFkZGluZzogNTBweCAwIDIwcHggMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3cteTogYXV0bztcclxuICAgIG92ZXJmbG93LXg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA1NnB4KTtcclxufVxyXG5cclxuXHJcbi5zYi1wYWdlLWxvYWRpbmcge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgei1pbmRleDogMzAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2UyZTJlNmZjO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIG1hcmdpbjogNDJ2aCBhdXRvO1xyXG4gICAgZm9udC1zaXplOiAxMHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdGV4dC1pbmRlbnQ6IC05OTk5ZW07XHJcbiAgICBib3JkZXItdG9wOiA5cHggc29saWQgcmdiYSgzNywgMzcsIDM3LCAwLjIpO1xyXG4gICAgYm9yZGVyLXJpZ2h0OiA5cHggc29saWQgcmdiYSgzNywgMzcsIDM3LCAwLjIpO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogOXB4IHNvbGlkIHJnYmEoMzcsIDM3LCAzNywgMC4yKTtcclxuICAgIGJvcmRlci1sZWZ0OiA5cHggc29saWQgIzI1MjUyNTtcclxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xyXG4gICAgLXdlYmtpdC1hbmltYXRpb246IGxvYWQ4IDEuMXMgaW5maW5pdGUgbGluZWFyO1xyXG4gICAgYW5pbWF0aW9uOiBsb2FkOCAxLjFzIGluZmluaXRlIGxpbmVhcjtcclxufVxyXG5cclxuLmxvYWRlciwgLmxvYWRlcjphZnRlciB7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICB3aWR0aDogODBweDtcclxuICAgIGhlaWdodDogODBweDtcclxufVxyXG5cclxuQC13ZWJraXQta2V5ZnJhbWVzIGxvYWQ4IHtcclxuICAgIDAlIHtcclxuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gICAgfVxyXG4gICAgMTAwJSB7XHJcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgbG9hZDgge1xyXG4gICAgMCUge1xyXG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XHJcbiAgICB9XHJcbiAgICAxMDAlIHtcclxuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcclxuICAgIH1cclxufVxyXG4iXX0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"[(loggedIn)?'/app/substation':'/app/home']\\\">{{title}} {{appVersion}} </a>\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" *ngIf=\\\"!loggedIn\\\" (click)=\\\"login()\\\">\\n                <i class=\\\"fa fa-sign-in\\\"></i>Login\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" *ngIf=\\\"loggedIn\\\" (click)=\\\"logout()\\\">\\n                <i class=\\\"fa fa-sign-out\\\"></i>Logout\\n            </a>\\n        </li>\\n    </ul>\\n</nav>\\n\\n<div class=\\\"login-failed-msg\\\" [innerHTML]=\\\"loginFailedMsg\\\" *ngIf=\\\"!!(loginFailedMsg)\\\">\\n</div>\\n\\n<div class=\\\"mg-app-container\\\">\\n    <app-sidebar *ngIf=\\\"loggedIn\\\"></app-sidebar>\\n    <div #panel class=\\\"mg-app-content\\\" *ngIf=\\\"loggedIn\\\">\\n        <router-outlet></router-outlet>\\n        <button class=\\\"btn page-left-right-icon\\\" *ngIf=\\\"loggedIn\\\" (click)=\\\"onLeftRightScroll()\\\">\\n            <i class=\\\"fa fa-2x fa-arrow-circle-right\\\"></i>\\n        </button>\\n        <button class=\\\"btn page-forward-icon\\\" *ngIf=\\\"loggedIn\\\" (click)=\\\"onForwardScroll()\\\">\\n            <i class=\\\"fa fa-2x fa-step-forward\\\"></i>\\n        </button>\\n\\n        <!--https://www.npmjs.com/package/@nicky-lenaers/ngx-scroll-to-->\\n        <button class=\\\"btn page-right-left-icon\\\" *ngIf=\\\"loggedIn\\\" (click)=\\\"onRightLeftScroll()\\\">\\n            <i class=\\\"fa fa-2x fa-arrow-circle-left\\\"></i>\\n        </button>\\n        <button class=\\\"btn page-backward-icon\\\" *ngIf=\\\"loggedIn\\\" (click)=\\\"onBackwardScroll()\\\">\\n            <i class=\\\"fa fa-2x fa-step-backward\\\"></i>\\n        </button>\\n    </div>\\n    <div class=\\\"public-area\\\" *ngIf=\\\"!loggedIn\\\">\\n        <h5>Public Area</h5>\\n    </div>\\n</div>\\n\\n<div class=\\\"sb-page-loading\\\" *ngIf=\\\"!pageLoaded\\\">\\n    <div class=\\\"loader\\\"></div>\\n</div>\\n\\n\\n\\n\"","import {Component, ElementRef, HostListener, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {BroadcastService, MsalService} from '@azure/msal-angular';\nimport {HttpServiceHelper} from \"./core/http/HttpServiceHelper\";\nimport {Router} from \"@angular/router\";\n\nimport version from '../../version.json';\nimport {ScrollMovingService} from \"./core/services/scroll-moving.service\";\nimport {AuthService} from \"./core/services/auth.service\";\nimport {SettingService} from \"./core/services/setting.service\";\n\ndeclare var config;\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n    title = 'ManagementApp';\n    appVersion: string;\n    accessToken: string;\n    loginFailedMsg: string;\n    isIframe: boolean;\n    loggedIn: boolean;\n    pageLoaded: boolean;\n\n    settingKey: string;\n\n    @ViewChild('panel', {read: ElementRef}) public panel: ElementRef<any>;\n\n    constructor(private broadcastService: BroadcastService,\n                private httpService: HttpServiceHelper,\n                private router: Router,\n                private authService: MsalService,\n                private evAuthService: AuthService,\n                private settingService: SettingService,\n                private scrollMovingService: ScrollMovingService) {\n\n        this.appVersion = version.version;\n        this.isIframe = window !== window.parent && !window.opener;\n        this.loginFailedMsg = '';\n        this.loggedIn = false;\n        this.pageLoaded = false;\n\n        this.settingKey = config.client_info.storeInfo.settingKey;\n\n        if (location.href.indexOf('access_token') < 0) {\n            this.checkLogin();\n        }\n    }\n\n    checkLogin() {\n        let curToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n        let expireTime = localStorage.getItem(config.client_info.storeInfo.exptime);\n        let nowTime = Math.floor(new Date().getTime() / 1000);\n        if (curToken) {\n            if (expireTime && +expireTime > nowTime) {\n                if (curToken) {\n                    this.getUserProfile(curToken);\n                } else {\n                    this.logout();\n                }\n            } else {\n                //alert('Expired, login again');\n                this.logout();\n            }\n        } else {\n            this.logout();\n        }\n    }\n\n    getUserProfile(curToken) {\n        this.httpService.httpGetRequest(curToken, config.client_info.apiURL.serverURL + '/authorize')\n            .subscribe((resp: any) => {\n                localStorage.setItem(config.client_info.storeInfo.username, this.authService.getUser().name);\n                this.pageLoaded = true;\n                this.loggedIn = true;\n                if (this.router.url == '/' || this.router.url == '/app/home') {\n                    this.router.navigateByUrl('/app/substation');\n                }\n            }, error => {\n                console.log('Http get request to MS Graph failed' + JSON.stringify(error));\n                this.logout();\n            });\n    }\n\n    login() {\n        this.loginFailedMsg = '';\n        this.authService.loginPopup(['user.read']);\n    }\n\n    logout() {\n        this.loggedIn = false;\n        this.accessToken = '';\n        this.pageLoaded = true;\n        this.clearLocalStorage();\n        let curURL = window.location.href;\n        if (curURL.indexOf('substation') > 0 ||\n            curURL.indexOf('partner') > 0 ||\n            curURL.indexOf('measurements') > 0 ||\n            curURL.indexOf('global-settings') > 0 ||\n            curURL.indexOf('virtual-substation') > 0 ||\n            curURL.indexOf('device-types') > 0) {\n            this.router.navigateByUrl('/app/home');\n        }\n    }\n\n    ngOnInit() {\n        let self = this;\n        this.broadcastService.subscribe('msal:loginSuccess', (idToken) => {\n            // console.log('login success ' + JSON.stringify(idToken));\n            console.log('login success', JSON.stringify(idToken));\n            // this.loggedIn = true;\n            this.pageLoaded = false;\n            // will work for acquireTokenSilent and acquireTokenPopup\n            this.authService.acquireTokenSilent([config.client_info.msal_info.reqScopes]).then(function (accessToken) {\n                localStorage.setItem(config.client_info.storeInfo.tokenKey, accessToken);\n                localStorage.setItem(config.client_info.storeInfo.username, '');\n                self.accessToken = accessToken;\n                self.setExpireTime();\n                self.getUserProfile(accessToken);\n            }).catch(function (err) {\n                let result = self.stringAllReplace(err, '\\\\r\\\\n', '<br>');\n                result = self.stringAllReplace(err, '\\\\r', '<br>');\n                result = self.stringAllReplace(err, '\\\\n', '<br>');\n                self.loginFailedMsg = result;\n                self.loggedIn = false;\n                self.pageLoaded = true;\n            });\n        });\n\n        this.broadcastService.subscribe('msal:loginFailure', (payload) => {\n            console.log('login failure ' + JSON.stringify(payload)); // _errorDesc\n            let rawMsg = (payload._error.length > payload._errorDesc.length) ? payload._error : payload._errorDesc;\n            let result = this.stringAllReplace(rawMsg, '\\\\r\\\\n', '<br>');\n            result = this.stringAllReplace(rawMsg, '\\\\r', '<br>');\n            result = this.stringAllReplace(rawMsg, '\\\\n', '<br>');\n            this.loginFailedMsg = result;\n            this.loggedIn = false;\n            this.pageLoaded = true;\n        });\n\n        this.scrollMovingService.getMovedScroll().subscribe(scrollInfo => {\n            setTimeout(function () {\n                let htmlElem: any;\n                if (scrollInfo.elem == 'partner-contact-list' ||\n                    scrollInfo.elem == 'partner-address-list' ||\n                    scrollInfo.elem == 'partner-substation-list') {\n                    htmlElem = document.getElementsByClassName(scrollInfo.elem);\n                } else {\n                    htmlElem = document.getElementsByClassName('mg-width-virtual');\n                }\n                if (htmlElem) {\n                    htmlElem[htmlElem.length - 1].scrollIntoView({\n                        behavior: \"smooth\",\n                        block: \"end\",\n                        inline: \"nearest\"\n                    });\n                }\n            }, 100);\n        });\n\n        this.evAuthService.getAuthInfo().subscribe(authInfo => {\n            if(!authInfo.login_st){\n                alert('Expired, login again');\n                console.log(authInfo);\n                this.logout();\n            }\n        });\n\n        this.settingService.getSettingInfo().subscribe(settingInfo => {\n            let oldSetting:any = localStorage.getItem(settingInfo.tbl);\n            console.log(settingInfo);\n            if (oldSetting) {\n                oldSetting = JSON.parse(oldSetting);\n                if (settingInfo.key == 'filter') {\n                    oldSetting.filter = !settingInfo.value;\n                } else {\n                    //This is visible features of column\n                    let prevColList = oldSetting.visible;\n                    if(settingInfo.value.st) {\n                        prevColList.push(settingInfo.value.col);\n                    } else {\n                        let indexOfCol = prevColList.indexOf(settingInfo.value.col);\n                        if (indexOfCol > -1) {\n                            prevColList.splice(indexOfCol, 1);\n                        }\n                    }\n                    oldSetting.visible = prevColList;\n                }\n                localStorage.setItem(settingInfo.tbl, JSON.stringify(oldSetting));\n            }\n        });\n\n\n    }\n\n    onLeftRightScroll() {\n        const htmlElem = document.getElementsByClassName('mg-width-virtual');\n        if (htmlElem) {\n            htmlElem[htmlElem.length - 1].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"end\"});\n        }\n    }\n\n    onForwardScroll() {\n        let parentViewTag: any;\n        let componentsList: any;\n        let curScrollPosX: number;\n        componentsList = document.getElementsByClassName('mg-app-component');\n        parentViewTag = document.getElementsByClassName('mg-app-content')[0];\n        curScrollPosX = parentViewTag.scrollLeft;\n        for (let i = 1; i < componentsList.length; i++) {\n            if (curScrollPosX < componentsList[i].offsetLeft) {\n                componentsList[i].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"start\"});\n                return;\n            }\n        }\n    }\n\n    onRightLeftScroll() {\n        const htmlElem = document.getElementsByClassName('mg-width-virtual');\n        htmlElem[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"start\"});\n    }\n\n    onBackwardScroll() {\n        let parentViewTag: any;\n        let componentsList: any;\n        let curScrollPosX: number;\n        componentsList = document.getElementsByClassName('mg-app-component');\n        parentViewTag = document.getElementsByClassName('mg-app-content')[0];\n        curScrollPosX = parentViewTag.scrollLeft;\n\n        for (let i = componentsList.length - 1; i > -1; i--) {\n            if ((curScrollPosX + parentViewTag.offsetWidth) > (componentsList[i].offsetLeft)) {\n                if (componentsList[i - 1]) {\n                    componentsList[i - 1].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"end\"});\n                }\n                return;\n            }\n        }\n    }\n\n    stringAllReplace(srcStr: string, search: string, replacement: string) {\n        return srcStr.split(search).join(replacement);\n    }\n\n    setExpireTime() {\n        let i: number;\n        for (i = 0; i < localStorage.length; i++) {\n            let value: string = localStorage.getItem(localStorage.key(i));\n            if ((value.indexOf('accessToken')) > -1 &&\n                (value.indexOf('idToken')) > -1 &&\n                (value.indexOf('expiresIn')) > -1) {\n                let expireTime = JSON.parse(value).expiresIn;\n                localStorage.setItem(config.client_info.storeInfo.exptime, expireTime);\n            }\n        }\n    }\n\n    clearLocalStorage() {\n        //don't delete key names with suffix\n        for (let key in localStorage){\n            if(key.indexOf('_width')<0 && key.indexOf('_setting')<0){\n                localStorage.removeItem(key);\n            }\n        }\n    }\n\n    ngOnDestroy() {\n    }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from \"@angular/forms\";\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {HttpServiceHelper} from './core/http/HttpServiceHelper';\nimport {LogLevel} from 'msal';\nimport {SubstationComponent} from './modules/pages/substation/substation.component';\nimport {PartnerComponent} from './modules/pages/partner/partner.component';\nimport {MeasurementsComponent} from './modules/pages/measurements/measurements.component';\nimport {HomeComponent} from './modules/pages/home/home.component';\nimport {SidebarComponent} from './modules/components/sidebar/sidebar.component';\nimport {BayTableComponent} from './modules/components/bay-table/bay-table.component';\nimport {BayFormComponent} from './modules/components/bay-form/bay-form.component';\nimport {DeviceTableComponent} from './modules/components/device-table/device-table.component';\nimport {DeviceFormComponent} from './modules/components/device-form/device-form.component';\n\nimport {SubstationTableComponent} from './modules/components/substation-table/substation-table.component';\nimport {SubstationFormComponent} from './modules/components/substation-form/substation-form.component';\nimport {MsalInterceptor, MsalModule} from '@azure/msal-angular';\n\nimport {BreadcrumbModule} from 'primeng/breadcrumb';\nimport {MenuModule} from 'primeng/menu';\nimport {TableModule} from 'primeng/table';\nimport {ButtonModule} from 'primeng/button';\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\nimport {InputTextModule} from 'primeng/inputtext';\nimport {DropdownModule} from 'primeng/dropdown';\nimport {DialogModule} from 'primeng/dialog';\nimport {OverlayPanelModule} from 'primeng/overlaypanel';\nimport {MultiSelectModule} from 'primeng/multiselect';\nimport {TriStateCheckboxModule} from 'primeng/tristatecheckbox';\nimport {CheckboxModule} from 'primeng/checkbox';\nimport {TooltipModule} from 'primeng/tooltip';\nimport {MessagesModule} from 'primeng/messages';\nimport {MessageModule} from 'primeng/message';\n\nimport {PartnerTableComponent} from './modules/components/partner-table/partner-table.component';\nimport {PartnerFormComponent} from './modules/components/partner-form/partner-form.component';\nimport {PartnerSubstationTableComponent} from './modules/components/partner-substation-table/partner-substation-table.component';\nimport {PartnerContactTableComponent} from './modules/components/partner-contact-table/partner-contact-table.component';\nimport {PartnerAddressTableComponent} from './modules/components/partner-address-table/partner-address-table.component';\nimport {MeasurementTableComponent} from './modules/components/measurement-table/measurement-table.component';\nimport {MeasurementFormComponent} from './modules/components/measurement-form/measurement-form.component';\nimport {DeviceMeasurementFormComponent} from './modules/components/device-measurement-form/device-measurement-form.component';\nimport {DeviceMeteringTableComponent} from './modules/components/device-metering-table/device-metering-table.component';\nimport {DeviceMeasurementTableComponent} from './modules/components/device-measurement-table/device-measurement-table.component';\nimport {DeviceTypeComponent} from './modules/pages/device-type/device-type.component';\nimport {DeviceTypeTableComponent} from './modules/components/device-type-table/device-type-table.component';\nimport {DeviceTypeFormComponent} from './modules/components/device-type-form/device-type-form.component';\nimport {GlobalSettingComponent} from './modules/components/global-setting/global-setting.component';\nimport { VirtualSubstationComponent } from './modules/pages/virtual-substation/virtual-substation.component';\nimport { VirtualSubstationTableComponent } from './modules/components/virtual-substation-table/virtual-substation-table.component';\nimport { VirtualSubstationFormComponent } from './modules/components/virtual-substation-form/virtual-substation-form.component';\nimport { PhysicalSubstationFormComponent } from './modules/components/physical-substation-form/physical-substation-form.component';\n\ndeclare var config;\n\nexport function loggerCallback(logLevel, message, piiEnabled) {\n    console.log('client logging' + message);\n}\n\nexport const protectedResourceMap: [string, string[]][] = [['https://graph.microsoft.com/v1.0/me', ['user.read']]];\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        SubstationComponent,\n        PartnerComponent,\n        MeasurementsComponent,\n        HomeComponent,\n        SidebarComponent,\n        SubstationTableComponent,\n        SubstationFormComponent,\n        BayTableComponent,\n        BayFormComponent,\n        DeviceTableComponent,\n        DeviceFormComponent,\n        PartnerTableComponent,\n        PartnerFormComponent,\n        PartnerSubstationTableComponent,\n        PartnerContactTableComponent,\n        PartnerAddressTableComponent,\n        MeasurementTableComponent,\n        MeasurementFormComponent,\n        DeviceMeasurementFormComponent,\n        DeviceMeteringTableComponent,\n        DeviceMeasurementTableComponent,\n        DeviceTypeComponent,\n        DeviceTypeTableComponent,\n        DeviceTypeFormComponent,\n        GlobalSettingComponent,\n        VirtualSubstationComponent,\n        VirtualSubstationTableComponent,\n        VirtualSubstationFormComponent,\n        PhysicalSubstationFormComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        HttpClientModule,\n        MenuModule,\n        TableModule,\n        ButtonModule,\n        BreadcrumbModule,\n        OverlayPanelModule,\n        ConfirmDialogModule,\n        InputTextModule,\n        DropdownModule,\n        DialogModule,\n        MultiSelectModule,\n        TriStateCheckboxModule,\n        CheckboxModule,\n        TooltipModule,\n        MessagesModule,\n        MessageModule,\n        MsalModule.forRoot({\n                clientID: config.client_info.msal_info.clientID,\n                authority: config.client_info.msal_info.authority,\n                validateAuthority: true,\n                redirectUri: config.client_info.msal_info.redirectUri,\n                cacheLocation: 'localStorage',\n                postLogoutRedirectUri: config.client_info.msal_info.postLogoutRedirectUri,\n                navigateToLoginRequestUrl: true,\n                popUp: false,\n                consentScopes: ['user.read', config.client_info.msal_info.consentScopes],\n                unprotectedResources: ['https://www.microsoft.com/en-us/'],\n                protectedResourceMap: protectedResourceMap,\n                logger: loggerCallback,\n                correlationId: '9843',\n                level: LogLevel.Info,\n                piiLoggingEnabled: true\n            }\n        ),\n    ],\n    providers: [HttpServiceHelper /*, {provide: HTTP_INTERCEPTORS, useClass: MsalInterceptor, multi: true }*/],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\n\ninterface ResponseData {\n    data: any;\n}\n\n@Injectable()\nexport class HttpServiceHelper {\n    constructor(private http: HttpClient) {\n    }\n\n    public httpAuthGetRequest(accessToken: string, url: string) {\n        const httpOptions = {\n            headers: {\n                'Content-Type':  'application/json',\n                'Authorization': 'Bearer ' + accessToken\n            }\n        };\n        return this.http.get<ResponseData>(url, httpOptions);\n    }\n\n    public httpGetRequest(accessToken: string, url: string) {\n        // https://stackoverflow.com/questions/45286764/angular-httpclient-doesnt-send-header\n        const httpOptions = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + accessToken\n            }\n        };\n        return this.http.get<ResponseData>(url, httpOptions);\n    }\n\n    public httpFileDownload(accessToken: string, url: string) {\n        const httpOptions = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + accessToken\n            },\n\n        };\n        return this.http.get<ResponseData>(url, {responseType: 'arraybuffer' as 'json', headers:httpOptions.headers});\n    }\n\n    public httpPostRequest(accessToken: string, url: string, postBody: any) {\n        const httpOptions = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + accessToken\n            }\n        };\n        return this.http.post<ResponseData>(url, postBody, httpOptions);\n    }\n\n    public httpFileUploadRequest(accessToken: string, url: string, fileContent: string) {\n        const httpOptions = {\n            headers: {\n                'Content-Type': 'text/plain',\n                'Authorization': 'Bearer ' + accessToken\n            }\n        };\n        return this.http.post<ResponseData>(url, fileContent, httpOptions);\n    }\n\n    public httpPutRequest(accessToken: string, url: string, putBody: any) {\n        const httpOptions = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + accessToken\n            }\n        };\n        return this.http.put<ResponseData>(url, putBody, httpOptions);\n    }\n\n    public httpDeleteRequest(accessToken: string, url: string) {\n        const httpOptions = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + accessToken\n            }\n        };\n        return this.http.delete<ResponseData>(url, httpOptions);\n    }\n}\n","export enum AddressRole {\r\n  registered = 'Registered Seat',\r\n  seat = 'Seat',\r\n  other = 'Other'\r\n}\r\n","export enum MsAggregation {\r\n    none = 'None',\r\n    sum = 'Sum',\r\n    average = 'Average',\r\n}\r\n","export enum PartnerRole {\r\n  owner = 'Owner',\r\n  primary = 'PrimaryOperator',\r\n  secondary = 'SecondaryOperator',\r\n  authority = 'Authority',\r\n  tso = 'TSO',\r\n  dso = 'DSO'\r\n}\r\n","export enum UserRole {\r\n    manager = 'Manager',\r\n    tech = 'Technical Contact',\r\n    finance = 'Financial Contact',\r\n    admin = 'Administrative Contact'\r\n}\r\n","export enum VirtualSubstationRole {\r\n    tech = 'Technical',\r\n    other = 'Other',\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    private subject = new Subject<any>();\n    public setAuthInfo(authInfo: any) {\n        this.subject.next(authInfo);\n    }\n    getAuthInfo(): Observable<any> {\n        return this.subject.asObservable();\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BayFormService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Communication between Bay table and Bay form element\n     * @param formMode // true=> Add mode, false=>Edit mode\n     * @param subMrId // Substation MrID\n     * @param formValue //Selected form data\n     */\n  public setBayFormInfo(formMode: boolean, subMrId: string, formValue: Bay) {\n    this.subject.next({type: formMode, subMrId:subMrId, value: formValue});\n  }\n\n  getBayFormInfo(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceFormService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Communication between Bay table and Bay form element\n     * @param formMode // true=> Add mode, false=>Edit mode\n     * @param bayMrId // Bay MrID\n     * @param formValue //Selected form data\n     */\n  public setDeviceFormInfo(formMode: boolean, bayMrId: string, formValue: Device) {\n    this.subject.next({type: formMode, bayMrId:bayMrId, value: formValue});\n  }\n\n  getDeviceFormInfo(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DeviceMsMtFormService {\n\n    private subject = new Subject<any>();\n\n    /**\n     * Communication between Device measurement/metering table and form element\n     * @param formMode // true=> Add mode, false=>Edit mode\n     * @param formValue //Selected form data\n     * @param name // component Identifier\n     * measurement=> service between device measurement and form\n     * metering=> service between device metering and form\n     */\n    public setDeviceMsMtFormInfo(formMode: boolean, formValue: any, name: string) {\n        this.subject.next({type: formMode, value: formValue,name:name});\n    }\n\n    getDeviceMsMtFormInfo(): Observable<any> {\n        return this.subject.asObservable();\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceTypeFormService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Communication between substation table and device type form element\n     * @param showMode // true=> show, false=>hidden\n     * @param formMode // true=> Add mode, false=>Edit mode\n     * @param formValue //Selected form data\n     */\n  public setDeviceTypeFormInfo(formMode: boolean, formValue: DeviceType,showMode:boolean) {\n    this.subject.next({type: formMode, value: formValue,showMode:showMode});\n  }\n\n  getDeviceTypeFormInfo(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExpandingBayService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Notification service for expanding Bay table\n     * @param mode // true=> Expanding , false=>Collapse\n     * @param substationId //Parent Substation Id\n     */\n  public setBayStatus(mode: boolean, substationId: string) {\n    this.subject.next({mode: mode, substationId: substationId});\n  }\n\n  getBayStatusInfo(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExpandingDeviceService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Notification service for updating Device table\n     * @param mode // true=> Expanding , false=>Collapse\n     * @param bayId //Parent Bay Id\n     */\n  public setDeviceStatus(mode: boolean, bayId: string) {\n    this.subject.next({mode: mode, bayId: bayId});\n  }\n\n  getDeviceStatusInfo(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ExpandingMsMtService {\n\n    private subject = new Subject<any>();\n\n    /**\n     * Notification service for expanding Device Measurement table\n     * @param mode // true=> Expanding , false=>Collapse\n     * @param id //Parent Device Id\n     * @param name //Component Identifier .. measurement/metering\n     */\n    public setDeviceMsMtStatus(mode: boolean, id: string, name: string) {\n        this.subject.next({mode: mode, id: id,name: name});\n    }\n\n    getDeviceMsMtStatusInfo(): Observable<any> {\n        return this.subject.asObservable();\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExpandingPartnerChildrenService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Notification service for expanding Contact table\n     * @param mode // true=> Expanding , false=>Collapse\n     * @param data //parent => children\n     * @param name //component name [contacts, addresses, substations]\n     */\n  public setPartnerChildrenStatus(mode: boolean, data: any, name: string) {\n    this.subject.next({mode: mode, data: data,name:name});\n  }\n\n  getPartnerChildrenInfo(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MeasurementFormService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Communication between substation table and measurement form element\n     * @param showMode // true=> show, false=>hidden\n     * @param formMode // true=> Add mode, false=>Edit mode\n     * @param formValue //Selected form data\n     */\n  public setMeasurementFormInfo(formMode: boolean, formValue: MeasurementType,showMode:boolean) {\n    this.subject.next({type: formMode, value: formValue,showMode:showMode});\n  }\n\n  getMeasurementFormInfo(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MeteringFormService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Communication between substation table and measurement form element\n     * @param showMode // true=> show, false=>hidden\n     * @param formMode // true=> Add mode, false=>Edit mode\n     * @param formValue //Selected form data\n     */\n  public setMeteringFormInfo(formMode: boolean, formValue: any,showMode:boolean, devId: string) {\n    this.subject.next({type: formMode, value: formValue,showMode:showMode, deviceId:devId});\n  }\n\n  getMeteringFormInfo(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Notification service for updating substation table\n     * @param elem // Navigation element, [sub-list, sub-form, bay-list, bay-form, dev-list, dev-form]\n     * @param st // true => show, false =>hide\n     * @param name // element id\n     */\n  public setNavInfo(elem: string,st:boolean, name: string) {\n    this.subject.next({elem:elem, st:st,name:name});\n  }\n  getNavInfo(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PartnerFormService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Communication between partner table and partner form element\n     * @param showMode // true=> show, false=>hidden\n     * @param formMode // true=> Add mode, false=>Edit mode\n     * @param formValue //Selected form data\n     */\n  public setPartnerFormInfo(formMode: boolean, formValue: Partner,showMode:boolean) {\n    this.subject.next({type: formMode, value: formValue,showMode:showMode});\n  }\n\n  getPartnerFormInfo(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ReadIcdService {\n\n    private subject = new Subject<any>();\n\n    /**\n     * Communication between Bay form and child component\n     * @param bayId // Bay MrID\n     */\n    public setBayInfo(bayId: string) {\n        this.subject.next({bayId: bayId});\n    }\n\n    getBayInfo(): Observable<any> {\n        return this.subject.asObservable();\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScrollMovingService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Notify Scroll Movement\n     * @param direction // true=> left - > right, falseL right->left;\n     * @param elem // HTML element\n     */\n  public setMovedScroll(direction:boolean,elem:string) {\n    this.subject.next({direction:direction,elem:elem});\n  }\n\n  getMovedScroll(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingService {\n\n    private subject = new Subject<any>();\n    public setSettingInfo(tblName: string, settingKey: string, settingValue: any) {\n        this.subject.next({tbl: tblName, key: settingKey, value: settingValue});\n    }\n    getSettingInfo(): Observable<any> {\n        return this.subject.asObservable();\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubFormService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Communication between substation table and substation form element\n     * @param showMode // true=> show, false=>hidden\n     * @param formMode // true=> Add mode, false=>Edit mode\n     * @param formValue //Selected form data\n     */\n  public setSubFormInfo(formMode: boolean, formValue: Substation,showMode:boolean) {\n    this.subject.next({type: formMode, value: formValue,showMode:showMode});\n  }\n\n  getSubFormInfo(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateBayService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Notification service for updating Bay table\n     * @param mode // true=> Add mode, false=>Edit mode\n     * @param mrid //Old Bay mrid\n     * @param newBay //New Bay Data\n     */\n  public setBayInfo(mode: boolean, mrid: string, newBay: any) {\n    this.subject.next({mode: mode, mrid: mrid, newBay:newBay });\n  }\n\n  getBayInfo(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateDeviceMsMrService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Notification service for updating device measurement/metering table\n     * @param mode // true=> Add mode, false=>Edit mode\n     * @param id //Old item id\n     * @param newItem //New Item Data\n     * @param name //Component Identifier , measurement/metering\n     */\n  public setDeviceMsMrInfo(mode: boolean, id: string, newItem: any, name: string) {\n    this.subject.next({mode: mode, id: id, newItem:newItem,name:name });\n  }\n\n  getDeviceMsMrInfo(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateDeviceTypeService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Notification service for updating device type table\n     * @param mode // true=> Add mode, false=>Edit mode\n     * @param mrid //Old Device Type mrid\n     * @param newDeviceType //New Device Type Data\n     */\n  public setDeviceTypeInfo(mode: boolean, mrid: string, newDeviceType: any) {\n    this.subject.next({mode: mode, mrid: mrid, newDeviceType:newDeviceType });\n  }\n  getDeviceTypeInfo(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateDeviceService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Notification service for updating Device table\n     * @param mode // true=> Add mode, false=>Edit mode\n     * @param mrid //Old Device mrid\n     * @param newDevice //New Device Data\n     */\n  public setDeviceInfo(mode: boolean, mrid: string, newDevice: any) {\n    this.subject.next({mode: mode, mrid: mrid, newDevice:newDevice });\n  }\n\n  getDeviceInfo(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateMeasurementTypeService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Notification service for updating measurement table\n     * @param mode // true=> Add mode, false=>Edit mode\n     * @param id //Old Measurement id\n     * @param newMsType //New Measurement Data\n     */\n  public setMeasurementInfo(mode: boolean, id: string, newMsType: any) {\n    this.subject.next({mode: mode, id: id, newMsType:newMsType });\n  }\n  getMeasurementTypeInfo(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateMeteringTypeService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Notification service for updating device metering table\n     * @param mode // true=> Add mode, false=>Edit mode\n     * @param id //Old Measurement id\n     * @param newMtType //New Metering Data\n     */\n  public setMeteringInfo(mode: boolean, id: string, newMtType: any) {\n    this.subject.next({mode: mode, id: id, newMtType:newMtType });\n  }\n  getMeteringTypeInfo(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdatePartnerService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Notification service for updating Partner table\n     * @param mode // true=> Add mode, false=>Edit mode\n     * @param mrid //Old Partner mrid\n     * @param newPartner //New Partner Data\n     */\n  public setPartnerInfo(mode: boolean, mrid: string, newPartner: any) {\n    this.subject.next({mode: mode, mrid: mrid, newPartner:newPartner });\n  }\n  getPartnerInfo(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateSubstationService {\n\n  private subject = new Subject<any>();\n\n    /**\n     * Notification service for updating substation table\n     * @param mode // true=> Add mode, false=>Edit mode\n     * @param mrid //Old Substation mrid\n     * @param newSub //New Substation Data\n     */\n  public setSubstationInfo(mode: boolean, mrid: string, newSub: any) {\n    this.subject.next({mode: mode, mrid: mrid, newSub:newSub });\n  }\n  getSubstationInfo(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjbGllbnQvYXBwL21vZHVsZXMvY29tcG9uZW50cy9iYXktZm9ybS9iYXktZm9ybS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"bay-form mg-op-form mg-app-component\\\" *ngIf=\\\"isEnabled\\\" id=\\\"bay-form\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n            <div class=\\\"card-title\\\">\\n                <h4>Bay Details</h4>\\n                <span (click)=\\\"onCloseComponent()\\\"><i class=\\\"fa fa-2x fa-close\\\"></i></span>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-3\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary op-btn-save\\\" (click)=\\\"onSaveFormData()\\\"\\n                            [disabled]=\\\"!isFormChanged\\\">{{ (formMode)?'Add':'Save' }}\\n                    </button>\\n                </div>\\n                <div class=\\\"ui-g-9\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success op-btn-details\\\" (click)=\\\"onDevicesTable()\\\"\\n                            *ngIf=\\\"!formMode\\\">Devices\\n                    </button>\\n                    <button type=\\\"button\\\" pButton\\n                            class=\\\"op-btn-details\\\"\\n                            icon=\\\"fa {{isReadingICD?'fa-spinner fa-spin':'fa-upload'}}\\\"\\n                            (click)=\\\"onReadICD()\\\"\\n                            label=\\\"Read ICD\\\"\\n                            *ngIf=\\\"!formMode\\\">\\n                    </button>\\n                    <input type=\\\"file\\\" hidden\\n                           id=\\\"file\\\" accept='text/plain,.icd'\\n                           (change)=\\\"handleFileInput($event.target.files)\\\">\\n                    <button type=\\\"button\\\" pButton\\n                            icon = \\\"fa fa-download\\\"\\n                            class=\\\"op-btn-details\\\"\\n                            label=\\\"Generate PLC\\\"\\n                            (click)=\\\"onGeneratePLC()\\\"\\n                            *ngIf=\\\"!formMode\\\">\\n                    </button>\\n                </div>\\n            </div>\\n            <div class=\\\"clearfix\\\"></div>\\n            <div class=\\\"form-content-wrap\\\">\\n                <div class=\\\"ui-g\\\">\\n                    <div class=\\\"ui-g-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"mrid\\\">MrID</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'mg-error':(mrID.trim().length == 0)}\\\"\\n                                   (ngModelChange)=\\\"mrIDChange($event)\\\"\\n                                   [ngModel]=\\\"mrID\\\" id=\\\"mrid\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"name\\\">Name</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"nameChange($event)\\\"\\n                                   [ngClass]=\\\"{'mg-error':(mrID.trim().length == 0)}\\\"\\n                                   [ngModel]=\\\"name\\\" id=\\\"name\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g\\\">\\n                    <div class=\\\"ui-g-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"description\\\">Description</label>\\n                            <input name=\\\"description\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"descriptionChange($event)\\\"\\n                                   [ngModel]=\\\"description\\\" id=\\\"description\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g mg-group-box\\\">\\n                    <div class=\\\"mg-group-box-title\\\">\\n                        <h5 class=\\\"\\\">Location</h5>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"latitude\\\">Latitude</label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"latitudeChange($event)\\\"\\n                                   [ngModel]=\\\"latitude\\\" id=\\\"latitude\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"longitude\\\">Longitude</label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"longitudeChange($event)\\\"\\n                                   [ngModel]=\\\"longitude\\\" id=\\\"longitude\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"altitude\\\">Altitude</label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"altitudeChange($event)\\\"\\n                                   [ngModel]=\\\"altitude\\\" id=\\\"altitude\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <p-confirmDialog header=\\\"Warning!\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\nimport {BayFormService} from \"../../../core/services/bay-form.service\";\nimport {ScrollMovingService} from \"../../../core/services/scroll-moving.service\";\nimport {UpdateBayService} from \"../../../core/services/update-bay.service\";\nimport {ExpandingDeviceService} from \"../../../core/services/expanding-device.service\";\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {ConfirmationService} from \"primeng/api\";\nimport {ReadIcdService} from \"../../../core/services/read-icd.service\";\n\ndeclare var config;\n\n@Component({\n    selector: 'app-bay-form',\n    templateUrl: './bay-form.component.html',\n    styleUrls: ['./bay-form.component.css'],\n    providers: [ConfirmationService],\n})\nexport class BayFormComponent implements OnInit {\n\n    formMode: boolean; //True = >add mode, False=> edit mode\n    isEnabled: boolean;\n    formData: any;\n\n    substationMrID: string;\n\n    mrID: string;\n    name: string;\n    description: string;\n\n    latitude: number;\n    longitude: number;\n    altitude: number;\n\n    isFormChanged: boolean;\n\n    accessToken: string;\n    apiURL: string;\n\n    isReadingICD: boolean;\n\n    constructor(private httpService: HttpServiceHelper,\n                private bayFormService: BayFormService,\n                private scrollService: ScrollMovingService,\n                private updateBayService: UpdateBayService,\n                private expandDeviceService: ExpandingDeviceService,\n                private navService: NavigationService,\n                private readIcdService: ReadIcdService,\n                private confirmationService: ConfirmationService) {\n\n        this.isFormChanged = false;\n\n        this.formMode = true;\n        this.isEnabled = false;\n        this.isReadingICD = false;\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n        this.initFormFields();\n\n        this.apiURL = `${config.client_info.apiURL.serverURL}/bays`;\n\n    }\n\n    ngOnInit() {\n        this.bayFormService.getBayFormInfo().subscribe(bayFormInfo => {\n            this.isEnabled = true;\n            this.formData = bayFormInfo.value;\n            this.substationMrID = bayFormInfo.subMrId;\n            this.formMode = bayFormInfo.type;\n            if (this.formMode) { //Add Mode\n                this.initFormData();\n            }\n            this.setBayDetails();\n        })\n    }\n\n    setBayDetails() {\n        this.substationMrID = this.formData.substationmrid;\n        this.mrID = this.formData.mrid;\n        this.description = this.formData.description;\n        this.latitude = this.formData.location.latitude;\n        this.longitude = this.formData.location.longitude;\n        this.altitude = this.formData.location.altitude;\n        this.name = this.formData.name;\n        this.isFormChanged = false;\n    }\n\n    initFormFields() {\n        this.mrID = this.description = this.name = '';\n        this.latitude = this.longitude = this.altitude = 0;\n    }\n\n    initFormData() {\n        this.formData = {\n            substationmrid: this.substationMrID,\n            mrid: '',\n            name: '',\n            location: {latitude: 0, longitude: 0, altitude: 0},\n            description: '',\n        }\n    }\n\n    onDevicesTable() {\n        let self = this;\n        this.navService.setNavInfo('dev-list', true, this.name);\n        setTimeout(function () {\n            self.expandDeviceService.setDeviceStatus(true, self.formData.mrid);\n            self.scrollService.setMovedScroll(true, 'device-list');\n        }, 100);\n    }\n\n    saveBlobData(data, fileName) {\n        let a: any = document.createElement(\"a\");\n        document.body.appendChild(a);\n        a.style = \"display: none\";\n        let blob = new Blob([data], {type: \"octet/stream\"}),\n            url = window.URL.createObjectURL(blob);\n        a.href = url;\n        a.download = fileName;\n        a.click();\n        window.URL.revokeObjectURL(url);\n    }\n\n    onGeneratePLC() {\n        // window.location.href = `${config.client_info.apiURL.serverURL}/generateplc/${this.formData.mrid}`;\n        let apiurl = `${config.client_info.apiURL.serverURL}/generateplc/${this.formData.mrid}`;\n        this.httpService.httpFileDownload(this.accessToken, apiurl).subscribe((resp) => {\n            this.saveBlobData(resp, 'generated.plc')\n        }, error => {\n            this.httpErrorHandler(error);\n        })\n    }\n\n    handleFileInput(files: FileList) {\n        let self = this;\n        let readICDURL = `${config.client_info.apiURL.serverURL}/readicd/${this.formData.mrid}`;\n        let fileBody: any = files.item(0);\n        let reader:any = new FileReader();\n        this.isReadingICD = true;\n        reader.onload = function(){\n            let fileContent:string = reader.result;\n            self.httpService.httpFileUploadRequest(self.accessToken, readICDURL, fileContent).subscribe(resBody => {\n                console.log('Read ICD Successfully');\n                self.isReadingICD = false;\n                let fileTag:any;\n                fileTag = document.getElementById('file');\n                fileTag.value = '';\n                self.readIcdService.setBayInfo(self.formData.mrid);\n            },error => {\n                self.httpErrorHandler(error);\n                self.isReadingICD = false;\n            })\n        };\n        reader.readAsText(fileBody);\n\n    }\n\n    onReadICD() {\n        document.getElementById('file').click();\n    }\n\n    httpErrorHandler(ev: any) {\n        switch (ev.status) {\n            case 400:\n                let msgbody: string;\n                for(let prop in ev.error) {\n                    if(ev.error.hasOwnProperty(prop)){\n                        msgbody += `${prop} : ${ev.error[prop]}\\n`;\n                    }\n                }\n                msgbody += '\\n';\n                alert(msgbody);\n                break;\n            default:\n                alert(ev.error);\n\n        }\n        console.error(ev);\n    }\n\n    onSaveFormData() {\n        if (this.checkValidation()) {\n            let url = config.client_info.apiURL.serverURL;\n            let postBody = {\n                substationmrid: this.substationMrID,\n                mrid: this.mrID,\n                name: this.name,\n                location: {\n                    latitude: this.latitude,\n                    longitude: this.longitude,\n                    altitude: this.altitude\n                },\n                description: this.description,\n            };\n            if (this.formMode) { //Add mode\n                let addBayURL = this.apiURL + '?substationId=' + this.substationMrID;\n                this.httpService.httpPostRequest(this.accessToken, addBayURL, postBody)\n                    .subscribe((res: any) => {\n                        this.formData = postBody;\n                        this.updateBayService.setBayInfo(true, null, postBody);\n                        this.initFormData();\n                        this.initFormFields();\n                        this.isFormChanged = false;\n                        console.log('Success in add substation', postBody);\n                    }, err => {\n                        this.formData = {};\n                        console.log('Error in add substation', err);\n                    });\n\n            } else { //Edit mode\n                let bayUpdateURL = this.apiURL + '/' + this.formData.mrid + '?substationId=' + this.substationMrID;\n                this.httpService.httpPutRequest(this.accessToken, bayUpdateURL, postBody)\n                    .subscribe((res: any) => {\n                        this.updateBayService.setBayInfo(false, this.formData.mrid, postBody);\n                        this.formData = postBody;\n                        this.isFormChanged = false;\n                        console.log('Success in update substations', postBody);\n                    }, err => {\n                        this.formData = {};\n                        console.log('Error in update substations', err);\n                    });\n            }\n\n        }\n    }\n\n    isChanged() {\n        let opSaveBtn:any;\n        opSaveBtn = document.getElementsByClassName('op-btn-save');\n        if(opSaveBtn){\n            let disabledBtnCnt = 0;\n            for(let i = 0 ;i<opSaveBtn.length; i++){\n                if(opSaveBtn[i].disabled){\n                    disabledBtnCnt ++;\n                }\n            }\n            if(disabledBtnCnt != opSaveBtn.length){\n                return true;\n            }\n        }else{\n            return false;\n        }\n    }\n\n    closeMe() {\n        this.navService.setNavInfo('bay-list', true, this.formData.substationmrid);\n        this.scrollService.setMovedScroll(true, '');\n        this.initFormData();\n        this.initFormFields();\n    }\n\n    onCloseComponent() {\n        let self = this;\n        if(this.isChanged()){\n            this.confirmationService.confirm({\n                message: 'Changes you made may not be saved.',\n                accept: () => {\n                    self.closeMe();\n                },\n                reject: () => {\n\n                }\n            });\n        }else{\n            this.closeMe();\n        }\n    }\n\n    checkValidation() {\n        if (this.mrID.trim() == \"\") {\n            return false;\n        }\n        if (this.name.trim() == \"\") {\n            return false;\n        }\n        return true;\n    }\n\n    checkFormChange() {\n        this.isFormChanged = (this.mrID != this.formData.mrid ||\n            this.longitude != this.formData.location.longitude ||\n            this.latitude != this.formData.location.latitude ||\n            this.altitude != this.formData.location.altitude ||\n            this.name != this.formData.name ||\n            this.description != this.formData.description);\n    }\n\n    mrIDChange(newVal: string) {\n        this.mrID = newVal;\n        this.checkFormChange();\n    }\n\n    descriptionChange(newVal: string) {\n        this.description = newVal;\n        this.checkFormChange();\n    }\n\n    nameChange(newVal: string) {\n        this.name = newVal;\n        this.checkFormChange();\n    }\n\n    latitudeChange(newVal: number) {\n        this.latitude = newVal;\n        this.checkFormChange();\n    }\n\n    longitudeChange(newVal: number) {\n        this.longitude = newVal;\n        this.checkFormChange();\n    }\n\n    altitudeChange(newVal: number) {\n        this.altitude = newVal;\n        this.checkFormChange();\n    }\n\n}\n","module.exports = \".bay-list {\\r\\n    width: 1200px;\\r\\n}\\r\\n.bay-list:after {\\r\\n    content: \\\"\\\";\\r\\n    display: block;\\r\\n    position: absolute;\\r\\n    right: -20px;\\r\\n    width: 20px;\\r\\n    height: 1px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL2JheS10YWJsZS9iYXktdGFibGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7QUFDakI7QUFDQTtJQUNJLFdBQVc7SUFDWCxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixXQUFXO0lBQ1gsV0FBVztBQUNmIiwiZmlsZSI6ImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL2JheS10YWJsZS9iYXktdGFibGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5iYXktbGlzdCB7XHJcbiAgICB3aWR0aDogMTIwMHB4O1xyXG59XHJcbi5iYXktbGlzdDphZnRlciB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICByaWdodDogLTIwcHg7XHJcbiAgICB3aWR0aDogMjBweDtcclxuICAgIGhlaWdodDogMXB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"bay-list card mg-app-component\\\" *ngIf=\\\"isEnabled\\\" id=\\\"{{tableId}}\\\">\\n    <div class=\\\"content-loading\\\" *ngIf=\\\"!contentLoaded\\\">\\n        <img src=\\\"../../../../assets/img/loading.svg\\\">\\n    </div>\\n    <div class=\\\"card-header\\\">\\n        <div class=\\\"card-title\\\">\\n            <h4>Bays</h4>\\n            <span (click)=\\\"onCloseComponent()\\\"><i class=\\\"fa fa-2x fa-close\\\"></i></span>\\n        </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"table-setting-bar\\\">\\n            <div class=\\\"dropdown mg-dropdown-area\\\" >\\n                <div class=\\\"drop-down-backdrop\\\" (click)=\\\"isShowSetting=false\\\" *ngIf=\\\"isShowSetting\\\"></div>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle mg-toggle-btn\\\"\\n                        pTooltip=\\\"Column Setting\\\"  tooltipPosition=\\\"top\\\"\\n                        (click)=\\\"isShowSetting = !isShowSetting\\\">\\n                    <i class=\\\"fa fa-cog\\\"></i>\\n                </button>\\n                <div class=\\\"dropdown-menu mg-dropdown-menu\\\" *ngIf=\\\"isShowSetting\\\">\\n                    <div style=\\\"text-align:left\\\">\\n                        <table>\\n                            <thead>\\n                            <tr>\\n                                <th>Visible</th>\\n                                <th>Column</th>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n                            <tr *ngFor=\\\"let baycol of bayCols\\\">\\n                                <td><p-checkbox binary=\\\"true\\\" value=\\\"true\\\" [disabled]=\\\"baycol.visibility && curSelColsCnt == 1\\\"\\n                                                (onChange)=\\\"onChangeVisibility(baycol)\\\"\\n                                                [(ngModel)]=\\\"baycol.visibility\\\">\\n                                </p-checkbox></td>\\n                                <td>{{baycol.header}}</td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n            <button class=\\\"btn filter-items\\\" (click)=\\\"onChangeFilter()\\\"\\n                    pTooltip=\\\"{{ (isHideFilter)?'On Filter':'Off Filter' }}\\\"  tooltipPosition=\\\"top\\\"\\n                    [ngClass]=\\\"{'btn-primary':!isHideFilter, 'btn-secondary':isHideFilter}\\\" >\\n                <i class=\\\"fa fa-filter\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-danger delete-item\\\"\\n                    pTooltip=\\\"Delete Rows\\\"  tooltipPosition=\\\"top\\\"\\n                    (click)=\\\"onDeleteRows()\\\" [disabled]=\\\"selectedRows.length == 0\\\">\\n                <i class=\\\"fa fa-trash\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-primary add-item\\\" (click)=\\\"onAddNewBay()\\\">+ Add New</button>\\n            <div class=\\\"clearfix\\\"></div>\\n        </div>\\n        <p-table #dt sortMode=\\\"multiple\\\"\\n                 [value]=\\\"bays\\\"\\n                 [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\n                 [totalRecords]=\\\"bays.length\\\"\\n                 [(selection)]=\\\"selectedRows\\\"\\n                 selectionMode=\\\"multiple\\\"\\n                 [resizableColumns]=\\\"true\\\"\\n                 columnResizeMode=\\\"expand\\\"\\n                 (onColResize) = \\\"onColResize($event)\\\"\\n                 (onHeaderCheckboxToggle)=\\\"selectAllRows($event)\\\"\\n                 (onRowSelect)=\\\"onRowSelect($event)\\\" (onRowUnselect)=\\\"onRowUnselect($event)\\\">\\n            <ng-template pTemplate=\\\"header\\\">\\n                <tr>\\n                    <th class=\\\"mg-item-checkbox\\\">\\n                        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\\n                    </th>\\n                    <th class=\\\"th-id-wrap\\\"\\n                        *ngFor=\\\"let baycol of bayCols\\\"\\n                        [ngClass]=\\\"{'mg-hide': !baycol.visibility}\\\"\\n                        [pSortableColumn]=\\\" (baycol.group != '')? baycol.group + '.' + baycol.field: baycol.field\\\" pResizableColumn>\\n                        {{baycol.header}}\\n                        <p-sortIcon [field]=\\\"baycol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                    </th>\\n                </tr>\\n                <tr [ngClass]=\\\"{'mg-hide':isHideFilter}\\\">\\n                    <th></th>\\n                    <th *ngFor=\\\"let baycol of bayCols\\\"\\n                        [ngClass]=\\\"{'mg-hide':!baycol.visibility}\\\"\\n                        [ngSwitch]=\\\"baycol.field\\\" >\\n                        <input *ngSwitchCase=\\\"baycol.field\\\" pInputText type=\\\"text\\\"\\n                               (input)=\\\"onTblFilter($event, baycol, dt)\\\">\\n                    </th>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"body\\\" let-bay>\\n                <tr>\\n                    <td>\\n                        <p-tableCheckbox [value]=\\\"bay\\\"></p-tableCheckbox>\\n                    </td>\\n                    <td *ngFor=\\\"let baycol of bayCols\\\"  (click)=\\\"editBay(bay)\\\"\\n                        [ngClass]=\\\"{'mg-hide':!baycol.visibility}\\\">\\n                        {{ (baycol.group != '')? bay[baycol.group][baycol.field]: bay[baycol.field]}}\\n                    </td>\\n                </tr>\\n            </ng-template>\\n        </p-table>\\n    </div>\\n    <p-confirmDialog header=\\\"Warning!\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\nimport {ScrollMovingService} from \"../../../core/services/scroll-moving.service\";\n\nimport {BayFormService} from \"../../../core/services/bay-form.service\";\nimport {UpdateBayService} from \"../../../core/services/update-bay.service\";\nimport {ExpandingBayService} from \"../../../core/services/expanding-bay.service\";\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {forkJoin} from \"rxjs\";\nimport {ConfirmationService} from \"primeng/api\";\nimport {SettingService} from \"../../../core/services/setting.service\";\n\ndeclare function checkTable(tblId, tdInfo): any;\ndeclare function initTable(tblId): any;\ndeclare function readTable(tblId): any;\ndeclare function updateTableWidth(tblName, tdInfo): any;\ndeclare var config;\n\n@Component({\n    selector: 'app-bay-table',\n    templateUrl: './bay-table.component.html',\n    styleUrls: ['./bay-table.component.css'],\n    providers: [ConfirmationService]\n})\nexport class BayTableComponent implements OnInit {\n\n    isEnabled: boolean;\n    substationId: string;\n    bays: Array<Bay>;\n    bayCols: any[];\n\n    locationCols: any[];\n\n    selectedRows: Array<Bay>;\n    accessToken: string;\n    apiURL: string;\n\n    contentLoaded: boolean;\n    isHideFilter: boolean;\n\n    isShowSetting: boolean;\n    curSelColsCnt: number;\n    tableId: string;\n    tableSettingName: string;\n    \n    constructor(\n        private bayFormService: BayFormService,\n        private httpService: HttpServiceHelper,\n        private scrollService: ScrollMovingService,\n        private updateBayService: UpdateBayService,\n        private expandBayService: ExpandingBayService,\n        private settingService: SettingService,\n        private navService: NavigationService,\n        private confirmationService: ConfirmationService) {\n\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n        this.contentLoaded = false;\n        this.isEnabled = false;\n        this.substationId = '';\n        this.bays = [];\n        this.isHideFilter = false;\n        this.selectedRows = [];\n        this.apiURL = `${config.client_info.apiURL.serverURL}/bays`;\n        \n        this.tableId = 'bay-list';\n        this.tableSettingName = this.tableId +'_setting';\n        this.isShowSetting = false;\n        this.bayCols = [\n            {field: 'mrid', header: 'MrId', group:''},\n            {field: 'name', header: 'Name', group:''},\n            {field: 'description', header: 'Description', group:''},\n            {field: 'latitude', header: 'Location.Lat', group:'location'},\n            {field: 'longitude', header: 'Location.Lon', group:'location'},\n            {field: 'altitude', header: 'Location.Alt', group:'location'},\n        ];\n        \n    }\n\n    ngOnInit() {\n\n        this.expandBayService.getBayStatusInfo().subscribe(bayStatus => {\n            this.isEnabled = bayStatus.mode;\n            this.substationId = bayStatus.substationId;\n            this.getBays();\n        });\n\n        this.updateBayService.getBayInfo().subscribe(updateInfo => {\n            if (updateInfo.mode) {\n                console.log(updateInfo.newBay);\n                this.bays.push(updateInfo.newBay);\n            } else {\n                for (let i = 0; i < this.bays.length; i++) {\n                    if (this.bays[i].mrid == updateInfo.mrid) {\n                        this.bays[i] = updateInfo.newBay;\n                    }\n                }\n            }\n        });\n\n        this.initTableSetting();\n    }\n\n    getBays() {\n        let bayIdList = [];\n        let promiseList = [];\n        const getBayURL = `${config.client_info.apiURL.serverURL}/substations/${this.substationId}/bays`;\n        this.httpService.httpGetRequest(this.accessToken, getBayURL)\n            .subscribe((res: any) => {\n                bayIdList = res;\n                for (let i = 0; i < bayIdList.length; i++) {\n                    let bayDetailURL = this.apiURL + '/' + bayIdList[i];\n                    promiseList.push(this.httpService.httpGetRequest(this.accessToken, bayDetailURL));\n                }\n                if (bayIdList.length > 0) {\n                    forkJoin(promiseList).subscribe(results => {\n                        this.bays = results;\n                        this.contentLoaded = true;\n                        console.log('Success in bay listing', res);\n                    }, err => {\n                        console.error(\"Can't get Bay Details\", err);\n                        this.bays = [];\n                        this.contentLoaded = true;\n                    });\n                } else {\n                    console.warn('Empty Bay List');\n                    this.bays = [];\n                    this.contentLoaded = true;\n                }\n            }, err => {\n                this.bays = [];\n                this.contentLoaded = true;\n                console.error('Error in bays listing', err);\n            });\n    }\n    isChanged() {\n        let opSaveBtn:any;\n        opSaveBtn = document.getElementsByClassName('op-btn-save');\n        if(opSaveBtn){\n            let disabledBtnCnt = 0;\n            for(let i = 0 ;i<opSaveBtn.length; i++){\n                if(opSaveBtn[i].disabled){\n                    disabledBtnCnt ++;\n                }\n            }\n            if(disabledBtnCnt != opSaveBtn.length){\n                return true;\n            }\n        }else{\n            return false;\n        }\n    }\n\n    closeMe() {\n        this.navService.setNavInfo('sub-form',true, this.substationId);\n        this.scrollService.setMovedScroll(true,'');\n        this.bays = [];\n    }\n\n    onCloseComponent() {\n        let self = this;\n        if(this.isChanged()){\n            this.confirmationService.confirm({\n                message: 'Changes you made may not be saved.',\n                accept: () => {\n                    self.closeMe();\n                },\n                reject: () => {\n\n                }\n            });\n        }else{\n            this.closeMe();\n        }\n    }\n\n    onDeleteRows() {\n        let bayIds = [];\n        let promiseList = [];\n        this.contentLoaded = false;\n        for (let i = 0; i < this.selectedRows.length; i++) {\n            bayIds.push(this.selectedRows[i].mrid);\n            let deleteBayURL = this.apiURL + '/' + this.selectedRows[i].mrid;\n            promiseList.push(this.httpService.httpDeleteRequest(this.accessToken, deleteBayURL));\n        }\n        if(bayIds.length>0){\n            forkJoin(promiseList).subscribe(results => {\n                let leftBays = [];\n                for (let i = 0; i < this.bays.length; i++) {\n                    if (bayIds.indexOf(this.bays[i].mrid) < 0) {\n                        leftBays.push(this.bays[i]);\n                    }\n                }\n                this.bays = leftBays;\n                this.selectedRows = [];\n                this.contentLoaded = true;\n                console.log('Success in substation Deleting', results);\n            }, err =>{\n                this.bays = [];\n                this.contentLoaded = true;\n                console.error(\"Can't delete bay list\", err);\n            });\n        }else{\n            console.warn('No Selected Bays');\n        }\n    }\n\n    editBay(bay) {\n        let self = this;\n        this.navService.setNavInfo('bay-form', true, bay.mrid);\n        setTimeout(function () {\n            self.bayFormService.setBayFormInfo(false, self.substationId, bay);\n            self.scrollService.setMovedScroll(true, 'bay-form');\n        }, 100);\n    }\n\n    onAddNewBay() {\n        let self = this;\n        this.navService.setNavInfo('bay-form', true, '');\n        setTimeout(function () {\n            self.bayFormService.setBayFormInfo(true, self.substationId, null);\n            self.scrollService.setMovedScroll(true, 'bay-form');\n        }, 100);\n    }\n\n    onRowSelect(event) {\n        console.log(this.selectedRows);\n    }\n\n    onRowUnselect(event) {\n        console.log(this.selectedRows);\n    }\n\n    selectAllRows(event) {\n        if (event.checked) {\n            // alert('all rows selected');\n            console.log(this.selectedRows);\n        } else {\n            // alert('all rows diselected');\n        }\n    }\n// ====================================================\n    initTableSetting() {\n\n        readTable(this.tableId);\n        let tblSettingStr = localStorage.getItem(this.tableSettingName);\n        let settingInfo: any;\n        if(tblSettingStr) {\n            settingInfo = JSON.parse(tblSettingStr);\n        } else {\n            //Write New Setting\n            settingInfo = { filter: true};\n            settingInfo.visible = [\n                'MrId','Name','Description',\n                'Location.Lat','Location.Lon','Location.Alt',\n            ];\n            localStorage.setItem(this.tableSettingName, JSON.stringify(settingInfo));\n        }\n\n        this.isHideFilter = !settingInfo.filter;\n        this.bayCols = this.checkColVisibility(this.bayCols, settingInfo.visible);\n        this.curSelColsCnt = settingInfo.visible.length;\n    }\n\n    checkColVisibility(colList: any, visibleColList: any) {\n\n        for(let i = 0; i<colList.length; i++) {\n            colList[i].visibility = visibleColList.indexOf(colList[i].header)>-1;\n        }\n        return colList;\n    }\n\n    onChangeVisibility(item) {\n        checkTable(this.tableId, item);\n        if(item.visibility){\n            this.curSelColsCnt += 1;\n        } else {\n            this.curSelColsCnt -= 1;\n        }\n        this.settingService.setSettingInfo(this.tableSettingName,'visibility', {col:item.header,st:item.visibility})\n    }\n\n    onTblFilter(ev, item, dt) {\n        let field = (item.group != '')? item.group + '.' + item.field: item.field;\n        dt.filter(ev.target.value,  field, item.filterMatchMode);\n    }\n\n    onChangeFilter() {\n        this.isHideFilter = !this.isHideFilter;\n        this.settingService.setSettingInfo(this.tableSettingName,'filter', this.isHideFilter);\n    }\n\n    onColResize($ev) {\n        updateTableWidth(this.tableId, $ev);\n    }\n}\n","module.exports = \".op-btn-details {\\r\\n    margin-right: 10px;\\r\\n}\\r\\n.mg-op-form {\\r\\n    width: 760px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL2RldmljZS1mb3JtL2RldmljZS1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLFlBQVk7QUFDaEIiLCJmaWxlIjoiY2xpZW50L2FwcC9tb2R1bGVzL2NvbXBvbmVudHMvZGV2aWNlLWZvcm0vZGV2aWNlLWZvcm0uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5vcC1idG4tZGV0YWlscyB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbn1cclxuLm1nLW9wLWZvcm0ge1xyXG4gICAgd2lkdGg6IDc2MHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"dev-form mg-op-form mg-app-component\\\" *ngIf=\\\"isEnabled\\\" id=\\\"dev-form\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n            <div class=\\\"card-title\\\">\\n                <h4>Device Details</h4>\\n                <span (click)=\\\"onCloseComponent()\\\"><i class=\\\"fa fa-2x fa-close\\\"></i></span>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-6\\\">\\n                    <button type=\\\"button\\\" class=\\\"dev-form-btn btn btn-primary op-btn-save\\\" (click)=\\\"onSaveFormData()\\\"\\n                            [disabled]=\\\"!isFormChanged\\\">{{ (formMode)?'Add':'Save' }}\\n                    </button>\\n                </div>\\n                <div class=\\\"ui-g-6\\\">\\n                    <button type=\\\"button\\\" *ngIf=\\\"!formMode\\\"\\n                            class=\\\"op-btn-details btn btn-success\\\" (click)=\\\"onMeasurements()\\\">Measurements</button>\\n                    <button type=\\\"button\\\" *ngIf=\\\"!formMode\\\"\\n                            class=\\\"op-btn-details btn btn-success\\\" (click)=\\\"onMeterings()\\\">Meterings</button>\\n                </div>\\n                <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"form-content-wrap\\\">\\n                <div class=\\\"ui-g\\\">\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"mrid\\\">MrID</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'mg-error':(mrID.trim().length == 0)}\\\"\\n                                   (ngModelChange)=\\\"mrIDChange($event)\\\"\\n                                   [ngModel]=\\\"mrID\\\" id=\\\"mrid\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"name\\\">Name</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"nameChange($event)\\\"\\n                                   [ngClass]=\\\"{'mg-error':(name.trim().length == 0)}\\\"\\n                                   [ngModel]=\\\"name\\\" id=\\\"name\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"description\\\">Description</label>\\n                            <input name=\\\"description\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"descriptionChange($event)\\\"\\n                                   [ngModel]=\\\"description\\\" id=\\\"description\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g mg-group-box\\\">\\n                    <div class=\\\"mg-group-box-title\\\">\\n                        <h5 class=\\\"\\\">Location</h5>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"latitude\\\">Latitude</label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"latitudeChange($event)\\\"\\n                                   [ngModel]=\\\"latitude\\\" id=\\\"latitude\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"longitude\\\">Longitude</label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"longitudeChange($event)\\\"\\n                                   [ngModel]=\\\"longitude\\\" id=\\\"longitude\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"altitude\\\">Altitude</label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"altitudeChange($event)\\\"\\n                                   [ngModel]=\\\"altitude\\\" id=\\\"altitude\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g mg-group-box\\\">\\n                    <div class=\\\"mg-group-box-title\\\">\\n                        <h5 class=\\\"\\\">Device Type</h5>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <p>MrID : {{selectedDeviceTypeRow.mrid}}</p>\\n                        <p>Vendor : {{selectedDeviceTypeRow.vendor}}</p>\\n                        <p>SerNum : {{selectedDeviceTypeRow.serNum}}</p>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <p>HwRev : {{selectedDeviceTypeRow.hwRev}}</p>\\n                        <p>SwRev : {{selectedDeviceTypeRow.swRev}}</p>\\n                        <p>Model : {{selectedDeviceTypeRow.model}}</p>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <p>Owner : {{selectedDeviceTypeRow.owner}}</p>\\n                        <p>PrimeOps : {{selectedDeviceTypeRow.primeOps}}</p>\\n                        <p>SecondOps : {{selectedDeviceTypeRow.secondOps}}</p>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-info mg-show-popup-tbl\\\" (click)=\\\"onShowDeviceTypesDialog()\\\">\\n                            <i class=\\\"fa fa-ellipsis-h\\\"></i>\\n                        </button>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g mg-group-box\\\">\\n                    <div class=\\\"mg-group-box-title\\\">\\n                        <h5 class=\\\"\\\">Iec61850</h5>\\n                    </div>\\n                    <div class=\\\"ui-g-12\\\">\\n                        <p-table #dt sortMode=\\\"multiple\\\"\\n                                 [value]=\\\"iecList\\\"\\n                                 [paginator]=\\\"true\\\" [rows]=\\\"5\\\"\\n                                 [totalRecords]=\\\"iecList.length\\\"\\n                                 selectionMode=\\\"multiple\\\">\\n                            <ng-template pTemplate=\\\"header\\\">\\n                                <tr>\\n                                    <th *ngFor=\\\"let ieccol of iecCols\\\" [pSortableColumn]=\\\"ieccol.field\\\">\\n                                        {{ieccol.header}}\\n                                        <p-sortIcon [field]=\\\"ieccol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                                    </th>\\n                                    <th style=\\\"width:4em\\\"></th>\\n                                </tr>\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"body\\\" let-iec>\\n                                <tr>\\n                                    <td pEditableColumn *ngFor=\\\"let ieccol of iecCols\\\">\\n                                        <p-cellEditor>\\n                                            <ng-template pTemplate=\\\"input\\\">\\n                                                <input pInputText type=\\\"text\\\"\\n                                                       [(ngModel)]=\\\"iec[ieccol.field]\\\"\\n                                                       (blur)=\\\"onContactEditComplete(iec)\\\"\\n                                                       (keydown.tab)=\\\"onContactEditComplete(iec)\\\"\\n                                                       (keydown.enter)=\\\"onContactEditComplete(iec)\\\">\\n                                            </ng-template>\\n                                            <ng-template pTemplate=\\\"output\\\">\\n                                                {{iec[ieccol.field]}}\\n                                            </ng-template>\\n                                        </p-cellEditor>\\n                                    </td>\\n                                    <td>\\n                                        <button pButton type=\\\"button\\\" icon=\\\"pi pi-times\\\" class=\\\"ui-button-danger\\\" (click)=\\\"onDeleteIec61850(iec)\\\"></button>\\n                                    </td>\\n                                </tr>\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"summary\\\" let-iec>\\n                                <div style=\\\"text-align:left\\\">\\n                                    <button type=\\\"button\\\" pButton icon=\\\"fa fa-plus\\\" (click)=\\\"onShowAddDialog()\\\" label=\\\"Add\\\"></button>\\n                                </div>\\n                            </ng-template>\\n                        </p-table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <p-confirmDialog header=\\\"Warning!\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n    <p-dialog header=\\\"Contact Details\\\" [(visible)]=\\\"displayAddModal\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\">\\n        <div class=\\\"ui-g\\\">\\n            <div class=\\\"ui-g-12\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"newIec61850\\\">Iec61850</label>\\n                    <input [ngModel]=\\\"newIec.iec61850\\\"\\n                           [ngClass]=\\\"{'mg-error':(newIec.iec61850.trim().length == 0)}\\\"\\n                           (ngModelChange)=\\\"newIec61850Change($event)\\\"\\n                           type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"newIec61850\\\">\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"ui-g\\\">\\n            <div class=\\\"ui-g-12\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nIecvalue\\\">Value</label>\\n                    <input [ngModel]=\\\"newIec.value\\\"\\n                           [ngClass]=\\\"{'mg-error':(newIec.value.trim().length == 0)}\\\"\\n                           (ngModelChange)=\\\"newIecValueChange($event)\\\"\\n                           type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nIecvalue\\\">\\n                </div>\\n            </div>\\n        </div>\\n        <p-footer>\\n            <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n                <button type=\\\"button\\\" pButton icon=\\\"fa fa-close\\\" (click)=\\\"onDiscard()\\\" label=\\\"Discard\\\"></button>\\n                <button type=\\\"button\\\" pButton icon=\\\"fa fa-check\\\" (click)=\\\"onAddRow()\\\" label=\\\"Save\\\"></button>\\n            </div>\\n        </p-footer>\\n    </p-dialog>\\n    <p-dialog header=\\\"Device Types\\\" [width]=\\\"1400\\\"\\n              [(visible)]=\\\"displayDeviceTypeModal\\\" [responsive]=\\\"true\\\" [modal]=\\\"true\\\">\\n        <div class=\\\"ui-g\\\">\\n            <button class=\\\"btn filter-items\\\" (click)=\\\"onChangeFilter()\\\"\\n                    pTooltip=\\\"{{ (isDeviceHideFilter)?'On Filter':'Off Filter' }}\\\"  tooltipPosition=\\\"top\\\"\\n                    [ngClass]=\\\"{'btn-primary':!isDeviceHideFilter, 'btn-secondary':isDeviceHideFilter}\\\" >\\n                <i class=\\\"fa fa-filter\\\"></i>\\n            </button>\\n        </div>\\n        <div class=\\\"ui-g\\\">\\n            <p-table #dt sortMode=\\\"multiple\\\"\\n                     [value]=\\\"deviceTypes\\\"\\n                     [paginator]=\\\"true\\\" [rows]=\\\"5\\\"\\n                     [totalRecords]=\\\"deviceTypes.length\\\"\\n                     [(selection)]=\\\"selectedDeviceTypeRow\\\"\\n                     selectionMode=\\\"single\\\">\\n                <ng-template pTemplate=\\\"header\\\">\\n                    <tr>\\n                        <th *ngFor=\\\"let devicetypecol of deviceTypeCols\\\" [pSortableColumn]=\\\"devicetypecol.field\\\">\\n                            {{devicetypecol.header}}\\n                            <p-sortIcon [field]=\\\"devicetypecol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                        </th>\\n                    </tr>\\n                    <tr [ngClass]=\\\"{'mg-hide':isDeviceHideFilter}\\\">\\n                        <th *ngFor=\\\"let devicetypecol of deviceTypeCols\\\" [ngSwitch]=\\\"devicetypecol.field\\\">\\n                            <input *ngSwitchCase=\\\"devicetypecol.field\\\" pInputText type=\\\"text\\\"\\n                                   (input)=\\\"dt.filter($event.target.value, devicetypecol.field, devicetypecol.filterMatchMode)\\\">\\n                        </th>\\n                    </tr>\\n                </ng-template>\\n                <ng-template pTemplate=\\\"body\\\" let-devicetype>\\n                    <tr [pSelectableRow]=\\\"devicetype\\\">\\n                        <td *ngFor=\\\"let devicetypecol of deviceTypeCols\\\">\\n                            {{devicetype[devicetypecol.field]}}\\n                        </td>\\n                    </tr>\\n                </ng-template>\\n            </p-table>\\n        </div>\\n        <p-footer>\\n            <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n                <button type=\\\"button\\\" pButton icon=\\\"fa fa-close\\\" (click)=\\\"onDiscardDeviceType()\\\" label=\\\"Discard\\\"></button>\\n                <button type=\\\"button\\\" pButton icon=\\\"fa fa-check\\\" (click)=\\\"onSelectDeviceType()\\\" label=\\\"Save\\\"></button>\\n            </div>\\n        </p-footer>\\n    </p-dialog>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\nimport {DeviceFormService} from \"../../../core/services/device-form.service\";\nimport {ScrollMovingService} from \"../../../core/services/scroll-moving.service\";\nimport {UpdateDeviceService} from \"../../../core/services/update-device.service\";\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {ConfirmationService, SelectItem} from \"primeng/api\";\nimport {ExpandingMsMtService} from \"../../../core/services/expanding-ms-mt.service\";\nimport {forkJoin} from \"rxjs\";\n\ndeclare var config;\n\n@Component({\n    selector: 'app-device-form',\n    templateUrl: './device-form.component.html',\n    styleUrls: ['./device-form.component.css'],\n    providers: [ConfirmationService]\n})\nexport class DeviceFormComponent implements OnInit {\n\n    formMode: boolean; //True = >add mode, False=> edit mode\n    isEnabled: boolean;\n    formData: any;\n    devicetypemrid: string;\n\n    bayMrID: string;\n    mrID: string;\n    name: string;\n    description: string;\n\n    latitude: number;\n    longitude: number;\n    altitude: number;\n\n    vendor: string;\n    hwRev: string;\n    swRev: string;\n    serNum: string;\n    model: string;\n    owner: string;\n    primeOps: string;\n    secondOps: string;\n\n    iecCols: any[];\n    newIec: Iec61850;\n    iecList: any[];\n    displayAddModal: boolean;\n    displayDeviceTypeModal: boolean;\n\n    isFormChanged: boolean;\n    accessToken: string;\n    apiURL: string;\n\n    deviceTypes: Array<DeviceType>;\n    deviceTypeCols: any[];\n    selectedDeviceTypeRow: DeviceType;\n    isHideFilter: boolean;\n    contentLoaded: boolean;\n    isDeviceHideFilter: boolean;\n\n    constructor(private httpService: HttpServiceHelper,\n                private deviceFormService: DeviceFormService,\n                private scrollService: ScrollMovingService,\n                private navService: NavigationService,\n                private updateDeviceService: UpdateDeviceService,\n                private confirmationService: ConfirmationService,\n                private expandMsMtService: ExpandingMsMtService) {\n\n        this.isFormChanged = false;\n        this.formMode = true;\n        this.isEnabled = false;\n        this.displayAddModal = false;\n        this.displayDeviceTypeModal = false;\n        this.isDeviceHideFilter = false;\n        this.devicetypemrid = '';\n        this.iecCols = [\n            {field: 'iec61850', header: 'Iec61850'},\n            {field: 'value', header: 'Value'},\n        ];\n        this.newIec = {iec61850: '', value: ''};\n        this.selectedDeviceTypeRow = {mrid:'', vendor:'',hwRev:'',swRev:'',serNum:'', model:'', owner:'',primeOps:'',secondOps:''};\n\n        this.deviceTypeCols = [\n            {field: 'mrid', header: 'MrID', group:''},\n            {field: 'vendor', header: 'Vendor', group:''},\n            {field: 'swRev', header: 'SwRev', group:''},\n            {field: 'hwRev', header: 'HwRev', group:''},\n            {field: 'serNum', header: 'SerNum', group:''},\n            {field: 'model', header: 'Model', group:''},\n            {field: 'owner', header: 'Owner', group:''},\n            {field: 'primeOps', header: 'PrimeOps', group:''},\n            {field: 'secondOps', header: 'SecondOps', group:''},\n        ];\n\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n\n        this.initFormFields();\n        this.apiURL = `${config.client_info.apiURL.serverURL}/devices`;\n    }\n\n    ngOnInit() {\n        this.deviceFormService.getDeviceFormInfo().subscribe(deviceFormInfo => {\n            this.isEnabled = true;\n            this.formData = deviceFormInfo.value;\n            this.bayMrID = deviceFormInfo.bayMrId;\n            this.formMode = deviceFormInfo.type;\n            if (this.formMode) { //Add Mode\n                this.initFormData();\n            }\n            this.setDeviceDetails();\n        })\n    }\n\n    setDeviceDetails() {\n\n        this.bayMrID = this.formData.baymrid;\n\n        this.mrID = this.formData.mrid;\n        this.name = this.formData.name;\n        this.description = this.formData.description;\n\n        this.latitude = this.formData.location.latitude;\n        this.longitude = this.formData.location.longitude;\n        this.altitude = this.formData.location.altitude;\n\n        this.iecList = JSON.parse(JSON.stringify(this.formData.iec61850)); //Array copy\n\n        this.devicetypemrid = this.formData.devicetypemrid;\n        this.selectedDeviceTypeRow = {mrid:'', vendor:'',hwRev:'',swRev:'',serNum:'', model:'', owner:'',primeOps:'',secondOps:''};\n        this.deviceTypes = [];\n        this.isFormChanged = false;\n        this.getDeviceTypes();\n\n    }\n\n    initFormFields() {\n\n        this.mrID = this.description = this.name = '';\n        this.latitude = this.longitude = this.altitude = 0;\n        this.devicetypemrid = '';\n        this.iecList = [];\n    }\n\n    initFormData() {\n        this.formData = {\n            baymrid: this.bayMrID,\n            mrid: '',\n            name: '',\n            location: {latitude: 0, longitude: 0, altitude: 0},\n            description: '',\n            devicetypemrid: '',\n            iec61850:[]\n        };\n    }\n\n    onSaveFormData() {\n        if (this.checkValidation()) {\n            let postBody = {\n                baymrid: this.bayMrID,\n                mrid: this.mrID,\n                name: this.name,\n                description: this.description,\n                location: {\n                    latitude: this.latitude,\n                    longitude: this.longitude,\n                    altitude: this.altitude\n                },\n                devicetypemrid: this.devicetypemrid,\n                iec61850 :this.iecList\n\n            };\n            if (this.formMode) { //Add mode\n                let devAddURL = this.apiURL + '?bayId=' + this.bayMrID;\n                this.httpService.httpPostRequest(this.accessToken, devAddURL, postBody)\n                    .subscribe((res: any) => {\n                        this.formData = postBody;\n                        this.iecList = [];\n                        this.updateDeviceService.setDeviceInfo(true, null, postBody);\n                        this.initFormData();\n                        this.initFormFields();\n                        this.isFormChanged = false;\n                        console.log('Success in add devices', postBody);\n                    }, err => {\n                        this.formData = {};\n                        this.initFormFields();\n                        this.initFormData();\n                        console.log('Error in add devices', err);\n                    });\n            } else { //Edit mode\n                let devEditURL = this.apiURL + '/' + this.formData.mrid;\n                devEditURL += '?bayId=' + this.bayMrID;\n                this.httpService.httpPutRequest(this.accessToken, devEditURL, postBody)\n                    .subscribe((res: any) => {\n                        this.updateDeviceService.setDeviceInfo(false, this.formData.mrid, postBody);\n                        this.formData = postBody;\n                        this.iecList = JSON.parse(JSON.stringify(this.formData.iec61850));\n                        this.isFormChanged = false;\n                        console.log('Success in update devices', postBody);\n                    }, err => {\n                        this.formData = {};\n                        console.log('Error in update devices', err);\n                    });\n            }\n\n        }\n    }\n\n    closeMe() {\n        this.navService.setNavInfo('dev-list',true, this.formData.mrid);\n        this.scrollService.setMovedScroll(true,'');\n        this.initFormData();\n        this.initFormFields();\n    }\n\n    onCloseComponent() {\n        let self = this;\n        if(this.isFormChanged){\n            this.confirmationService.confirm({\n                message: 'Changes you made may not be saved.',\n                accept: () => {\n                    self.closeMe();\n                },\n                reject: () => {\n\n                }\n            });\n        }else{\n            this.closeMe();\n        }\n    }\n\n    checkValidation() {\n        if (this.mrID.trim() == \"\") {\n            return false;\n        }\n        if (this.name.trim() == \"\") {\n            return false;\n        }\n        return true;\n    }\n\n    compareContacts(x: Iec61850, y: Iec61850) {\n        return (x.iec61850 == y.iec61850 &&\n            x.value == y.value);\n    }\n    checkFormChange() {\n        this.isFormChanged = (this.mrID != this.formData.mrid ||\n            this.longitude != this.formData.location.longitude ||\n            this.latitude != this.formData.location.latitude ||\n            this.altitude != this.formData.location.altitude ||\n            this.name != this.formData.name ||\n            this.devicetypemrid != this.formData.devicetypemrid ||\n            this.iecList.length !=  this.formData.iec61850.length );\n        let sameObjCnt = 0;\n        let formIec61850 = this.formData.iec61850;\n        for (let i = 0; i < this.iecList.length; i++) {\n            for (let j = 0; j < formIec61850.length; j++) {\n                if(this.compareContacts(this.iecList[i], formIec61850[j])){\n                    sameObjCnt ++;\n                }\n            }\n        }\n\n        this.isFormChanged = this.isFormChanged || (sameObjCnt < this.iecList.length );\n    }\n\n    onMeasurements() {\n        let self = this;\n        this.navService.setNavInfo('dev-ms-list', true, 'dev-ms-list');\n        setTimeout(function () {\n            self.expandMsMtService.setDeviceMsMtStatus(true, self.formData.mrid,'measurement');\n            self.scrollService.setMovedScroll(true, 'dev-ms-list');\n        }, 100);\n    }\n\n    onMeterings() {\n        let self = this;\n        this.navService.setNavInfo('dev-mt-list', true, 'dev-mt-list');\n        setTimeout(function () {\n            self.expandMsMtService.setDeviceMsMtStatus(true, self.formData.mrid,'metering');\n            self.scrollService.setMovedScroll(true, 'dev-mt-list');\n        }, 100);\n    }\n\n    mrIDChange(newVal: string) {\n        this.mrID = newVal;\n        this.checkFormChange();\n    }\n\n    descriptionChange(newVal: string) {\n        this.description = newVal;\n        this.checkFormChange();\n    }\n\n    nameChange(newVal: string) {\n        this.name = newVal;\n        this.checkFormChange();\n    }\n\n    latitudeChange(newVal: number) {\n        this.latitude = newVal;\n        this.checkFormChange();\n    }\n\n    longitudeChange(newVal: number) {\n        this.longitude = newVal;\n        this.checkFormChange();\n    }\n\n    altitudeChange(newVal: number) {\n        this.altitude = newVal;\n        this.checkFormChange();\n    }\n\n    newIec61850Change(newVal: string) {\n        this.newIec.iec61850 = newVal;\n    }\n\n    newIecValueChange(newVal: string) {\n        this.newIec.value = newVal;\n    }\n\n    onShowAddDialog() {\n        this.displayAddModal = true;\n        this.newIec = {iec61850: '', value: ''};\n    }\n\n    onDiscard() {\n        this.displayAddModal = false;\n    }\n\n    onAddRow() {\n        if (this.newIec.iec61850.trim() == \"\" || this.newIec.value.trim() == \"\") return;\n        this.iecList.push(this.newIec);\n        this.displayAddModal = false;\n        this.newIec = {iec61850: '', value: ''};\n        this.isFormChanged = true;\n        this.checkFormChange();\n    }\n\n    onContactEditComplete(newVal){\n        this.checkFormChange();\n    }\n\n    onDeleteIec61850(iec61850: Iec61850) {\n        let indexof = this.iecList.indexOf(iec61850);\n        if(indexof>-1){\n            this.iecList.splice(indexof,1)\n        }\n        this.checkFormChange();\n    }\n    /////////////////////////////////////////////////////////////////////////////////////\n    onShowDeviceTypesDialog() {\n        this.displayDeviceTypeModal = true;\n    }\n\n    onDiscardDeviceType() {\n        this.displayDeviceTypeModal = false;\n    }\n\n    onSelectDeviceType() {\n        if (this.selectedDeviceTypeRow && this.selectedDeviceTypeRow.mrid){\n            this.displayDeviceTypeModal = false;\n            this.devicetypemrid = this.selectedDeviceTypeRow.mrid;\n            this.isFormChanged = true;\n            this.checkFormChange();\n        }\n    }\n\n    getDeviceTypes() {\n        let deviceTypeIdList = [];\n        let promiseList = [];\n        let deviceTypeBaseURL = `${config.client_info.apiURL.serverURL}/devicetypes`;\n        this.httpService.httpGetRequest(this.accessToken, deviceTypeBaseURL).subscribe((res: any) => {\n            deviceTypeIdList = res;\n            for (let i = 0; i < deviceTypeIdList.length; i++) {\n                let deviceTypeDetailURL =  deviceTypeBaseURL + '/'+ deviceTypeIdList[i];\n                promiseList.push(this.httpService.httpGetRequest(this.accessToken, deviceTypeDetailURL));\n            }\n            if (deviceTypeIdList.length > 0) {\n                forkJoin(promiseList).subscribe(results => {\n                    this.deviceTypes = results;\n                    for(let j = 0; j<results.length; j++) {\n                        if(results[j].mrid == this.devicetypemrid) {\n                            this.selectedDeviceTypeRow = results[j];\n                        }\n                    }\n                    this.contentLoaded = true;\n                }, err => {\n                    console.log(\"Can't get device type list\", err);\n                    this.contentLoaded = true;\n                })\n            } else {\n                console.log(\"Empty device type list\");\n                this.contentLoaded = true;\n            }\n        }, error => {\n            if (error.error instanceof ErrorEvent) {\n                alert(error.error.message);\n            } else {\n                alert(`Backend returned code ${error.status}, body was: ${JSON.stringify(error.error)}`);\n            }\n            console.error(\"Can't get device type list\", error);\n            this.contentLoaded = true;\n        });\n    }\n\n    onChangeFilter() {\n        this.isDeviceHideFilter = !this.isDeviceHideFilter;\n    }\n}\n","module.exports = \".dev-ms-form {\\r\\n    width: 360px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL2RldmljZS1tZWFzdXJlbWVudC1mb3JtL2RldmljZS1tZWFzdXJlbWVudC1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCIiwiZmlsZSI6ImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL2RldmljZS1tZWFzdXJlbWVudC1mb3JtL2RldmljZS1tZWFzdXJlbWVudC1mb3JtLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGV2LW1zLWZvcm0ge1xyXG4gICAgd2lkdGg6IDM2MHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"dev-ms-form mg-op-form mg-app-component\\\" *ngIf=\\\"isEnabled\\\" id=\\\"dev-ms-form\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n            <div class=\\\"card-title\\\">\\n                <h4>Measurement Details</h4>\\n                <span (click)=\\\"onCloseComponent()\\\"><i class=\\\"fa fa-2x fa-close\\\"></i></span>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-6\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary op-btn-save\\\" (click)=\\\"onSaveFormData()\\\"\\n                            [disabled]=\\\"!isFormChanged\\\">{{ (formMode)?'Add':'Save' }}\\n                    </button>\\n                </div>\\n            </div>\\n            <div class=\\\"form-content-wrap\\\">\\n                <div class=\\\"ui-g mg-group-box\\\">\\n                    <div class=\\\"mg-group-box-title\\\">\\n                        <h5 class=\\\"\\\">Measurement</h5>\\n                    </div>\\n                    <div class=\\\"ui-g-9\\\">\\n                        <p>Id : {{selectedMsTypeRow.id}}</p>\\n                        <p>Name : {{selectedMsTypeRow.name}}</p>\\n                        <p>Description : {{selectedMsTypeRow.description}}</p>\\n                        <p>Unit : {{selectedMsTypeRow.unit}}</p>\\n                        <p>Multiplier : {{selectedMsTypeRow.multiplier}}</p>\\n                        <p>Format : {{selectedMsTypeRow.format}}</p>\\n                        <p>Aggregation : {{selectedMsTypeRow.aggregation}}</p>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <button type=\\\"button\\\" class=\\\"form-control btn btn-info\\\" (click)=\\\"onShowMsTypesDialog()\\\">\\n                            <i class=\\\"fa fa-ellipsis-h\\\"></i>\\n                        </button>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g\\\">\\n                    <div class=\\\"ui-g-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"name\\\">Iec61850Path</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"iec61850pathChange($event)\\\"\\n                                   [ngClass]=\\\"{'mg-error':(iec61850path.trim().length == 0)}\\\"\\n                                   [ngModel]=\\\"iec61850path\\\" id=\\\"name\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <p-confirmDialog header=\\\"Warning!\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n    <p-dialog header=\\\"Measurements\\\" #dialog [width]=\\\"1000\\\"\\n              [(visible)]=\\\"displayMsTypesModal\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\">\\n        <div class=\\\"ui-g\\\">\\n            <button class=\\\"btn filter-items\\\" (click)=\\\"onChangeFilter()\\\"\\n                    pTooltip=\\\"{{ (isHideFilter)?'On Filter':'Off Filter' }}\\\"  tooltipPosition=\\\"top\\\"\\n                    [ngClass]=\\\"{'btn-primary':!isHideFilter, 'btn-secondary':isHideFilter}\\\" >\\n                <i class=\\\"fa fa-filter\\\"></i>\\n            </button>\\n        </div>\\n        <div class=\\\"ui-g\\\">\\n            <p-table #dt sortMode=\\\"multiple\\\"\\n                     [value]=\\\"measurements\\\"\\n                     [paginator]=\\\"true\\\" [rows]=\\\"5\\\"\\n                     [totalRecords]=\\\"measurements.length\\\"\\n                     [(selection)]=\\\"selectedMsTypeRow\\\"\\n                     selectionMode=\\\"single\\\"\\n                     (onHeaderCheckboxToggle)=\\\"selectAllRows($event)\\\"\\n                     (onRowSelect)=\\\"onRowSelect($event)\\\" (onRowUnselect)=\\\"onRowUnselect($event)\\\">\\n                <ng-template pTemplate=\\\"header\\\">\\n                    <tr>\\n                        <th *ngFor=\\\"let measurementcol of measurementCols\\\"\\n                            [pSortableColumn]=\\\"measurementcol.field\\\">\\n                            {{measurementcol.header}}\\n                            <p-sortIcon [field]=\\\"measurementcol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                        </th>\\n                    </tr>\\n                    <tr [ngClass]=\\\"{'mg-hide':isHideFilter}\\\">\\n                        <th *ngFor=\\\"let measurementcol of measurementCols\\\" [ngSwitch]=\\\"measurementcol.field\\\">\\n                            <input *ngSwitchCase=\\\"measurementcol.field\\\" pInputText type=\\\"text\\\"\\n                                   (input)=\\\"dt.filter($event.target.value, measurementcol.field, measurementcol.filterMatchMode)\\\">\\n                        </th>\\n                    </tr>\\n                </ng-template>\\n                <ng-template pTemplate=\\\"body\\\" let-measurement>\\n                    <tr [pSelectableRow]=\\\"measurement\\\">\\n                        <td *ngFor=\\\"let measurementcol of measurementCols\\\">\\n                            {{ (measurement[measurementcol.field])?measurement[measurementcol.field]:'None'}}\\n                        </td>\\n                    </tr>\\n                </ng-template>\\n            </p-table>\\n        </div>\\n        <p-footer>\\n            <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n                <button type=\\\"button\\\" pButton icon=\\\"fa fa-close\\\" (click)=\\\"onDiscardMsType()\\\" label=\\\"Discard\\\"></button>\\n                <button type=\\\"button\\\" pButton icon=\\\"fa fa-check\\\" (click)=\\\"onAddRowMsType()\\\" label=\\\"Save\\\"></button>\\n            </div>\\n        </p-footer>\\n    </p-dialog>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ConfirmationService} from \"primeng/api\";\nimport {DeviceMsMtFormService} from \"../../../core/services/device-ms-mt-form.service\";\nimport {ScrollMovingService} from \"../../../core/services/scroll-moving.service\";\nimport {UpdateDeviceMsMrService} from \"../../../core/services/update-device-ms-mr.service\";\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {forkJoin} from \"rxjs\";\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\nimport {SettingService} from \"../../../core/services/setting.service\";\n\ndeclare var config;\n\n@Component({\n    selector: 'app-device-measurement-form',\n    templateUrl: './device-measurement-form.component.html',\n    styleUrls: ['./device-measurement-form.component.css'],\n    providers: [ConfirmationService],\n})\nexport class DeviceMeasurementFormComponent implements OnInit {\n\n    formMode: boolean; //True = >add mode, False=> edit mode\n    isEnabled: boolean;\n    formData: any;\n\n    measurementId: string;\n    iec61850path: string;\n\n    isFormChanged: boolean;\n    displayMsTypesModal: boolean;\n\n    accessToken: string;\n    apiURL: string;\n\n    measurements: Array<MeasurementType>;\n    selectedMsTypeRow: MeasurementType;\n    measurementCols: any[];\n    contentLoaded: boolean;\n    isHideFilter: boolean;\n\n\n    constructor(private devMsMtFormService: DeviceMsMtFormService,\n                private scrollService: ScrollMovingService,\n                private updateDevMsMrService: UpdateDeviceMsMrService,\n                private navService: NavigationService,\n                private settingService: SettingService,\n                private httpService: HttpServiceHelper,\n                private confirmationService: ConfirmationService) {\n\n        this.isFormChanged = false;\n        this.contentLoaded = false;\n        this.displayMsTypesModal = false;\n        this.formMode = true;\n        this.isEnabled = false;\n        this.isHideFilter = false;\n        this.measurementCols = [\n            {field: 'id', header: 'ID'},\n            {field: 'name', header: 'Name'},\n            {field: 'description', header: 'Description'},\n            {field: 'unit', header: 'Unit'},\n            {field: 'multiplier', header: 'Multiplier'},\n            {field: 'format', header: 'Format'},\n            {field: 'aggregation', header: 'Aggregation'},\n        ];\n        this.selectedMsTypeRow = {id:'', name:'',description:'', unit:'',multiplier:'', enumeration: null,format:'', aggregation:'None'};\n        this.accessToken = localStorage.getItem( config.client_info.storeInfo.tokenKey);\n        this.measurements = [];\n        this.initFormFields();\n    }\n\n    ngOnInit() {\n        this.devMsMtFormService.getDeviceMsMtFormInfo().subscribe(formInfo => {\n            if(formInfo.name == 'measurement'){\n                this.isEnabled = true;\n                this.formData = formInfo.value;\n                this.formMode = formInfo.type;\n                if (this.formMode) { //Add Mode\n                    this.initFormData();\n                }\n                this.setFormDetails();\n            }\n        })\n    }\n\n    setFormDetails() {\n        this.measurementId = this.formData.measurementId;\n        this.iec61850path = this.formData.iec61850path;\n        this.isFormChanged = false;\n        this.selectedMsTypeRow = {id:'', name:'',description:'', unit:'',multiplier:'', enumeration: null, format:'', aggregation:'None'};\n        this.getMeasurements();\n    }\n\n    initFormFields() {\n        this.measurementId = this.iec61850path = '';\n    }\n\n    initFormData() {\n        this.formData = {\n            measurementId: '',\n            iec61850path: '',\n        }\n    }\n\n    onSaveFormData() {\n        if (this.checkValidation()) {\n            let postBody = {\n                measurementId: this.measurementId,\n                iec61850path: this.iec61850path,\n            };\n            if (this.formMode) { //Add mode\n                this.updateDevMsMrService.setDeviceMsMrInfo(true, null, postBody,'measurement');\n                this.initFormData();\n                this.initFormFields();\n                this.selectedMsTypeRow = {id:'', name:'',description:'', unit:'',multiplier:'', enumeration: null, format:'', aggregation:'None'};\n            } else { //Edit mode\n                this.updateDevMsMrService.setDeviceMsMrInfo(false, this.formData.measurementId, postBody,'measurement');\n            }\n            this.formData = postBody;\n            this.isFormChanged = false;\n            console.log('Success in update substations', postBody);\n        }\n    }\n\n    isChanged() {\n        let opSaveBtn: any;\n        opSaveBtn = document.getElementsByClassName('op-btn-save');\n        if (opSaveBtn) {\n            let disabledBtnCnt = 0;\n            for (let i = 0; i < opSaveBtn.length; i++) {\n                if (opSaveBtn[i].disabled) {\n                    disabledBtnCnt++;\n                }\n            }\n            if (disabledBtnCnt != opSaveBtn.length) {\n                return true;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    closeMe() {\n        this.navService.setNavInfo('dev-ms-form', false, this.formData.measurementId);\n        this.scrollService.setMovedScroll(true, '');\n        this.initFormData();\n        this.initFormFields();\n    }\n\n    onCloseComponent() {\n        let self = this;\n        if (this.isChanged()) {\n            this.confirmationService.confirm({\n                message: 'Changes you made may not be saved.',\n                accept: () => {\n                    self.closeMe();\n                },\n                reject: () => {\n\n                }\n            });\n        } else {\n            this.closeMe();\n        }\n    }\n\n    checkValidation() {\n        return (this.iec61850path.trim() != \"\" && this.measurementId.trim() != \"\");\n    }\n\n    checkFormChange() {\n        this.isFormChanged = (this.measurementId != this.formData.measurementId ||\n            this.iec61850path != this.formData.iec61850path );\n    }\n\n    measurementIDChange(newVal: string) {\n        this.measurementId = newVal;\n        this.checkFormChange();\n    }\n\n    iec61850pathChange(newVal: string) {\n        this.iec61850path = newVal;\n        this.checkFormChange();\n    }\n\n    onShowMsTypesDialog() {\n        this.displayMsTypesModal = true;\n\n    }\n    onRowSelect(event) {\n        console.log(this.selectedMsTypeRow);\n        if(!this.selectedMsTypeRow.aggregation) {\n            this.selectedMsTypeRow.aggregation = 'None';\n        }\n    }\n\n    onRowUnselect(event) {\n        console.log(this.selectedMsTypeRow);\n    }\n\n    selectAllRows(event) {\n        if (event.checked) {\n            // alert('all rows selected');\n            console.log(this.selectedMsTypeRow);\n        } else {\n            // alert('all rows diselected');\n\n        }\n    }\n\n    getMeasurements() {\n        let msTypeIdList = [];\n        let promiseList = [];\n        let apiURL = `${config.client_info.apiURL.serverURL}/measurements`;\n        this.httpService.httpGetRequest(this.accessToken, apiURL).subscribe((res: any) => {\n            msTypeIdList = res;\n            for (let i = 0; i < msTypeIdList.length; i++) {\n                let subDetailURL = apiURL + '/' + msTypeIdList[i];\n                promiseList.push(this.httpService.httpGetRequest(this.accessToken, subDetailURL));\n            }\n            if (msTypeIdList.length > 0) {\n                forkJoin(promiseList).subscribe(results => {\n                    this.measurements = results;\n                    for(let j = 0; j<results.length; j++) {\n                        if(results[j].id == this.measurementId) {\n                            this.selectedMsTypeRow = results[j];\n                        }\n                    }\n                    this.contentLoaded = true;\n                }, err => {\n                    console.log(\"Can't get substation list\", err);\n                    this.measurements = [];\n                    this.selectedMsTypeRow = {id:'', name:'',description:'', unit:'',multiplier:'', enumeration: null, format:'', aggregation:'None'};\n                    this.contentLoaded = true;\n                })\n            } else {\n                console.log(\"Can't get substation list\");\n                this.measurements = [];\n                this.selectedMsTypeRow = {id:'', name:'',description:'', unit:'',multiplier:'', enumeration: null, format:'', aggregation:'None'};\n                this.contentLoaded = true;\n            }\n        }, error => {\n            if(error.error instanceof ErrorEvent){\n                alert(error.error.message);\n            } else {\n                alert(`Backend returned code ${error.status}, body was: ${JSON.stringify(error.error)}`);\n            }\n            console.error(\"Can't get measurement list\", error);\n            this.measurements = [];\n            this.selectedMsTypeRow = {id:'', name:'',description:'', unit:'',multiplier:'', enumeration: null, format:'', aggregation:'None'};\n            this.contentLoaded = true;\n        });\n    }\n\n    onDiscardMsType() {\n        this.displayMsTypesModal = false;\n    }\n\n    onAddRowMsType() {\n        if (this.selectedMsTypeRow && this.selectedMsTypeRow.id){\n            this.displayMsTypesModal = false;\n            this.measurementId = this.selectedMsTypeRow.id;\n            this.checkFormChange();\n        }\n    }\n\n    onChangeFilter() {\n        this.isHideFilter = !this.isHideFilter;\n    }\n\n}\n","module.exports = \".dev-ms-list {\\r\\n    width: 480px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL2RldmljZS1tZWFzdXJlbWVudC10YWJsZS9kZXZpY2UtbWVhc3VyZW1lbnQtdGFibGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEIiLCJmaWxlIjoiY2xpZW50L2FwcC9tb2R1bGVzL2NvbXBvbmVudHMvZGV2aWNlLW1lYXN1cmVtZW50LXRhYmxlL2RldmljZS1tZWFzdXJlbWVudC10YWJsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRldi1tcy1saXN0IHtcclxuICAgIHdpZHRoOiA0ODBweDtcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"dev-ms-list card mg-app-component\\\" *ngIf=\\\"isEnabled\\\" id=\\\"{{tableId}}\\\">\\n    <div class=\\\"content-loading\\\" *ngIf=\\\"!contentLoaded\\\">\\n        <img src=\\\"../../../../assets/img/loading.svg\\\">\\n    </div>\\n    <div class=\\\"card-header\\\">\\n        <div class=\\\"card-title\\\">\\n            <h4>Device Measurement</h4>\\n            <span (click)=\\\"onCloseComponent()\\\"><i class=\\\"fa fa-2x fa-close\\\"></i></span>\\n        </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"table-setting-bar\\\">\\n            <div class=\\\"dropdown mg-dropdown-area\\\" >\\n                <div class=\\\"drop-down-backdrop\\\" (click)=\\\"isShowSetting=false\\\" *ngIf=\\\"isShowSetting\\\"></div>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle mg-toggle-btn\\\"\\n                        pTooltip=\\\"Column Setting\\\"  tooltipPosition=\\\"top\\\"\\n                        (click)=\\\"isShowSetting = !isShowSetting\\\">\\n                    <i class=\\\"fa fa-cog\\\"></i>\\n                </button>\\n                <div class=\\\"dropdown-menu mg-dropdown-menu\\\" *ngIf=\\\"isShowSetting\\\">\\n                    <div style=\\\"text-align:left\\\">\\n                        <table>\\n                            <thead>\\n                            <tr>\\n                                <th>Visible</th>\\n                                <th>Column</th>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n                            <tr *ngFor=\\\"let devmscol of devMsCols\\\">\\n                                <td><p-checkbox binary=\\\"true\\\" value=\\\"true\\\" [disabled]=\\\"devmscol.visibility && curSelColsCnt == 1\\\"\\n                                                (onChange)=\\\"onChangeVisibility(devmscol)\\\"\\n                                                [(ngModel)]=\\\"devmscol.visibility\\\">\\n                                </p-checkbox></td>\\n                                <td>{{devmscol.header}}</td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n            <button class=\\\"btn filter-items\\\" (click)=\\\"onChangeFilter()\\\"\\n                    pTooltip=\\\"{{ (isHideFilter)?'On Filter':'Off Filter' }}\\\"  tooltipPosition=\\\"top\\\"\\n                    [ngClass]=\\\"{'btn-primary':!isHideFilter, 'btn-secondary':isHideFilter}\\\" >\\n                <i class=\\\"fa fa-filter\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-danger delete-item\\\"\\n                    pTooltip=\\\"Delete Rows\\\"  tooltipPosition=\\\"top\\\"\\n                    (click)=\\\"onDeleteRows()\\\" [disabled]=\\\"selectedRows.length == 0\\\">\\n                <i class=\\\"fa fa-trash\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-primary add-item\\\" (click)=\\\"onAddNewRow()\\\">+ Add New</button>\\n            <div class=\\\"clearfix\\\"></div>\\n        </div>\\n        <p-table #dt sortMode=\\\"multiple\\\"\\n                 [value]=\\\"measurements\\\"\\n                 [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\n                 [totalRecords]=\\\"measurements.length\\\"\\n                 [(selection)]=\\\"selectedRows\\\"\\n                 selectionMode=\\\"multiple\\\"\\n                 [resizableColumns]=\\\"true\\\"\\n                 columnResizeMode=\\\"expand\\\"\\n                 (onColResize) = \\\"onColResize($event)\\\"\\n                 (onHeaderCheckboxToggle)=\\\"selectAllRows($event)\\\"\\n                 (onRowSelect)=\\\"onRowSelect($event)\\\" (onRowUnselect)=\\\"onRowUnselect($event)\\\">\\n            <ng-template pTemplate=\\\"header\\\">\\n                <tr>\\n                    <th class=\\\"mg-item-checkbox\\\">\\n                        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\\n                    </th>\\n                    <th class=\\\"th-id-wrap\\\"\\n                        *ngFor=\\\"let devmscol of devMsCols\\\"\\n                        [ngClass]=\\\"{'mg-hide': !devmscol.visibility}\\\"\\n                        [pSortableColumn]=\\\"devmscol.field\\\">\\n                        {{devmscol.header}}\\n                        <p-sortIcon [field]=\\\"devmscol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                    </th>\\n                </tr>\\n                <tr [ngClass]=\\\"{'mg-hide':isHideFilter}\\\">\\n                    <th></th>\\n                    <th *ngFor=\\\"let devmscol of devMsCols\\\"\\n                        [ngClass]=\\\"{'mg-hide':!devmscol.visibility}\\\"\\n                        [ngSwitch]=\\\"devmscol.field\\\" >\\n                        <input *ngSwitchCase=\\\"devmscol.field\\\" pInputText type=\\\"text\\\"\\n                               (input)=\\\"onTblFilter($event, devmscol, dt)\\\">\\n                    </th>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"body\\\" let-devms>\\n                <tr>\\n                    <td>\\n                        <p-tableCheckbox [value]=\\\"devms\\\"></p-tableCheckbox>\\n                    </td>\\n                    <td *ngFor=\\\"let devmscol of devMsCols\\\"  (click)=\\\"editRow(devms)\\\"\\n                        [ngClass]=\\\"{'mg-hide':!devmscol.visibility}\\\">\\n                        {{ (devmscol.group != '')? devms[devmscol.group][devmscol.field]: devms[devmscol.field]}}\\n                    </td>\\n                </tr>\\n            </ng-template>\\n        </p-table>\\n    </div>\\n    <p-confirmDialog header=\\\"Warning!\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\nimport {ScrollMovingService} from \"../../../core/services/scroll-moving.service\";\nimport {UpdateDeviceMsMrService} from \"../../../core/services/update-device-ms-mr.service\";\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {ConfirmationService} from \"primeng/api\";\nimport {DeviceMsMtFormService} from \"../../../core/services/device-ms-mt-form.service\";\nimport {ExpandingMsMtService} from \"../../../core/services/expanding-ms-mt.service\";\nimport {SettingService} from \"../../../core/services/setting.service\";\n\ndeclare function checkTable(tblId, tdInfo): any;\ndeclare function initTable(tblId): any;\ndeclare function readTable(tblId): any;\ndeclare function updateTableWidth(tblName, tdInfo): any;\ndeclare var config;\n\n@Component({\n    selector: 'app-device-measurement-table',\n    templateUrl: './device-measurement-table.component.html',\n    styleUrls: ['./device-measurement-table.component.css'],\n    providers: [ConfirmationService]\n})\nexport class DeviceMeasurementTableComponent implements OnInit {\n\n    isEnabled: boolean;\n    deviceId: string;\n    measurements: Array<DeviceMeasurement>;\n    devMsCols: any[];\n\n    selectedRows: Array<DeviceMeasurement>;\n    accessToken: string;\n    apiURL: string;\n\n    contentLoaded: boolean;\n    isHideFilter: boolean;\n\n    isShowSetting: boolean;\n    curSelColsCnt: number;\n    tableId: string;\n    tableSettingName: string;\n\n    constructor(\n        private deviceMsMtFormService: DeviceMsMtFormService,\n        private httpService: HttpServiceHelper,\n        private scrollService: ScrollMovingService,\n        private updateDevMsMrService: UpdateDeviceMsMrService,\n        private expandMsMtService: ExpandingMsMtService,\n        private navService: NavigationService,\n        private settingService: SettingService,\n        private confirmationService: ConfirmationService) {\n\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n        this.contentLoaded = false;\n        this.isEnabled = false;\n        this.deviceId = '';\n        this.measurements = [];\n        this.isHideFilter = false;\n\n        this.tableId = 'dev-ms-list';\n        this.tableSettingName = this.tableId +'_setting';\n        this.isShowSetting = false;\n\n        this.selectedRows = [];\n\n        this.devMsCols = [\n            {field: 'measurementId', header: 'MrId', group:''},\n            {field: 'iec61850path', header: 'Name', group:''},\n        ];\n\n    }\n\n    ngOnInit() {\n\n        this.initTableSetting();\n\n        this.expandMsMtService.getDeviceMsMtStatusInfo().subscribe(serviceInfo => {\n            if (serviceInfo.name == 'measurement') {\n                this.isEnabled = serviceInfo.mode;\n                this.deviceId = serviceInfo.id;\n                this.getTableContent();\n            }\n        });\n\n        this.updateDevMsMrService.getDeviceMsMrInfo().subscribe(updateInfo => {\n            if (updateInfo.name == 'measurement') {\n                let tmpDevMsList: any;\n                tmpDevMsList = JSON.parse(JSON.stringify(this.measurements));\n                if (updateInfo.mode) {\n                    console.log(updateInfo.newItem);\n                    tmpDevMsList.push(updateInfo.newItem);\n                } else {\n                    for (let i = 0; i < tmpDevMsList.length; i++) {\n                        if (tmpDevMsList[i].measurementId == updateInfo.id) {\n                            tmpDevMsList[i] = updateInfo.newItem;\n                            break;\n                        }\n                    }\n                }\n                this.updateTableContent(tmpDevMsList);\n            }\n        });\n\n        this.apiURL = `${config.client_info.apiURL.serverURL}/measurements`;\n    }\n\n    getTableContent() {\n        const getDevMsURL = `${config.client_info.apiURL.serverURL}/devices/${this.deviceId}/measurements`;\n        this.httpService.httpGetRequest(this.accessToken, getDevMsURL)\n            .subscribe((res: any) => {\n                this.measurements = res;\n                this.contentLoaded = true;\n            }, err => {\n                this.measurements = [];\n                this.contentLoaded = true;\n                console.error('Error in measurements updating', err);\n            });\n    }\n\n    updateTableContent(updateBody) {\n        this.contentLoaded = false;\n        const getDevMsURL = `${config.client_info.apiURL.serverURL}/devices/${this.deviceId}/measurements`;\n        this.httpService.httpPutRequest(this.accessToken, getDevMsURL, updateBody)\n            .subscribe((res: any) => {\n                this.measurements = updateBody;\n                this.contentLoaded = true;\n            }, err => {\n                this.measurements = [];\n                this.contentLoaded = true;\n                console.error('Error in measurements listing', err);\n            });\n\n    }\n\n    onAddNewRow() {\n        let self = this;\n        this.navService.setNavInfo('dev-ms-form', true, '');\n        setTimeout(function () {\n            self.deviceMsMtFormService.setDeviceMsMtFormInfo(true, null, 'measurement');\n            self.scrollService.setMovedScroll(true, 'dev-ms-form');\n        }, 100);\n    }\n\n    onDeleteRows() {\n        let unSelectedRows: Array<DeviceMeasurement>;\n        unSelectedRows = [];\n        for (let i = 0; i < this.measurements.length; i++) {\n            let sameSt = false;\n            for (let j = 0; j < this.selectedRows.length; j++) {\n                if (this.measurements[i].measurementId == this.selectedRows[j].measurementId &&\n                    this.measurements[i].iec61850path == this.selectedRows[j].iec61850path) {\n                    sameSt = true;\n                }\n                if (!sameSt) {\n                    unSelectedRows.push(this.measurements[i]);\n                }\n            }\n        }\n\n        let deviceMsTypeURL = `${config.client_info.apiURL.serverURL}/devices/${this.deviceId}/measurements`;\n        this.httpService.httpPutRequest(this.accessToken, deviceMsTypeURL, unSelectedRows).subscribe(res => {\n            this.measurements = unSelectedRows;\n            this.selectedRows = [];\n        }, err => {\n            this.measurements = [];\n            this.selectedRows = [];\n        });\n    }\n\n    isChanged() {\n        let opSaveBtn: any;\n        opSaveBtn = document.getElementsByClassName('op-btn-save');\n        if (opSaveBtn) {\n            let disabledBtnCnt = 0;\n            for (let i = 0; i < opSaveBtn.length; i++) {\n                if (opSaveBtn[i].disabled) {\n                    disabledBtnCnt++;\n                }\n            }\n            if (disabledBtnCnt != opSaveBtn.length) {\n                return true;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    closeMe() {\n        this.navService.setNavInfo('dev-ms-list', false, this.deviceId);\n        this.scrollService.setMovedScroll(true, '');\n        this.measurements = [];\n    }\n\n    onCloseComponent() {\n        let self = this;\n        if (this.isChanged()) {\n            this.confirmationService.confirm({\n                message: 'Changes you made may not be saved.',\n                accept: () => {\n                    self.closeMe();\n                },\n                reject: () => {\n\n                }\n            });\n        } else {\n            this.closeMe();\n        }\n    }\n\n    editRow(devms) {\n        let self = this;\n        this.navService.setNavInfo('dev-ms-form', true, devms.measurementId);\n        setTimeout(function () {\n            self.deviceMsMtFormService.setDeviceMsMtFormInfo(false, devms, 'measurement');\n            self.scrollService.setMovedScroll(true, 'dev-ms-form');\n        }, 100);\n    }\n\n    onRowSelect(event) {\n        console.log(this.selectedRows);\n    }\n\n    onRowUnselect(event) {\n        console.log(this.selectedRows);\n    }\n\n    selectAllRows(event) {\n        if (event.checked) {\n            // alert('all rows selected');\n            console.log(this.selectedRows);\n        } else {\n            // alert('all rows diselected');\n        }\n    }\n\n    initTableSetting() {\n\n        readTable(this.tableId);\n        let tblSettingStr = localStorage.getItem(this.tableSettingName);\n        let settingInfo: any;\n        if(tblSettingStr) {\n            settingInfo = JSON.parse(tblSettingStr);\n        } else {\n            //Write New Setting\n            settingInfo = { filter: true};\n            settingInfo.visible = ['MrId','Name'];\n            localStorage.setItem(this.tableSettingName, JSON.stringify(settingInfo));\n        }\n\n        this.isHideFilter = !settingInfo.filter;\n        this.devMsCols = this.checkColVisibility(this.devMsCols, settingInfo.visible);\n        this.curSelColsCnt = settingInfo.visible.length;\n    }\n\n    checkColVisibility(colList: any, visibleColList: any) {\n\n        for(let i = 0; i<colList.length; i++) {\n            colList[i].visibility = visibleColList.indexOf(colList[i].header)>-1;\n        }\n        return colList;\n    }\n\n    onChangeVisibility(item) {\n        checkTable(this.tableId, item);\n        if(item.visibility){\n            this.curSelColsCnt += 1;\n        } else {\n            this.curSelColsCnt -= 1;\n        }\n        this.settingService.setSettingInfo(this.tableSettingName,'visibility', {col:item.header,st:item.visibility})\n    }\n\n    onTblFilter(ev, item, dt) {\n        let field = (item.group != '')? item.group + '.' + item.field: item.field;\n        dt.filter(ev.target.value,  field, item.filterMatchMode);\n    }\n\n    onChangeFilter() {\n        this.isHideFilter = !this.isHideFilter;\n        this.settingService.setSettingInfo(this.tableSettingName,'filter', this.isHideFilter);\n    }\n\n    onColResize($ev) {\n        updateTableWidth(this.tableId, $ev);\n    }\n}\n","module.exports = \".dev-mr-btn {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n\\r\\n#dev-mr-list {\\r\\n    width: 1200px;\\r\\n}\\r\\n\\r\\n.mr-edit-item {\\r\\n    text-align: left;\\r\\n    font-weight: normal;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL2RldmljZS1tZXRlcmluZy10YWJsZS9kZXZpY2UtbWV0ZXJpbmctdGFibGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6ImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL2RldmljZS1tZXRlcmluZy10YWJsZS9kZXZpY2UtbWV0ZXJpbmctdGFibGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kZXYtbXItYnRuIHtcclxuICAgIG1hcmdpbi1yaWdodDogNXB4O1xyXG59XHJcblxyXG4jZGV2LW1yLWxpc3Qge1xyXG4gICAgd2lkdGg6IDEyMDBweDtcclxufVxyXG5cclxuLm1yLWVkaXQtaXRlbSB7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"dev-mr-list mg-op-form mg-app-component\\\" *ngIf=\\\"isEnabled\\\" id=\\\"{{tableId}}\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n            <div class=\\\"card-title\\\">\\n                <h4>Device Meterings</h4>\\n                <span (click)=\\\"onCloseComponent()\\\"><i class=\\\"fa fa-2x fa-close\\\"></i></span>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-6\\\">\\n                    <div class=\\\"dropdown mg-dropdown-area\\\" >\\n                        <div class=\\\"drop-down-backdrop\\\" (click)=\\\"isShowSetting=false\\\" *ngIf=\\\"isShowSetting\\\"></div>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle mg-toggle-btn\\\"\\n                                pTooltip=\\\"Column Setting\\\"  tooltipPosition=\\\"top\\\"\\n                                (click)=\\\"isShowSetting = !isShowSetting\\\">\\n                            <i class=\\\"fa fa-cog\\\"></i>\\n                        </button>\\n                        <button type=\\\"button\\\" class=\\\"dev-mr-btn btn btn-primary op-btn-save\\\" (click)=\\\"onSaveFormData()\\\"\\n                                [disabled]=\\\"!isFormChanged\\\">{{ (formMode)?'Add':'Save' }}\\n                        </button>\\n                        <div class=\\\"dropdown-menu mg-dropdown-menu\\\" *ngIf=\\\"isShowSetting\\\">\\n                            <div style=\\\"text-align:left\\\">\\n                                <table>\\n                                    <thead>\\n                                        <tr>\\n                                            <th>Visible</th>\\n                                            <th>Column</th>\\n                                        </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                        <tr *ngFor=\\\"let mrcol of meteringCols\\\">\\n                                            <td><p-checkbox binary=\\\"true\\\" value=\\\"true\\\" [disabled]=\\\"mrcol.visibility && curSelColsCnt == 1\\\"\\n                                                            (onChange)=\\\"onChangeVisibility(mrcol)\\\"\\n                                                            [(ngModel)]=\\\"mrcol.visibility\\\">\\n                                            </p-checkbox></td>\\n                                            <td>{{mrcol.header}}</td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <button class=\\\"btn filter-items\\\" (click)=\\\"onChangeFilter()\\\"\\n                            pTooltip=\\\"{{ (isHideFilter)?'On Filter':'Off Filter' }}\\\"  tooltipPosition=\\\"top\\\"\\n                            [ngClass]=\\\"{'btn-primary':!isHideFilter, 'btn-secondary':isHideFilter}\\\" >\\n                        <i class=\\\"fa fa-filter\\\"></i>\\n                    </button>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-12\\\">\\n                    <p-table #dt sortMode=\\\"multiple\\\"\\n                             [value]=\\\"meterings\\\"\\n                             [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\n                             [totalRecords]=\\\"meterings.length\\\"\\n                             selectionMode=\\\"multiple\\\"\\n                             [resizableColumns]=\\\"true\\\"\\n                             columnResizeMode=\\\"expand\\\"\\n                             (onColResize) = \\\"onColResize($event)\\\">\\n                        <ng-template pTemplate=\\\"header\\\">\\n                            <tr>\\n                                <th class=\\\"th-id-wrap\\\"\\n                                    *ngFor=\\\"let mrcol of meteringCols\\\"\\n                                    [ngClass]=\\\"{'mg-hide': !mrcol.visibility}\\\"\\n                                    [pSortableColumn]=\\\"mrcol.field\\\" pResizableColumn>\\n                                    {{mrcol.header}}\\n                                    <p-sortIcon [field]=\\\"mrcol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                                </th>\\n                            </tr>\\n                            <tr [ngClass]=\\\"{'mg-hide':isHideFilter}\\\">\\n                                <th *ngFor=\\\"let mrcol of meteringCols\\\"\\n                                    [ngClass]=\\\"{'mg-hide':!mrcol.visibility}\\\"\\n                                    [ngSwitch]=\\\"mrcol.field\\\" >\\n                                    <input *ngSwitchCase=\\\"mrcol.field\\\" pInputText type=\\\"text\\\"\\n                                           (input)=\\\"onTblFilter($event, mrcol, dt)\\\">\\n                                </th>\\n                            </tr>\\n                        </ng-template>\\n                        <ng-template pTemplate=\\\"body\\\" let-metering>\\n                            <tr>\\n                                <ng-container *ngFor=\\\"let mrcol of meteringCols\\\">\\n                                    <td *ngIf=\\\"mrcol.field != 'isPublic'\\\" [ngClass]=\\\"{'mg-hide':!mrcol.visibility}\\\">\\n                                        {{ (mrcol.field != 'isPublic')? metering['metering'][mrcol.field]:'' }}\\n                                    </td>\\n                                    <td pEditableColumn *ngIf=\\\"mrcol.field == 'isPublic'\\\"\\n                                        [ngClass]=\\\"{'mg-hide':!mrcol.visibility}\\\">\\n                                        <p-cellEditor *ngIf=\\\"mrcol.field == 'isPublic'\\\">\\n                                            <ng-template pTemplate=\\\"input\\\">\\n                                                <p-dropdown [options]=\\\"isPublicCols\\\"\\n                                                            [(ngModel)]=\\\"metering[mrcol.field]\\\"\\n                                                            (onChange)=\\\"onContactEditComplete(metering)\\\"\\n                                                            [style]=\\\"{'width':'100%'}\\\">\\n                                                </p-dropdown>\\n                                            </ng-template>\\n                                            <ng-template pTemplate=\\\"output\\\">\\n                                                {{ (mrcol.field == 'isPublic')? metering[mrcol.field]:metering['metering'][mrcol.field]}}\\n                                            </ng-template>\\n                                        </p-cellEditor>\\n                                    </td>\\n                                </ng-container>\\n                            </tr>\\n                        </ng-template>\\n                    </p-table>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <p-confirmDialog header=\\\"Warning!\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ConfirmationService, SelectItem} from \"primeng/api\";\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {ScrollMovingService} from \"../../../core/services/scroll-moving.service\";\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\nimport {ExpandingMsMtService} from \"../../../core/services/expanding-ms-mt.service\";\nimport {SettingService} from \"../../../core/services/setting.service\";\nimport {MeteringFormService} from \"../../../core/services/metering-form.service\";\nimport {UpdateMeteringTypeService} from \"../../../core/services/update-metering-type.service\";\n\ndeclare function checkTable(tblId, tdInfo): any;\ndeclare function initTable(tblId): any;\ndeclare function readTable(tblId): any;\ndeclare function updateTableWidth(tblName, tdInfo): any;\ndeclare var config;\n\n@Component({\n    selector: 'app-device-metering-table',\n    templateUrl: './device-metering-table.component.html',\n    styleUrls: ['./device-metering-table.component.css'],\n    providers: [ConfirmationService]\n})\nexport class DeviceMeteringTableComponent implements OnInit {\n\n    formMode: boolean; //True = >add mode, False=> edit mode\n    isEnabled: boolean;\n\n    deviceId: string;\n\n    meterings: any[];\n    srcMeterings: any[];\n    meteringCols: any[];\n\n    isPublicCols: SelectItem[];\n\n    contentLoaded: boolean;\n    isHideFilter: boolean;\n\n    accessToken: string;\n    apiURL: string;\n\n    isShowSetting: boolean;\n    curSelColsCnt: number;\n    tableId: string;\n    tableSettingName: string;\n    isFormChanged: boolean;\n\n    constructor(private httpService: HttpServiceHelper,\n                private scrollService: ScrollMovingService,\n                private navService: NavigationService,\n                private settingService: SettingService,\n                private expandMsMtService: ExpandingMsMtService,\n                private meteringFormService: MeteringFormService,\n                private updateMeteringFormService: UpdateMeteringTypeService,\n                private confirmationService: ConfirmationService) {\n\n        this.contentLoaded = false;\n        this.isHideFilter = false;\n        this.meterings = [];\n        this.isEnabled = false;\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n        this.apiURL = `${config.client_info.apiURL.serverURL}/devices`;\n\n        this.tableId = 'dev-mr-list';\n        this.tableSettingName = this.tableId +'_setting';\n        this.isShowSetting = false;\n\n        this.meteringCols = [\n            {field: 'id', header: 'ID', group:''},\n            {field: 'name', header: 'Name', group:''},\n            {field: 'description', header: 'Description', group:''},\n            {field: 'unit', header: 'Unit', group:''},\n            {field: 'multiplier', header: 'Multiplier', group:''},\n            {field: 'format', header: 'Format', group:''},\n            {field: 'aggregation', header: 'Aggregation', group:''},\n            {field: 'isPublic', header: 'IsPublic', group:''},\n        ];\n\n        this.isPublicCols = [\n            {label:'true',value:true},\n            {label:'false',value:false},\n        ];\n\n        this.initFormFields();\n    }\n\n    ngOnInit() {\n\n        this.initTableSetting();\n\n        this.expandMsMtService.getDeviceMsMtStatusInfo().subscribe(serviceInfo => {\n            if(serviceInfo.name == 'metering'){\n                this.isEnabled = serviceInfo.mode;\n                this.deviceId = serviceInfo.id;\n                this.getTableContent();\n            }\n        });\n\n        this.updateMeteringFormService.getMeteringTypeInfo().subscribe(mrInfo => {\n            //Checking prev metering Info\n            for(let i = 0; i<this.meterings.length; i++) {\n                if(this.meterings[i].metering.id = mrInfo.id) {\n                    this.meterings[i] = JSON.parse(JSON.stringify(mrInfo.newMtType)) ;\n                    //Update metering data\n                    let postBody = this.meterings;\n                    let mrEditURL = this.apiURL + '/' + this.deviceId + '/meterings';\n                    this.httpService.httpPutRequest(this.accessToken, mrEditURL, postBody)\n                        .subscribe((res: any) => {\n                            this.srcMeterings = JSON.parse(JSON.stringify(postBody));\n                            console.log('Success in update meaterings', postBody);\n                        }, err => {\n                            this.srcMeterings = [];\n                            this.meterings = [];\n                            console.log('Error in update meaterings', err);\n                        });\n                }\n            }\n        })\n    }\n\n    getTableContent() {\n        this.contentLoaded  = false;\n        const getDevMsURL = `${config.client_info.apiURL.serverURL}/devices/${this.deviceId}/meterings`;\n        this.httpService.httpGetRequest(this.accessToken, getDevMsURL)\n            .subscribe((res: any) => {\n                this.meterings = JSON.parse(JSON.stringify(res));\n                this.srcMeterings = JSON.parse(JSON.stringify(res));\n                this.contentLoaded = true;\n            }, err => {\n                this.meterings = [];\n                this.srcMeterings = [];\n                this.contentLoaded = true;\n                console.error('Error in measurements updating', err);\n            });\n    }\n\n    initFormFields() {\n        this.meterings = [];\n    }\n\n    onSaveFormData() {\n        let postBody = this.meterings;\n        let mrEditURL = this.apiURL + '/' + this.deviceId + '/meterings';\n        this.httpService.httpPutRequest(this.accessToken, mrEditURL, postBody)\n            .subscribe((res: any) => {\n                this.srcMeterings = JSON.parse(JSON.stringify(postBody));\n                this.isFormChanged = false;\n                console.log('Success in update meaterings', postBody);\n            }, err => {\n                this.srcMeterings = [];\n                this.meterings = [];\n                this.isFormChanged = false;\n                console.log('Error in update meaterings', err);\n            });\n    }\n\n    isChanged() {\n        let opSaveBtn: any;\n        opSaveBtn = document.getElementsByClassName('op-btn-save');\n        if (opSaveBtn) {\n            let disabledBtnCnt = 0;\n            for (let i = 0; i < opSaveBtn.length; i++) {\n                if (opSaveBtn[i].disabled) {\n                    disabledBtnCnt++;\n                }\n            }\n            if (disabledBtnCnt != opSaveBtn.length) {\n                return true;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    closeMe() {\n        this.navService.setNavInfo('dev-mt-list', false, '');\n        const htmlElem = document.getElementsByClassName('mg-width-virtual');\n        htmlElem[htmlElem.length-1].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\n        this.initFormFields();\n    }\n\n    onCloseComponent() {\n        let self = this;\n        if (this.isChanged()) {\n            this.confirmationService.confirm({\n                message: 'Changes you made may not be saved.',\n                accept: () => {\n                    self.closeMe();\n                },\n                reject: () => {\n\n                }\n            });\n        } else {\n            this.closeMe();\n        }\n    }\n\n    initTableSetting() {\n\n        readTable(this.tableId);\n        let tblSettingStr = localStorage.getItem(this.tableSettingName);\n        let settingInfo: any;\n        if(tblSettingStr) {\n            settingInfo = JSON.parse(tblSettingStr);\n        } else {\n            //Write New Setting\n            settingInfo = { filter: true};\n            settingInfo.visible = [\n                'ID','Name','Description','Unit', 'Multiplier', 'Format', 'IsPublic'\n            ];\n            localStorage.setItem(this.tableSettingName, JSON.stringify(settingInfo));\n        }\n\n        this.isHideFilter = !settingInfo.filter;\n        this.meteringCols = this.checkColVisibility(this.meteringCols, settingInfo.visible);\n        this.curSelColsCnt = settingInfo.visible.length;\n    }\n\n    checkColVisibility(colList: any, visibleColList: any) {\n\n        for(let i = 0; i<colList.length; i++) {\n            colList[i].visibility = visibleColList.indexOf(colList[i].header)>-1;\n        }\n        return colList;\n    }\n\n    onChangeVisibility(item) {\n        checkTable(this.tableId, item);\n        if(item.visibility){\n            this.curSelColsCnt += 1;\n        } else {\n            this.curSelColsCnt -= 1;\n        }\n        this.settingService.setSettingInfo(this.tableSettingName,'visibility', {col:item.header,st:item.visibility})\n    }\n\n    onTblFilter(ev, item, dt) {\n        let field = (item.group != '')? item.group + '.' + item.field: item.field;\n        dt.filter(ev.target.value,  field, item.filterMatchMode);\n    }\n\n    onChangeFilter() {\n        this.isHideFilter = !this.isHideFilter;\n        this.settingService.setSettingInfo(this.tableSettingName,'filter', this.isHideFilter);\n    }\n\n    onColResize($ev) {\n        updateTableWidth(this.tableId, $ev);\n    }\n\n    onContactEditComplete(newVal) {\n        this.checkFormChange();\n    }\n\n    compareContacts(x: any, y: any) {\n        return (x.metering.id == y.metering.id &&\n            x.metering.name == y.metering.name &&\n            x.metering.description == y.metering.description &&\n            x.metering.unit == y.metering.unit &&\n            x.metering.multiplier == y.metering.multiplier &&\n            x.metering.format == y.metering.format &&\n            x.metering.aggregation == y.metering.aggregation &&\n            x.isPublic == y.isPublic);\n    }\n\n    checkFormChange() {\n        let sameObjCnt = 0;\n        this.isFormChanged = this.meterings.length != this.srcMeterings.length;\n        for (let i = 0; i < this.meterings.length; i++) {\n            for (let j = 0; j < this.srcMeterings.length; j++) {\n                if (this.compareContacts(this.meterings[i], this.srcMeterings[j])) {\n                    sameObjCnt++;\n                }\n            }\n        }\n\n        this.isFormChanged = this.isFormChanged || (sameObjCnt < this.meterings.length);\n    }\n\n}\n","module.exports = \".device-list {\\r\\n    width: 1350px;\\r\\n}\\r\\n.device-list:after {\\r\\n    content: \\\"\\\";\\r\\n    display: block;\\r\\n    position: absolute;\\r\\n    right: -20px;\\r\\n    width: 20px;\\r\\n    height: 1px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL2RldmljZS10YWJsZS9kZXZpY2UtdGFibGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7QUFDakI7QUFDQTtJQUNJLFdBQVc7SUFDWCxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixXQUFXO0lBQ1gsV0FBVztBQUNmIiwiZmlsZSI6ImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL2RldmljZS10YWJsZS9kZXZpY2UtdGFibGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kZXZpY2UtbGlzdCB7XHJcbiAgICB3aWR0aDogMTM1MHB4O1xyXG59XHJcbi5kZXZpY2UtbGlzdDphZnRlciB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICByaWdodDogLTIwcHg7XHJcbiAgICB3aWR0aDogMjBweDtcclxuICAgIGhlaWdodDogMXB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"device-list card mg-app-component\\\" *ngIf=\\\"isEnabled\\\" id=\\\"{{tableId}}\\\">\\n    <div class=\\\"content-loading\\\" *ngIf=\\\"!contentLoaded\\\">\\n        <img src=\\\"../../../../assets/img/loading.svg\\\">\\n    </div>\\n    <div class=\\\"card-header\\\">\\n        <div class=\\\"card-title\\\">\\n            <h4>Devices</h4>\\n            <span (click)=\\\"onCloseComponent()\\\"><i class=\\\"fa fa-2x fa-close\\\"></i></span>\\n        </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"table-setting-bar\\\">\\n            <div class=\\\"dropdown mg-dropdown-area\\\" >\\n                <div class=\\\"drop-down-backdrop\\\" (click)=\\\"isShowSetting=false\\\" *ngIf=\\\"isShowSetting\\\"></div>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle mg-toggle-btn\\\"\\n                        pTooltip=\\\"Column Setting\\\"  tooltipPosition=\\\"top\\\"\\n                        (click)=\\\"isShowSetting = !isShowSetting\\\">\\n                    <i class=\\\"fa fa-cog\\\"></i>\\n                </button>\\n                <div class=\\\"dropdown-menu mg-dropdown-menu\\\" *ngIf=\\\"isShowSetting\\\">\\n                    <div style=\\\"text-align:left\\\">\\n                        <table>\\n                            <thead>\\n                            <tr>\\n                                <th>Visible</th>\\n                                <th>Column</th>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n                            <tr *ngFor=\\\"let devcol of deviceCols\\\">\\n                                <td><p-checkbox binary=\\\"true\\\" value=\\\"true\\\" [disabled]=\\\"devcol.visibility && curSelColsCnt == 1\\\"\\n                                                (onChange)=\\\"onChangeVisibility(devcol)\\\"\\n                                                [(ngModel)]=\\\"devcol.visibility\\\">\\n                                </p-checkbox></td>\\n                                <td>{{devcol.header}}</td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n            <button class=\\\"btn filter-items\\\" (click)=\\\"onChangeFilter()\\\"\\n                    pTooltip=\\\"{{ (isHideFilter)?'On Filter':'Off Filter' }}\\\"  tooltipPosition=\\\"top\\\"\\n                    [ngClass]=\\\"{'btn-primary':!isHideFilter, 'btn-secondary':isHideFilter}\\\" >\\n                <i class=\\\"fa fa-filter\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-danger delete-item\\\"\\n                    pTooltip=\\\"Delete Rows\\\"  tooltipPosition=\\\"top\\\"\\n                    (click)=\\\"onDeleteRows()\\\" [disabled]=\\\"selectedRows.length == 0\\\">\\n                <i class=\\\"fa fa-trash\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-primary add-item\\\" (click)=\\\"onAddNewDevice()\\\">+ Add New</button>\\n            <div class=\\\"clearfix\\\"></div>\\n        </div>\\n        <p-table #dt sortMode=\\\"multiple\\\"\\n                 [value]=\\\"devices\\\"\\n                 [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\n                 [totalRecords]=\\\"devices.length\\\"\\n                 [(selection)]=\\\"selectedRows\\\"\\n                 selectionMode=\\\"multiple\\\"\\n                 (onHeaderCheckboxToggle)=\\\"selectAllRows($event)\\\"\\n                 (onRowSelect)=\\\"onRowSelect($event)\\\" (onRowUnselect)=\\\"onRowUnselect($event)\\\">\\n            <ng-template pTemplate=\\\"header\\\">\\n                <tr>\\n                    <th class=\\\"mg-item-checkbox\\\">\\n                        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\\n                    </th>\\n                    <th class=\\\"th-id-wrap\\\"\\n                        *ngFor=\\\"let devcol of deviceCols\\\"\\n                        [ngClass]=\\\"{'mg-hide': !devcol.visibility}\\\"\\n                        [pSortableColumn]=\\\" (devcol.group != '')? devcol.group + '.' + devcol.field: devcol.field\\\" pResizableColumn>\\n                        {{devcol.header}}\\n                        <p-sortIcon [field]=\\\"devcol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                    </th>\\n                </tr>\\n                <tr [ngClass]=\\\"{'mg-hide':isHideFilter}\\\">\\n                    <th></th>\\n                    <th *ngFor=\\\"let devcol of deviceCols\\\"\\n                        [ngClass]=\\\"{'mg-hide':!devcol.visibility}\\\"\\n                        [ngSwitch]=\\\"devcol.field\\\" >\\n                        <input *ngSwitchCase=\\\"devcol.field\\\" pInputText type=\\\"text\\\"\\n                               (input)=\\\"onTblFilter($event, devcol, dt)\\\">\\n                    </th>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"body\\\" let-device>\\n                <tr>\\n                    <td>\\n                        <p-tableCheckbox [value]=\\\"device\\\"></p-tableCheckbox>\\n                    </td>\\n                    <td *ngFor=\\\"let devcol of deviceCols\\\"  (click)=\\\"editDevice(device)\\\"\\n                        [ngClass]=\\\"{'mg-hide':!devcol.visibility}\\\">\\n                        {{ (devcol.group != '')? device[devcol.group][devcol.field]: device[devcol.field]}}\\n                    </td>\\n                </tr>\\n            </ng-template>\\n        </p-table>\\n    </div>\\n    <p-confirmDialog header=\\\"Warning!\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {DeviceFormService} from \"../../../core/services/device-form.service\";\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\nimport {ScrollMovingService} from \"../../../core/services/scroll-moving.service\";\nimport {UpdateDeviceService} from \"../../../core/services/update-device.service\";\nimport {ExpandingDeviceService} from \"../../../core/services/expanding-device.service\";\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {forkJoin} from \"rxjs\";\nimport {ConfirmationService} from \"primeng/api\";\nimport {ReadIcdService} from \"../../../core/services/read-icd.service\";\nimport {SettingService} from \"../../../core/services/setting.service\";\n\ndeclare function checkTable(tblId, tdInfo): any;\ndeclare function initTable(tblId): any;\ndeclare function readTable(tblId): any;\ndeclare function updateTableWidth(tblName, tdInfo): any;\ndeclare var config;\n\n@Component({\n    selector: 'app-device-table',\n    templateUrl: './device-table.component.html',\n    styleUrls: ['./device-table.component.css'],\n    providers: [ConfirmationService]\n})\n\nexport class DeviceTableComponent implements OnInit {\n\n    isEnabled: boolean;\n    bayId: string;\n    devices: Array<Device>;\n    deviceCols: any[];\n    iecCols: any[];\n\n    selectedRows: Array<Device>;\n    accessToken: string;\n    apiURL: string;\n\n    contentLoaded: boolean;\n    isHideFilter: boolean;\n\n    isShowSetting: boolean;\n    curSelColsCnt: number;\n    tableId: string;\n    tableSettingName: string;\n\n    constructor(\n        private deviceFormService: DeviceFormService,\n        private httpService: HttpServiceHelper,\n        private scrollService: ScrollMovingService,\n        private updateDeviceService: UpdateDeviceService,\n        private expandDeviceService: ExpandingDeviceService,\n        private navService: NavigationService,\n        private readIcdService: ReadIcdService,\n        private settingService: SettingService,\n        private confirmationService: ConfirmationService) {\n\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n        this.contentLoaded = false;\n        this.isEnabled = false;\n        this.bayId = '';\n\n        this.isHideFilter = false;\n        this.devices = [];\n        this.selectedRows = [];\n        this.apiURL = `${config.client_info.apiURL.serverURL}/devices`;\n\n        this.tableId = 'device-list';\n        this.tableSettingName = this.tableId +'_setting';\n        this.isShowSetting = false;\n        this.deviceCols = [\n            {field: 'mrid', header: 'MrId', group:''},\n            {field: 'name', header: 'Name', group:''},\n            {field: 'devicetypemrid', header: 'DeviceTypeMrID', group:''},\n            {field: 'description', header: 'Description', group:''},\n            {field: 'latitude', header: 'Location.Lat', group:'location'},\n            {field: 'longitude', header: 'Location.Lon', group:'location'},\n            {field: 'altitude', header: 'Location.Alt', group:'location'},\n        ];\n\n    }\n\n    ngOnInit() {\n\n        this.initTableSetting();\n\n        this.expandDeviceService.getDeviceStatusInfo().subscribe(deviceStatus => {\n            this.isEnabled = deviceStatus.mode;\n            this.bayId = deviceStatus.bayId;\n            this.getDevices();\n        });\n\n        this.updateDeviceService.getDeviceInfo().subscribe(updateInfo => {\n            if (updateInfo.mode) {\n                this.devices.push(updateInfo.newDevice);\n            } else {\n                for (let i = 0; i < this.devices.length; i++) {\n                    if (this.devices[i].mrid == updateInfo.mrid) {\n                        this.devices[i] = updateInfo.newDevice;\n                    }\n                }\n            }\n        });\n\n        this.readIcdService.getBayInfo().subscribe(bayInfo => {\n            this.bayId = bayInfo.bayId;\n            this.getDevices();\n        });\n    }\n\n    getDevices() {\n        const getDeviceURL = `${config.client_info.apiURL.serverURL}/bays/${this.bayId}/devices`;\n        let devIdList = [];\n        let promiseList = [];\n        this.httpService.httpGetRequest(this.accessToken, getDeviceURL)\n            .subscribe((res: any) => {\n                devIdList = res;\n                for (let i = 0; i < devIdList.length; i++) {\n                    let devDetailURL = this.apiURL + '/' + devIdList[i];\n                    promiseList.push(this.httpService.httpGetRequest(this.accessToken, devDetailURL));\n                }\n                if (devIdList.length > 0) {\n                    forkJoin(promiseList).subscribe(results => {\n                        this.devices = results;\n                        this.contentLoaded = true;\n                        console.log('Success in device listing', results);\n                    }, err => {\n                        this.devices = [];\n                        this.contentLoaded = true;\n                        console.error(\"Can't get device details\", err);\n                    })\n                } else {\n                    this.devices = [];\n                    this.contentLoaded = true;\n                    console.warn('Empty Device Id List');\n                }\n            }, err => {\n                this.devices = [];\n                this.contentLoaded = true;\n                console.log('Error in devices listing', err);\n            });\n    }\n\n    isChanged() {\n        let opSaveBtn: any;\n        opSaveBtn = document.getElementsByClassName('dev-form-btn op-btn-save');\n        if (opSaveBtn) {\n            let disabledBtnCnt = 0;\n            for (let i = 0; i < opSaveBtn.length; i++) {\n                if (opSaveBtn[i].disabled) {\n                    disabledBtnCnt++;\n                }\n            }\n            if (disabledBtnCnt != opSaveBtn.length) {\n                return true;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    closeMe() {\n        this.navService.setNavInfo('bay-form', true, this.bayId);\n        this.scrollService.setMovedScroll(true, '');\n        this.devices = [];\n    }\n\n    onCloseComponent() {\n        let self = this;\n        if (this.isChanged()) {\n            this.confirmationService.confirm({\n                message: 'Changes you made may not be saved.',\n                accept: () => {\n                    self.closeMe();\n                },\n                reject: () => {\n\n                }\n            });\n        } else {\n            this.closeMe();\n        }\n    }\n\n    onDeleteRows() {\n        let deviceIds = [];\n        let promiseList = [];\n        this.contentLoaded = false;\n        for (let i = 0; i < this.selectedRows.length; i++) {\n            let devDeleteURL = this.apiURL + '/' + this.selectedRows[i].mrid;\n            deviceIds.push(this.selectedRows[i].mrid);\n            promiseList.push(this.httpService.httpDeleteRequest(this.accessToken, devDeleteURL));\n        }\n        if (deviceIds.length > 0) {\n            forkJoin(promiseList).subscribe(results => {\n                let leftDevices = [];\n                for (let i = 0; i < this.devices.length; i++) {\n                    if (deviceIds.indexOf(this.devices[i].mrid) < 0) {\n                        leftDevices.push(this.devices[i]);\n                    }\n                }\n                this.devices = leftDevices;\n                this.selectedRows = [];\n                this.contentLoaded = true;\n                console.log('Success in device Deleting', results);\n            }, err => {\n                this.devices = [];\n                this.contentLoaded = true;\n                console.log(\"Can't delete device\", err);\n            });\n        } else {\n            this.devices = [];\n            this.contentLoaded = true;\n            console.warn('Empty Device Id List - Delete Device Function');\n        }\n    }\n\n    editDevice(device) {\n        let self = this;\n        this.navService.setNavInfo('dev-form', true, device.mrid);\n        setTimeout(function () {\n            self.deviceFormService.setDeviceFormInfo(false, self.bayId, device);\n            self.scrollService.setMovedScroll(true, 'device-form');\n        }, 100);\n\n    }\n\n    onAddNewDevice() {\n        let self = this;\n        this.navService.setNavInfo('dev-form', true, '');\n        setTimeout(function () {\n            self.deviceFormService.setDeviceFormInfo(true, self.bayId, null);\n            self.scrollService.setMovedScroll(true, 'device-form');\n        }, 100);\n    }\n\n    onRowSelect(event) {\n        console.log(this.selectedRows);\n    }\n\n    onRowUnselect(event) {\n        console.log(this.selectedRows);\n    }\n\n    selectAllRows(event) {\n        if (event.checked) {\n            // alert('all rows selected');\n            console.log(this.selectedRows);\n        } else {\n            // alert('all rows diselected');\n        }\n    }\n\n    initTableSetting() {\n\n        readTable(this.tableId);\n        let tblSettingStr = localStorage.getItem(this.tableSettingName);\n        let settingInfo: any;\n        if(tblSettingStr) {\n            settingInfo = JSON.parse(tblSettingStr);\n        } else {\n            //Write New Setting\n            settingInfo = { filter: true};\n            settingInfo.visible = [\n                'MrId','Name','DeviceTypeMrID','Description',\n                'Location.Lat','Location.Lon','Location.Alt',\n            ];\n            localStorage.setItem(this.tableSettingName, JSON.stringify(settingInfo));\n        }\n\n        this.isHideFilter = !settingInfo.filter;\n        this.deviceCols = this.checkColVisibility(this.deviceCols, settingInfo.visible);\n        this.curSelColsCnt = settingInfo.visible.length;\n    }\n\n    checkColVisibility(colList: any, visibleColList: any) {\n\n        for(let i = 0; i<colList.length; i++) {\n            colList[i].visibility = visibleColList.indexOf(colList[i].header)>-1;\n        }\n        return colList;\n    }\n\n    onChangeVisibility(item) {\n        checkTable(this.tableId, item);\n        if(item.visibility){\n            this.curSelColsCnt += 1;\n        } else {\n            this.curSelColsCnt -= 1;\n        }\n        this.settingService.setSettingInfo(this.tableSettingName,'visibility', {col:item.header,st:item.visibility})\n    }\n\n    onTblFilter(ev, item, dt) {\n        let field = (item.group != '')? item.group + '.' + item.field: item.field;\n        dt.filter(ev.target.value,  field, item.filterMatchMode);\n    }\n\n    onChangeFilter() {\n        this.isHideFilter = !this.isHideFilter;\n        this.settingService.setSettingInfo(this.tableSettingName,'filter', this.isHideFilter);\n    }\n\n    onColResize($ev) {\n        updateTableWidth(this.tableId, $ev);\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjbGllbnQvYXBwL21vZHVsZXMvY29tcG9uZW50cy9kZXZpY2UtdHlwZS1mb3JtL2RldmljZS10eXBlLWZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"device-type-form mg-op-form mg-app-component\\\" *ngIf=\\\"isEnabled\\\" id=\\\"device-type-form\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n            <div class=\\\"card-title\\\">\\n                <h4>Device Type Details</h4>\\n                <span (click)=\\\"onCloseComponent()\\\"><i class=\\\"fa fa-2x fa-close\\\"></i></span>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-6\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary op-btn-save\\\" (click)=\\\"onSaveFormData()\\\"\\n                            [disabled]=\\\"!isFormChanged\\\">{{ (formMode)?'Add':'Save' }}\\n                    </button>\\n                </div>\\n            </div>\\n            <div class=\\\"clearfix\\\"></div>\\n            <div class=\\\"form-content-wrap\\\">\\n                <div class=\\\"ui-g\\\">\\n                    <div class=\\\"ui-g-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"msid\\\">MrID</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'mg-error':(devType.mrid.trim().length == 0)}\\\"\\n                                   (ngModelChange)=\\\"mridChange($event)\\\"\\n                                   [ngModel]=\\\"devType.mrid\\\" id=\\\"msid\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"vendor\\\">Vendor</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'mg-error':(devType.vendor.trim().length == 0)}\\\"\\n                                   (ngModelChange)=\\\"vendorChange($event)\\\"\\n                                   [ngModel]=\\\"devType.vendor\\\" id=\\\"vendor\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g\\\">\\n                    <div class=\\\"ui-g-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"hwRev\\\">HwRev</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'mg-error':(devType.hwRev.trim().length == 0)}\\\"\\n                                   (ngModelChange)=\\\"hwRevChange($event)\\\"\\n                                   [ngModel]=\\\"devType.hwRev\\\" id=\\\"hwRev\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"swRev\\\">SwRev</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'mg-error':(devType.swRev.trim().length == 0)}\\\"\\n                                   (ngModelChange)=\\\"swRevChange($event)\\\"\\n                                   [ngModel]=\\\"devType.swRev\\\" id=\\\"swRev\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g\\\">\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"serNum\\\">SerNum</label>\\n                            <input name=\\\"description\\\" class=\\\"form-control\\\"\\n                                   (ngModelChange)=\\\"serNumChange($event)\\\"\\n                                   [ngModel]=\\\"devType.serNum\\\" id=\\\"serNum\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"model\\\">Model</label>\\n                            <input name=\\\"description\\\" class=\\\"form-control\\\"\\n                                   (ngModelChange)=\\\"modelChange($event)\\\"\\n                                   [ngModel]=\\\"devType.model\\\" id=\\\"model\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"owner\\\">Owner</label>\\n                            <input name=\\\"description\\\" class=\\\"form-control\\\"\\n                                   (ngModelChange)=\\\"ownerChange($event)\\\"\\n                                   [ngModel]=\\\"devType.owner\\\" id=\\\"owner\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g\\\">\\n                    <div class=\\\"ui-g-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"primeOps\\\">PrimeOps</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                                   (ngModelChange)=\\\"primeOpsChange($event)\\\"\\n                                   [ngModel]=\\\"devType.primeOps\\\" id=\\\"primeOps\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"secondOps\\\">SecondOps</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                                   (ngModelChange)=\\\"secondOpsChange($event)\\\"\\n                                   [ngModel]=\\\"devType.secondOps\\\" id=\\\"secondOps\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <p-confirmDialog header=\\\"Warning!\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\nimport {ScrollMovingService} from \"../../../core/services/scroll-moving.service\";\nimport {UpdateDeviceTypeService} from \"../../../core/services/update-device-type.service\";\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {ConfirmationService} from \"primeng/api\";\nimport {DeviceTypeFormService} from \"../../../core/services/device-type-form.service\";\n\ndeclare var config;\n\n@Component({\n    selector: 'app-device-type-form',\n    templateUrl: './device-type-form.component.html',\n    styleUrls: ['./device-type-form.component.css'],\n    providers: [ConfirmationService]\n})\nexport class DeviceTypeFormComponent implements OnInit {\n\n    formMode: boolean; //True = >add mode, False=> edit mode\n    isEnabled: boolean;\n    formData: any;\n\n    devType: DeviceType;\n\n    isFormChanged: boolean;\n\n    accessToken: string;\n    apiURL: string;\n\n    constructor(private httpService: HttpServiceHelper,\n                private deviceTypeFormService: DeviceTypeFormService,\n                private scrollService: ScrollMovingService,\n                private updateDeviceTypeService: UpdateDeviceTypeService,\n                private navService: NavigationService,\n                private confirmationService: ConfirmationService) {\n\n        this.isFormChanged = false;\n\n        this.formMode = true;\n        this.isEnabled = false;\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n        this.initFormFields();\n        this.apiURL = `${config.client_info.apiURL.serverURL}/devicetypes`;\n    }\n\n    ngOnInit() {\n        this.deviceTypeFormService.getDeviceTypeFormInfo().subscribe(formInfo => {\n            this.isEnabled = formInfo.showMode;\n            this.formData = formInfo.value;\n            this.formMode = formInfo.type;\n            if (this.formMode) { //Add Mode\n                this.initFormData();\n            }\n            this.devType = JSON.parse(JSON.stringify(this.formData));\n            this.isFormChanged = false;\n        })\n    }\n\n    initFormData() {\n        this.formData = {\n            mrid: '',\n            vendor: '',\n            hwRev: '',\n            swRev: '',\n            serNum: '',\n            model: '',\n            owner: '',\n            primeOps: '',\n            secondOps: ''\n        }\n    }\n\n    initFormFields() {\n        this.devType = {\n            mrid: '',\n            vendor: '',\n            hwRev: '',\n            swRev: '',\n            serNum: '',\n            model: '',\n            owner: '',\n            primeOps: '',\n            secondOps: ''\n        };\n\n    }\n\n    onSaveFormData() {\n        if (this.checkValidation()) {\n            let postBody = JSON.parse(JSON.stringify(this.devType));\n            if (this.formMode) { //Add mode\n                this.httpService.httpPostRequest(this.accessToken, this.apiURL, postBody)\n                    .subscribe((res: any) => {\n                        this.formData = postBody;\n                        this.updateDeviceTypeService.setDeviceTypeInfo(true, null, postBody);\n                        this.initFormFields();\n                        this.initFormData();\n                        this.isFormChanged = false;\n                        console.log('Success in add device type', postBody);\n                    }, err => {\n                        this.formData = {};\n                        console.log('Error in add device type', err);\n                    });\n            } else { //Edit mode\n                let deviceTypeEditURL = this.apiURL + '/' + this.formData.mrid;\n                this.httpService.httpPutRequest(this.accessToken, deviceTypeEditURL, postBody)\n                    .subscribe((res: any) => {\n                        this.updateDeviceTypeService.setDeviceTypeInfo(false, this.formData.mrid, postBody);\n                        this.formData = postBody;\n                        this.isFormChanged = false;\n                        console.log('Success in update measurements', postBody);\n                    }, err => {\n                        this.formData = {};\n                        console.log('Error in update measurements', err);\n                    });\n            }\n\n        }\n    }\n\n    isChanged() {\n        let opSaveBtn: any;\n        opSaveBtn = document.getElementsByClassName('op-btn-save');\n        if (opSaveBtn) {\n            let disabledBtnCnt = 0;\n            for (let i = 0; i < opSaveBtn.length; i++) {\n                if (opSaveBtn[i].disabled) {\n                    disabledBtnCnt++;\n                }\n            }\n            if (disabledBtnCnt != opSaveBtn.length) {\n                return true;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    closeMe() {\n        this.isEnabled = false;\n        this.isFormChanged = false;\n        this.initFormFields();\n    }\n\n    onCloseComponent() {\n        let self = this;\n        if (this.isChanged()) {\n            this.confirmationService.confirm({\n                message: 'Changes you made may not be saved.',\n                accept: () => {\n                    self.closeMe();\n                },\n                reject: () => {\n\n                }\n            });\n        } else {\n            this.closeMe();\n        }\n    }\n\n    checkValidation() {\n        return (this.devType.mrid.trim() != \"\" &&\n            this.devType.vendor.trim() != \"\" &&\n            this.devType.hwRev.trim() != \"\" &&\n            this.devType.swRev.trim() != \"\")\n    }\n\n    checkFormChange() {\n        this.isFormChanged = (this.devType.mrid != this.formData.mrid ||\n            this.devType.vendor != this.formData.vendor ||\n            this.devType.hwRev != this.formData.hwRev ||\n            this.devType.swRev != this.formData.swRev ||\n            this.devType.serNum != this.formData.serNum ||\n            this.devType.model != this.formData.model ||\n            this.devType.owner != this.formData.owner ||\n            this.devType.primeOps != this.formData.primeOps ||\n            this.devType.secondOps != this.formData.secondOps);\n    }\n\n    mridChange(newVal: string) {\n        this.devType.mrid = newVal;\n        this.checkFormChange();\n    }\n\n    vendorChange(newVal: string){\n        this.devType.vendor = newVal;\n        this.checkFormChange();\n    }\n    serNumChange(newVal: string){\n        this.devType.serNum = newVal;\n        this.checkFormChange();\n    }\n    hwRevChange(newVal: string){\n        this.devType.hwRev = newVal;\n        this.checkFormChange();\n    }\n    swRevChange(newVal: string){\n        this.devType.swRev = newVal;\n        this.checkFormChange();\n    }\n    modelChange(newVal: string){\n        this.devType.model = newVal;\n        this.checkFormChange();\n    }\n    ownerChange(newVal: string){\n        this.devType.owner = newVal;\n        this.checkFormChange();\n    }\n    primeOpsChange(newVal: string){\n        this.devType.primeOps = newVal;\n        this.checkFormChange();\n    }\n    secondOpsChange(newVal: string){\n        this.devType.secondOps = newVal;\n        this.checkFormChange();\n    }\n\n\n}\n","module.exports = \".device-type-list {\\r\\n    width: 1400px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL2RldmljZS10eXBlLXRhYmxlL2RldmljZS10eXBlLXRhYmxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0FBQ2pCIiwiZmlsZSI6ImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL2RldmljZS10eXBlLXRhYmxlL2RldmljZS10eXBlLXRhYmxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGV2aWNlLXR5cGUtbGlzdCB7XHJcbiAgICB3aWR0aDogMTQwMHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"device-type-list card mg-app-component\\\" id=\\\"{{tableId}}\\\">\\n    <div class=\\\"content-loading\\\" *ngIf=\\\"!contentLoaded\\\">\\n        <img src=\\\"../../../../assets/img/loading.svg\\\">\\n    </div>\\n    <div class=\\\"card-header\\\">\\n        <div class=\\\"card-title\\\">\\n            <h4>Device Types</h4>\\n        </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"table-setting-bar\\\">\\n            <div class=\\\"dropdown mg-dropdown-area\\\" >\\n                <div class=\\\"drop-down-backdrop\\\" (click)=\\\"isShowSetting=false\\\" *ngIf=\\\"isShowSetting\\\"></div>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle mg-toggle-btn\\\"\\n                        pTooltip=\\\"Column Setting\\\"  tooltipPosition=\\\"top\\\"\\n                        (click)=\\\"isShowSetting = !isShowSetting\\\">\\n                    <i class=\\\"fa fa-cog\\\"></i>\\n                </button>\\n                <div class=\\\"dropdown-menu mg-dropdown-menu\\\" *ngIf=\\\"isShowSetting\\\">\\n                    <div style=\\\"text-align:left\\\">\\n                        <table>\\n                            <thead>\\n                                <tr>\\n                                    <th>Visible</th>\\n                                    <th>Column</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let devtypecols of deviceTypeCols\\\">\\n                                    <td><p-checkbox binary=\\\"true\\\" value=\\\"true\\\" [disabled]=\\\"devtypecols.visibility && curSelColsCnt == 1\\\"\\n                                                    (onChange)=\\\"onChangeVisibility(devtypecols)\\\"\\n                                                    [(ngModel)]=\\\"devtypecols.visibility\\\">\\n                                    </p-checkbox></td>\\n                                    <td>{{devtypecols.header}}</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n            <button class=\\\"btn filter-items\\\" (click)=\\\"onChangeFilter()\\\"\\n                    pTooltip=\\\"{{ (isHideFilter)?'On Filter':'Off Filter' }}\\\"  tooltipPosition=\\\"top\\\"\\n                    [ngClass]=\\\"{'btn-primary':!isHideFilter, 'btn-secondary':isHideFilter}\\\" >\\n                <i class=\\\"fa fa-filter\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-danger delete-item\\\"\\n                    pTooltip=\\\"Delete Rows\\\"  tooltipPosition=\\\"top\\\"\\n                    (click)=\\\"onDeleteRows()\\\" [disabled]=\\\"selectedRows.length == 0\\\">\\n                <i class=\\\"fa fa-trash\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-primary add-item\\\" (click)=\\\"onAddNewRow()\\\">+ Add New</button>\\n            <div class=\\\"clearfix\\\"></div>\\n        </div>\\n        <p-table #dt sortMode=\\\"multiple\\\"\\n                 [value]=\\\"deviceTypes\\\"\\n                 [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\n                 [totalRecords]=\\\"deviceTypes.length\\\"\\n                 [(selection)]=\\\"selectedRows\\\"\\n                 selectionMode=\\\"multiple\\\"\\n                 [resizableColumns]=\\\"true\\\"\\n                 columnResizeMode=\\\"expand\\\"\\n                 (onColResize) = \\\"onColResize($event)\\\"\\n                 (onHeaderCheckboxToggle)=\\\"selectAllRows($event)\\\"\\n                 (onRowSelect)=\\\"onRowSelect($event)\\\" (onRowUnselect)=\\\"onRowUnselect($event)\\\">\\n            <ng-template pTemplate=\\\"header\\\">\\n                <tr>\\n                    <th class=\\\"mg-item-checkbox\\\">\\n                        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\\n                    </th>\\n                    <th class=\\\"th-id-wrap\\\"\\n                        *ngFor=\\\"let devicetypecol of deviceTypeCols\\\"\\n                        [ngClass]=\\\"{'mg-hide': !devicetypecol.visibility}\\\"\\n                        [pSortableColumn]=\\\"devicetypecol.field\\\" pResizableColumn>\\n                        {{devicetypecol.header}}\\n                        <p-sortIcon [field]=\\\"devicetypecol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                    </th>\\n                </tr>\\n                <tr [ngClass]=\\\"{'mg-hide':isHideFilter}\\\">\\n                    <th></th>\\n                    <th *ngFor=\\\"let devicetypecol of deviceTypeCols\\\"\\n                        [ngClass]=\\\"{'mg-hide':!devicetypecol.visibility}\\\"\\n                        [ngSwitch]=\\\"devicetypecol.field\\\" >\\n                        <input *ngSwitchCase=\\\"devicetypecol.field\\\" pInputText type=\\\"text\\\"\\n                               (input)=\\\"onTblFilter($event, devicetypecol, dt)\\\">\\n                    </th>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"body\\\" let-devicetype>\\n                <tr>\\n                    <td>\\n                        <p-tableCheckbox [value]=\\\"devicetype\\\"></p-tableCheckbox>\\n                    </td>\\n                    <td *ngFor=\\\"let devicetypecol of deviceTypeCols\\\"  (click)=\\\"editDevType(devicetype)\\\"\\n                        [ngClass]=\\\"{'mg-hide':!devicetypecol.visibility}\\\">\\n                        {{ devicetype[devicetypecol.field] }}\\n                    </td>\\n                </tr>\\n            </ng-template>\\n        </p-table>\\n    </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {DeviceTypeFormService} from \"../../../core/services/device-type-form.service\";\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\nimport {ScrollMovingService} from \"../../../core/services/scroll-moving.service\";\nimport {UpdateDeviceTypeService} from \"../../../core/services/update-device-type.service\";\nimport {forkJoin} from \"rxjs\";\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {SettingService} from \"../../../core/services/setting.service\";\n\ndeclare function checkTable(tblId, tdInfo): any;\ndeclare function initTable(tblId): any;\ndeclare function readTable(tblId): any;\ndeclare function updateTableWidth(tblName, tdInfo): any;\ndeclare var config;\n\n@Component({\n    selector: 'app-device-type-table',\n    templateUrl: './device-type-table.component.html',\n    styleUrls: ['./device-type-table.component.css']\n})\nexport class DeviceTypeTableComponent implements OnInit {\n\n    deviceTypes: Array<DeviceType>;\n    deviceTypeCols: any[];\n    locationCols: any[];\n    addressCols: any[];\n    contactCols: any[];\n    selectedRows: Array<DeviceType>;\n    accessToken: string;\n    apiURL: string;\n\n    contentLoaded: boolean;\n    isHideFilter: boolean;\n    \n    isShowSetting: boolean;\n    curSelColsCnt: number;\n    tableId: string;\n    tableSettingName: string;\n    \n    constructor(\n        private deviceTypeFormService: DeviceTypeFormService,\n        private httpService: HttpServiceHelper,\n        private scrollService: ScrollMovingService,\n        private settingService: SettingService,\n        private navService: NavigationService,\n        private updateDeviceTypeService: UpdateDeviceTypeService) {\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n        this.contentLoaded = false;\n        this.deviceTypes = [];\n        this.selectedRows = [];\n        this.isHideFilter = false;\n        this.apiURL = `${config.client_info.apiURL.serverURL}/devicetypes`;\n\n        this.tableId = 'device-type-list';\n        this.tableSettingName = this.tableId +'_setting';\n        this.isShowSetting = false;\n        this.deviceTypeCols = [\n            {field: 'mrid', header: 'MrID', group:''},\n            {field: 'vendor', header: 'Vendor', group:''},\n            {field: 'hwRev', header: 'HwRev', group:''},\n            {field: 'swRev', header: 'SwRev', group:''},\n            {field: 'model', header: 'Model', group:''},\n            {field: 'owner', header: 'Owner', group:''},\n            {field: 'primeOps', header: 'PrimeOps', group:''},\n            {field: 'secondOps', header: 'SecondOps', group:''},\n        ];\n        \n    }\n\n    ngOnInit() {\n\n        this.getDeviceTypes();\n        this.initTableSetting();\n        \n        this.updateDeviceTypeService.getDeviceTypeInfo().subscribe(updateInfo => {\n            if (updateInfo.mode) {\n                console.log(updateInfo.newDeviceType);\n                this.deviceTypes.push(updateInfo.newDeviceType);\n            } else {\n                for (let i = 0; i < this.deviceTypes.length; i++) {\n                    if (this.deviceTypes[i].mrid == updateInfo.mrid) {\n                        this.deviceTypes[i] = updateInfo.newDeviceType;\n                    }\n                }\n            }\n        });\n    }\n\n    getDeviceTypes() {\n        let deviceTypeIdList = [];\n        let promiseList = [];\n        this.httpService.httpGetRequest(this.accessToken, this.apiURL).subscribe((res: any) => {\n            deviceTypeIdList = res;\n            for (let i = 0; i < deviceTypeIdList.length; i++) {\n                let deviceTypeDetailURL = this.apiURL + '/' + deviceTypeIdList[i];\n                promiseList.push(this.httpService.httpGetRequest(this.accessToken, deviceTypeDetailURL));\n            }\n            if (deviceTypeIdList.length > 0) {\n                forkJoin(promiseList).subscribe(results => {\n                    this.deviceTypes = results;\n                    this.contentLoaded = true;\n                }, err => {\n                    console.log(\"Can't get device type list\", err);\n                    this.deviceTypes = [];\n                    this.contentLoaded = true;\n                })\n            } else {\n                console.log(\"Empty device type list\");\n                this.deviceTypes = [];\n                this.contentLoaded = true;\n            }\n        }, error => {\n            if (error.error instanceof ErrorEvent) {\n                alert(error.error.message);\n            } else {\n                alert(`Backend returned code ${error.status}, body was: ${JSON.stringify(error.error)}`);\n            }\n            console.error(\"Can't get device type list\", error);\n            this.deviceTypes = [];\n            this.contentLoaded = true;\n        });\n    }\n\n    onDeleteRows() {\n        let devTypeIds = [];\n        let promiseList = [];\n        for (let i = 0; i < this.selectedRows.length; i++) {\n            let subDeleteURL = this.apiURL + '/' + this.selectedRows[i].mrid;\n            devTypeIds.push(this.selectedRows[i].mrid);\n            promiseList.push(this.httpService.httpDeleteRequest(this.accessToken, subDeleteURL));\n        }\n        if (devTypeIds.length > 0) {\n            forkJoin(promiseList).subscribe(results => {\n                let leftDeviceTypes = [];\n                for (let i = 0; i < this.deviceTypes.length; i++) {\n                    if (devTypeIds.indexOf(this.deviceTypes[i].mrid) < 0) {\n                        leftDeviceTypes.push(this.deviceTypes[i]);\n                    }\n                }\n                this.deviceTypes = leftDeviceTypes;\n                this.selectedRows = [];\n                this.contentLoaded = true;\n                console.log('Success in substation Deleting', results);\n            }, err => {\n                this.deviceTypes = [];\n                this.contentLoaded = true;\n                console.error('Error in deviceTypes Deleting', err);\n            })\n        } else {\n            this.deviceTypes = [];\n            this.contentLoaded = true;\n            console.log('Error in deviceTypes Deleting due to the Empty String');\n        }\n    }\n\n    editDevType(devicetype) {\n        let self = this;\n        this.navService.setNavInfo('device-type-form', true, '');\n        setTimeout(function () {\n            self.deviceTypeFormService.setDeviceTypeFormInfo(false, devicetype, true);\n            self.scrollService.setMovedScroll(true, 'device-type-form');\n        }, 100);\n    }\n\n    onAddNewRow() {\n        let self = this;\n        this.navService.setNavInfo('device-type-form', true, '');\n        setTimeout(function () {\n            self.deviceTypeFormService.setDeviceTypeFormInfo(true, null, true);\n            self.scrollService.setMovedScroll(true, 'device-type-form');\n        }, 100);\n    }\n\n    onRowSelect(event) {\n        console.log(this.selectedRows);\n    }\n\n    onRowUnselect(event) {\n        console.log(this.selectedRows);\n    }\n\n    selectAllRows(event) {\n        if (event.checked) {\n            // alert('all rows selected');\n            console.log(this.selectedRows);\n        } else {\n            // alert('all rows diselected');\n\n        }\n    }\n    // ====================================================\n    initTableSetting() {\n\n        readTable(this.tableId);\n        let tblSettingStr = localStorage.getItem(this.tableSettingName);\n        let settingInfo: any;\n        if(tblSettingStr) {\n            settingInfo = JSON.parse(tblSettingStr);\n        } else {\n            //Write New Setting\n            settingInfo = { filter: true};\n            settingInfo.visible = ['MrID','Vendor','HwRev','SwRev','Model','Owner','PrimeOps','SecondOps'];\n            localStorage.setItem(this.tableSettingName, JSON.stringify(settingInfo));\n        }\n\n        this.isHideFilter = !settingInfo.filter;\n        this.deviceTypeCols = this.checkColVisibility(this.deviceTypeCols, settingInfo.visible);\n        this.curSelColsCnt = settingInfo.visible.length;\n    }\n\n    checkColVisibility(colList: any, visibleColList: any) {\n\n        for(let i = 0; i<colList.length; i++) {\n            colList[i].visibility = visibleColList.indexOf(colList[i].header)>-1;\n        }\n        return colList;\n    }\n\n    onChangeVisibility(item) {\n        checkTable(this.tableId, item);\n        if(item.visibility){\n            this.curSelColsCnt += 1;\n        } else {\n            this.curSelColsCnt -= 1;\n        }\n        this.settingService.setSettingInfo(this.tableSettingName,'visibility', {col:item.header,st:item.visibility})\n    }\n\n    onTblFilter(ev, item, dt) {\n        let field = (item.group != '')? item.group + '.' + item.field: item.field;\n        dt.filter(ev.target.value,  field, item.filterMatchMode);\n    }\n\n    onChangeFilter() {\n        this.isHideFilter = !this.isHideFilter;\n        this.settingService.setSettingInfo(this.tableSettingName,'filter', this.isHideFilter);\n    }\n\n    onColResize($ev) {\n        updateTableWidth(this.tableId, $ev);\n    }\n}\n","module.exports = \"#global-setting-form {\\r\\n    float: left;\\r\\n    margin-left: 20px;\\r\\n    min-width: 350px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL2dsb2JhbC1zZXR0aW5nL2dsb2JhbC1zZXR0aW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsaUJBQWlCO0lBQ2pCLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJjbGllbnQvYXBwL21vZHVsZXMvY29tcG9uZW50cy9nbG9iYWwtc2V0dGluZy9nbG9iYWwtc2V0dGluZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2dsb2JhbC1zZXR0aW5nLWZvcm0ge1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcclxuICAgIG1pbi13aWR0aDogMzUwcHg7XHJcbn0iXX0= */\"","module.exports = \"<div id=\\\"global-setting-form\\\">\\n    <p-messages [(value)]=\\\"msgs\\\"></p-messages>\\n    <button type=\\\"button\\\" pButton\\n            icon=\\\"fa {{isReadingSetting?'fa-spinner fa-spin':'fa-upload'}}\\\"\\n            (click)=\\\"onReadSetting()\\\"\\n            label=\\\"Read Config\\\">\\n    </button>\\n    <input type=\\\"file\\\" hidden\\n           id=\\\"file\\\" accept='text/plain,.json'\\n           (change)=\\\"handleFileInput($event.target.files)\\\">\\n</div>\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\nimport {ConfirmationService, Message, MessageService} from \"primeng/api\";\n\ndeclare var config;\n\n@Component({\n    selector: 'app-global-setting',\n    templateUrl: './global-setting.component.html',\n    styleUrls: ['./global-setting.component.css'],\n    providers: [MessageService]\n})\nexport class GlobalSettingComponent implements OnInit {\n\n    accessToken: string;\n    apiURL: string;\n    isReadingSetting: boolean;\n    msgs: Message[] = [];\n\n    constructor(private httpService: HttpServiceHelper,\n                private messageService: MessageService) {\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n        this.apiURL = `${config.client_info.apiURL.serverURL}`;\n        this.isReadingSetting = false;\n    }\n\n    ngOnInit() {\n\n    }\n\n    onReadSetting() {\n        document.getElementById('file').click();\n    }\n\n    handleFileInput(files: FileList) {\n        let self = this;\n        let readICDURL = `${config.client_info.apiURL.serverURL}/readconfig`;\n        let fileBody: any = files.item(0);\n        let reader:any = new FileReader();\n        this.isReadingSetting = true;\n        reader.onload = function(){\n            let fileContent:string = reader.result;\n            self.httpService.httpFileUploadRequest(self.accessToken, readICDURL, fileContent).subscribe(resBody => {\n                console.log('Read Global Setting Successfully');\n                self.isReadingSetting = false;\n                let fileTag:any;\n                fileTag = document.getElementById('file');\n                fileTag.value = '';\n                self.showMsg('success', 'Success', 'Read Config file Successfully!');\n            },error => {\n                self.showMsg('error', 'Error', 'Read Config file Failed!');\n                self.isReadingSetting = false;\n            })\n        };\n        reader.readAsText(fileBody);\n    }\n    showMsg(msgType, summary, detail) {\n        this.msgs = [];\n        this.msgs.push({severity:msgType, summary:summary, detail:detail});\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjbGllbnQvYXBwL21vZHVsZXMvY29tcG9uZW50cy9tZWFzdXJlbWVudC1mb3JtL21lYXN1cmVtZW50LWZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"measurement-form mg-op-form mg-app-component\\\" *ngIf=\\\"isEnabled\\\" id=\\\"measurement-form\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n            <div class=\\\"card-title\\\">\\n                <h4>Measurement Details</h4>\\n                <span (click)=\\\"onCloseComponent()\\\"><i class=\\\"fa fa-2x fa-close\\\"></i></span>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-6\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary op-btn-save\\\" (click)=\\\"onSaveFormData()\\\"\\n                            [disabled]=\\\"!isFormChanged\\\">{{ (formMode)?'Add':'Save' }}\\n                    </button>\\n                </div>\\n            </div>\\n            <div class=\\\"clearfix\\\"></div>\\n            <div class=\\\"form-content-wrap\\\">\\n                <div class=\\\"ui-g\\\">\\n                    <div class=\\\"ui-g-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"msid\\\">ID</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'mg-error':(id.trim().length == 0)}\\\"\\n                                   (ngModelChange)=\\\"idChange($event)\\\"\\n                                   [ngModel]=\\\"id\\\" id=\\\"msid\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"name\\\">Name</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'mg-error':(name.trim().length == 0)}\\\"\\n                                   (ngModelChange)=\\\"nameChange($event)\\\"\\n                                   [ngModel]=\\\"name\\\" id=\\\"name\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g\\\">\\n                    <div class=\\\"ui-g-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"unit\\\">Unit</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'mg-error':(unit.trim().length == 0)}\\\"\\n                                   (ngModelChange)=\\\"unitChange($event)\\\"\\n                                   [ngModel]=\\\"unit\\\" id=\\\"unit\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"multiplier\\\">Multiplier</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'mg-error':(multiplier.trim().length == 0)}\\\"\\n                                   (ngModelChange)=\\\"multiplierChange($event)\\\"\\n                                   [ngModel]=\\\"multiplier\\\" id=\\\"multiplier\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g\\\">\\n                    <div class=\\\"ui-g-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"description\\\">Description</label>\\n                            <input name=\\\"description\\\" class=\\\"form-control\\\"\\n                                   (ngModelChange)=\\\"descriptionChange($event)\\\"\\n                                   [ngModel]=\\\"description\\\" id=\\\"description\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g\\\">\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"format\\\">Format</label>\\n                            <input name=\\\"description\\\" class=\\\"form-control\\\"\\n                            (ngModelChange)=\\\"formatChange($event)\\\"\\n                            [ngModel]=\\\"format\\\" id=\\\"format\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"aggregation\\\">Aggregation</label>\\n                            <select name=\\\"flags\\\" id=\\\"aggregation\\\" class=\\\"form-control\\\"\\n                                    (ngModelChange)=\\\"aggregationChange($event)\\\"\\n                                    [(ngModel)]=\\\"aggregation\\\">\\n                                <option *ngFor=\\\"let agge of aggregationList\\\" value=\\\"{{ agge.value }}\\\">{{agge.value}}</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"flags\\\">Enumeration Flags</label>\\n                            <select name=\\\"flags\\\" id=\\\"flags\\\" class=\\\"form-control\\\"\\n                                    (ngModelChange)=\\\"onChangeEnumFlags($event)\\\"\\n                                    [disabled]=\\\"!isEnabledEnum\\\"\\n                                    [(ngModel)]=\\\"enumFlag\\\">\\n                                <option value=\\\"true\\\" [selected]=\\\"enumFlag\\\">True</option>\\n                                <option value=\\\"false\\\" [selected]=\\\"!enumFlag\\\">False</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g\\\">\\n                    <div class=\\\"ui-g-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <p-checkbox [(ngModel)]=\\\"isEnabledEnum\\\"\\n                                        (ngModelChange)=\\\"onOffEnumValues($event)\\\"\\n                                        binary=\\\"true\\\" label=\\\"Enumeration Mode\\\"></p-checkbox>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n                <div class=\\\"ui-g mg-group-box\\\">\\n                    <div class=\\\"mg-group-box-title\\\">\\n                        <h5 class=\\\"\\\">Enumeration</h5>\\n                    </div>\\n                    <div class=\\\"ui-g\\\">\\n                        <div class=\\\"ui-g-12\\\">\\n                            <p-table #dt sortMode=\\\"multiple\\\"\\n                                     [value]=\\\"enumList\\\"\\n                                     [paginator]=\\\"true\\\" [rows]=\\\"5\\\"\\n                                     [totalRecords]=\\\"enumList.length\\\"\\n                                     selectionMode=\\\"single\\\"\\n                                     (onRowSelect)=\\\"onEnumRowSelect($event)\\\"\\n                                     (onRowUnselect)=\\\"onEnumRowUnSelect($event)\\\"\\n                                     [(selection)]=\\\"curSelEnum\\\">\\n                                <ng-template pTemplate=\\\"header\\\">\\n                                    <tr>\\n                                        <th *ngFor=\\\"let enumcol of enumCols\\\" [pSortableColumn]=\\\"enumcol.field\\\">\\n                                            {{enumcol.header}}\\n                                            <p-sortIcon [field]=\\\"enumcol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                                        </th>\\n                                        <th style=\\\"width:4em\\\"></th>\\n                                    </tr>\\n                                </ng-template>\\n                                <ng-template pTemplate=\\\"body\\\" let-i=\\\"rowIndex\\\" let-enum>\\n                                    <tr [pSelectableRow]=\\\"enum\\\">\\n                                        <td>{{i + 1}}</td>\\n                                        <td>{{enum}}</td>\\n                                        <td>\\n                                            <button pButton type=\\\"button\\\"\\n                                                    [disabled]=\\\"!isEnabledEnum\\\"\\n                                                    icon=\\\"pi pi-times\\\"\\n                                                    class=\\\"ui-button-danger\\\"\\n                                                    (click)=\\\"onDeleteEnum(enum)\\\"></button>\\n                                        </td>\\n                                    </tr>\\n                                </ng-template>\\n                                <ng-template pTemplate=\\\"summary\\\">\\n                                    <div class=\\\"ui-g\\\">\\n                                        <div class=\\\"ui-g-6\\\">\\n                                            <input pInputText\\n                                                   [disabled]=\\\"!isEnabledEnum\\\"\\n                                                   placeholder=\\\"New Enum Data\\\"\\n                                                   [(ngModel)]=\\\"enumValue\\\">\\n                                        </div>\\n                                        <div class=\\\"ui-g-6\\\">\\n                                            <button pButton type=\\\"button\\\"\\n                                                    [disabled]=\\\"enumValue.length == 0\\\"\\n                                                    icon=\\\"pi pi-plus\\\"\\n                                                    label=\\\"{{ (curSelEnum.length>0)?'Save':'Add' }}\\\"\\n                                                    (click)=\\\"onAddNewEnum()\\\"></button>\\n                                        </div>\\n                                    </div>\\n                                </ng-template>\\n                            </p-table>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <p-confirmDialog header=\\\"Warning!\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\nimport {MeasurementFormService} from \"../../../core/services/measurement-form.service\";\nimport {ScrollMovingService} from \"../../../core/services/scroll-moving.service\";\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {ConfirmationService} from \"primeng/api\";\nimport {UpdateMeasurementTypeService} from \"../../../core/services/update-measurement-type.service\";\nimport {MsAggregation} from \"../../../core/interfaces/ms-aggregation\";\n\ndeclare var config;\n\n@Component({\n    selector: 'app-measurement-form',\n    templateUrl: './measurement-form.component.html',\n    styleUrls: ['./measurement-form.component.css'],\n    providers: [ConfirmationService]\n})\n\nexport class MeasurementFormComponent implements OnInit {\n\n    formMode: boolean; //True = >add mode, False=> edit mode\n    isEnabled: boolean;\n    formData: any;\n\n    id: string;\n    name: string;\n    description: string;\n    format: string;\n    aggregation: string;\n    unit: string;\n    multiplier: string;\n\n    enumList: any[];\n    enumFlag: boolean;\n    enumCols: any[];\n    curSelEnum: string;\n    enumValue: string;\n    isEnabledEnum: boolean;\n\n    isFormChanged: boolean;\n    aggregationList: any[];\n\n    accessToken: string;\n    apiURL: string;\n\n    constructor(private httpService: HttpServiceHelper,\n                private msFormService: MeasurementFormService,\n                private scrollService: ScrollMovingService,\n                private updateMsService: UpdateMeasurementTypeService,\n                private navService: NavigationService,\n                private confirmationService: ConfirmationService) {\n\n        this.isFormChanged = false;\n\n        this.formMode = true;\n        this.isEnabled = false;\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n        this.initFormFields();\n\n        this.apiURL = `${config.client_info.apiURL.serverURL}/measurements`;\n\n        this.enumCols = [\n            {field: 'no', header: 'No'},\n            {field: 'value', header: 'Value'},\n        ];\n\n        this.enumList = [];\n        this.curSelEnum = '';\n        this.enumFlag = false;\n        this.enumValue = '';\n\n        this.isEnabledEnum = true;\n\n        this.aggregation = 'None';\n        this.aggregationList = [];\n        for (let item in MsAggregation) {\n            if (isNaN(Number(item))) {\n                this.aggregationList.push({label: MsAggregation[item], value: MsAggregation[item]});\n            }\n        }\n    }\n\n    ngOnInit() {\n        this.msFormService.getMeasurementFormInfo().subscribe(formInfo => {\n            this.isEnabled = formInfo.showMode;\n            this.formData = formInfo.value;\n            this.formMode = formInfo.type;\n            if (this.formMode) { //Add Mode\n                this.initFormData();\n            }\n            this.setMeasurementDetails();\n        })\n    }\n\n    setMeasurementDetails() {\n        this.id = this.formData.id;\n        this.name = this.formData.name;\n        this.description = this.formData.description;\n        this.format = this.formData.format;\n        this.aggregation = (this.formData.aggregation)?this.formData.aggregation:'None';\n        this.unit = this.formData.unit;\n        this.multiplier = this.formData.multiplier;\n        this.isFormChanged = false;\n\n        this.enumList = (this.formData.enumeration) ? JSON.parse(JSON.stringify(this.formData.enumeration.values)) : [];\n        this.enumFlag = (this.formData.enumeration) ? this.formData.enumeration.flags : false;\n\n        if (this.formData.enumeration) {\n            this.isEnabledEnum = true;\n        } else {\n            this.isEnabledEnum = false;\n        }\n    }\n\n    initFormFields() {\n        this.id = this.name = this.description = this.format = this.unit = this.multiplier = '';\n        this.aggregation = 'None';\n        this.enumFlag = false;\n        this.enumList = [];\n    }\n\n    initFormData() {\n        this.formData = {\n            id: '',\n            name: '',\n            description: '',\n            format: '',\n            aggregation: 'None',\n            unit: '',\n            multiplier: '',\n            enumeration: {flags: false, values: []}\n        };\n    }\n\n    onSaveFormData() {\n        if (this.checkValidation()) {\n            let enumval = (this.isEnabledEnum) ? {\n                flags: this.enumFlag,\n                values: this.enumList,\n            } : null;\n\n            let postBody = {\n                id: this.id,\n                name: this.name,\n                description: this.description,\n                unit: this.unit,\n                multiplier: this.multiplier,\n                enumeration: enumval,\n                format: this.format,\n                aggregation: this.aggregation,\n\n            };\n            if (this.formMode) { //Add mode\n                this.httpService.httpPostRequest(this.accessToken, this.apiURL, postBody)\n                    .subscribe((res: any) => {\n                        this.formData = postBody;\n                        this.updateMsService.setMeasurementInfo(true, null, postBody);\n                        this.initFormData();\n                        this.initFormFields();\n                        this.isFormChanged = false;\n                        console.log('Success in add measurement', postBody);\n                    }, err => {\n                        this.formData = {};\n                        console.log('Error in add measurement', err);\n                    });\n            } else { //Edit mode\n                let msEditURL = this.apiURL + '/' + this.formData.id;\n                this.httpService.httpPutRequest(this.accessToken, msEditURL, postBody)\n                    .subscribe((res: any) => {\n                        this.updateMsService.setMeasurementInfo(false, this.formData.id, postBody);\n                        this.formData = postBody;\n                        this.isFormChanged = false;\n                        console.log('Success in update measurements', postBody);\n                    }, err => {\n                        this.formData = {};\n                        console.log('Error in update measurements', err);\n                    });\n            }\n\n            if(!this.isEnabledEnum) {\n                this.enumList = [];\n                this.curSelEnum = '';\n            }\n\n        }\n    }\n\n    isChanged() {\n        let opSaveBtn: any;\n        opSaveBtn = document.getElementsByClassName('op-btn-save');\n        if (opSaveBtn) {\n            let disabledBtnCnt = 0;\n            for (let i = 0; i < opSaveBtn.length; i++) {\n                if (opSaveBtn[i].disabled) {\n                    disabledBtnCnt++;\n                }\n            }\n            if (disabledBtnCnt != opSaveBtn.length) {\n                return true;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    closeMe() {\n        this.isEnabled = false;\n        this.isFormChanged = false;\n        this.initFormFields();\n        this.initFormData();\n    }\n\n    onCloseComponent() {\n        let self = this;\n        if (this.isChanged()) {\n            this.confirmationService.confirm({\n                message: 'Changes you made may not be saved.',\n                accept: () => {\n                    self.closeMe();\n                },\n                reject: () => {\n\n                }\n            });\n        } else {\n            this.closeMe();\n        }\n    }\n\n    checkValidation() {\n        return (this.id.trim() != \"\" && this.unit.trim() != \"\" && this.multiplier.trim() != \"\")\n    }\n\n    checkFormChange() {\n\n        let formEumSt = false;\n        if(this.formData.enumeration) {\n            formEumSt = true;\n        }\n\n        this.isFormChanged = (this.id != this.formData.id ||\n            this.name != this.formData.name ||\n            this.unit != this.formData.unit ||\n            this.multiplier != this.formData.multiplier ||\n            this.description != this.formData.description ||\n            this.format != this.formData.format ||\n            this.aggregation != this.formData.aggregation ||\n            this.isEnabledEnum != formEumSt);\n\n        if (this.isEnabledEnum && formEumSt) {\n            this.isFormChanged = this.isFormChanged || (this.enumList.length != this.formData.enumeration.values.length);\n            this.isFormChanged = this.isFormChanged || (this.enumFlag != this.formData.enumeration.flags);\n\n            let samecnt = 0;\n            let formEnumList = this.formData.enumeration.values;\n            for (let i = 0; i < this.enumList.length; i++) {\n                for (let j = 0; j < formEnumList.length; j++) {\n                    if (this.enumList[i] == formEnumList[j]) {\n                        samecnt++;\n                    }\n                }\n            }\n            this.isFormChanged = this.isFormChanged || (samecnt < this.enumList.length);\n        }\n    }\n\n    idChange(newVal: string) {\n        this.id = newVal;\n        this.id = newVal;\n        this.checkFormChange();\n    }\n\n    descriptionChange(newVal: string) {\n        this.description = newVal;\n        this.checkFormChange();\n    }\n\n    formatChange(newVal: string) {\n        this.format = newVal;\n        this.checkFormChange();\n    }\n\n    aggregationChange(newVal: string) {\n        this.aggregation = newVal;\n        this.checkFormChange();\n    }\n\n    nameChange(newVal: string) {\n        this.name = newVal;\n        this.checkFormChange();\n    }\n\n    unitChange(newVal: string) {\n        this.unit = newVal;\n        this.checkFormChange();\n    }\n\n    multiplierChange(newVal: string) {\n        this.multiplier = newVal;\n        this.checkFormChange();\n    }\n\n    onChangeEnumFlags(newVal: string) {\n        this.enumFlag = newVal == 'true';\n        this.checkFormChange();\n    }\n\n    // =============================================\n    onOffEnumValues($ev) {\n        this.isEnabledEnum = $ev;\n        this.checkFormChange();\n    }\n\n    onEnumRowSelect($ev) {\n        if (this.isEnabledEnum) {\n            this.curSelEnum = $ev.data;\n            this.enumValue = $ev.data;\n        }\n    }\n\n    onEnumRowUnSelect($ev) {\n        if (this.isEnabledEnum) {\n            this.curSelEnum = '';\n            this.enumValue = '';\n        }\n    }\n\n    onDeleteEnum(enumVal) {\n        let indexof = this.enumList.indexOf(enumVal);\n        if (indexof > -1) {\n            this.enumList.splice(indexof, 1)\n        }\n        this.checkFormChange();\n    }\n\n    onAddNewEnum() {\n        //Check duplication enumValues\n        if (this.curSelEnum.length != 0) {\n            let prevIndex = this.enumList.indexOf(this.curSelEnum);\n            if (this.enumList.indexOf(this.enumValue) < 0) {\n                this.enumList[prevIndex] = this.enumValue;\n            }\n            this.curSelEnum = '';\n        } else {\n            if (this.enumList.indexOf(this.enumValue) < 0) {\n                this.enumList.push(this.enumValue);\n            }\n        }\n        this.enumValue = '';\n        this.checkFormChange();\n    }\n\n}\n","module.exports = \".measurement-list {\\r\\n    width: 1040px;\\r\\n    display: inline-block;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL21lYXN1cmVtZW50LXRhYmxlL21lYXN1cmVtZW50LXRhYmxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IscUJBQXFCO0FBQ3pCIiwiZmlsZSI6ImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL21lYXN1cmVtZW50LXRhYmxlL21lYXN1cmVtZW50LXRhYmxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWVhc3VyZW1lbnQtbGlzdCB7XHJcbiAgICB3aWR0aDogMTA0MHB4O1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG5cclxuXHJcblxyXG4iXX0= */\"","module.exports = \"<div class=\\\"measurement-list card mg-app-component\\\" id=\\\"{{tableId}}\\\">\\n    <div class=\\\"content-loading\\\" *ngIf=\\\"!contentLoaded\\\">\\n        <img src=\\\"../../../../assets/img/loading.svg\\\">\\n    </div>\\n    <div class=\\\"card-header\\\">\\n        <div class=\\\"card-title\\\">\\n            <h4>Measurements</h4>\\n        </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"table-setting-bar\\\">\\n            <div class=\\\"dropdown mg-dropdown-area\\\" >\\n                <div class=\\\"drop-down-backdrop\\\" (click)=\\\"isShowSetting=false\\\" *ngIf=\\\"isShowSetting\\\"></div>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle mg-toggle-btn\\\"\\n                        pTooltip=\\\"Column Setting\\\"  tooltipPosition=\\\"top\\\"\\n                        (click)=\\\"isShowSetting = !isShowSetting\\\">\\n                    <i class=\\\"fa fa-cog\\\"></i>\\n                </button>\\n                <div class=\\\"dropdown-menu mg-dropdown-menu\\\" *ngIf=\\\"isShowSetting\\\">\\n                    <div style=\\\"text-align:left\\\">\\n                        <table>\\n                            <thead>\\n                            <tr>\\n                                <th>Visible</th>\\n                                <th>Column</th>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n                            <tr *ngFor=\\\"let mscol of measurementCols\\\">\\n                                <td><p-checkbox binary=\\\"true\\\" value=\\\"true\\\" [disabled]=\\\"mscol.visibility && curSelColsCnt == 1\\\"\\n                                                (onChange)=\\\"onChangeVisibility(mscol)\\\"\\n                                                [(ngModel)]=\\\"mscol.visibility\\\">\\n                                </p-checkbox></td>\\n                                <td>{{mscol.header}}</td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n            <button class=\\\"btn filter-items\\\" (click)=\\\"onChangeFilter()\\\"\\n                    pTooltip=\\\"{{ (isHideFilter)?'On Filter':'Off Filter' }}\\\"  tooltipPosition=\\\"top\\\"\\n                    [ngClass]=\\\"{'btn-primary':!isHideFilter, 'btn-secondary':isHideFilter}\\\" >\\n                <i class=\\\"fa fa-filter\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-danger delete-item\\\"\\n                    pTooltip=\\\"Delete Rows\\\"  tooltipPosition=\\\"top\\\"\\n                    (click)=\\\"onDeleteRows()\\\" [disabled]=\\\"selectedRows.length == 0\\\">\\n                <i class=\\\"fa fa-trash\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-primary add-item\\\" (click)=\\\"onAddNewRow()\\\">+ Add New</button>\\n            <div class=\\\"clearfix\\\"></div>\\n        </div>\\n        <p-table #dt sortMode=\\\"multiple\\\"\\n                 [value]=\\\"measurements\\\"\\n                 [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\n                 [totalRecords]=\\\"measurements.length\\\"\\n                 [(selection)]=\\\"selectedRows\\\"\\n                 selectionMode=\\\"multiple\\\"\\n                 [resizableColumns]=\\\"true\\\"\\n                 columnResizeMode=\\\"expand\\\"\\n                 (onColResize) = \\\"onColResize($event)\\\"\\n                 (onHeaderCheckboxToggle)=\\\"selectAllRows($event)\\\"\\n                 (onRowSelect)=\\\"onRowSelect($event)\\\" (onRowUnselect)=\\\"onRowUnselect($event)\\\">\\n            <ng-template pTemplate=\\\"header\\\">\\n                <tr>\\n                    <th class=\\\"mg-item-checkbox\\\">\\n                        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\\n                    </th>\\n                    <th class=\\\"th-id-wrap\\\"\\n                        *ngFor=\\\"let mscol of measurementCols\\\"\\n                        [ngClass]=\\\"{'mg-hide': !mscol.visibility}\\\"\\n                        [pSortableColumn]=\\\"mscol.field\\\" pResizableColumn>\\n                        {{mscol.header}}\\n                        <p-sortIcon [field]=\\\"mscol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                    </th>\\n                </tr>\\n                <tr [ngClass]=\\\"{'mg-hide':isHideFilter}\\\">\\n                    <th></th>\\n                    <th *ngFor=\\\"let mscol of measurementCols\\\"\\n                        [ngClass]=\\\"{'mg-hide':!mscol.visibility}\\\"\\n                        [ngSwitch]=\\\"mscol.field\\\" >\\n                        <input *ngSwitchCase=\\\"mscol.field\\\" pInputText type=\\\"text\\\"\\n                               (input)=\\\"onTblFilter($event, mscol, dt)\\\">\\n                    </th>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"body\\\" let-measurement>\\n                <tr>\\n                    <td>\\n                        <p-tableCheckbox [value]=\\\"measurement\\\"></p-tableCheckbox>\\n                    </td>\\n                    <td *ngFor=\\\"let mscol of measurementCols\\\"  (click)=\\\"editMs(measurement)\\\"\\n                        [ngClass]=\\\"{'mg-hide':!mscol.visibility}\\\">\\n                        {{ (measurement[mscol.field])?measurement[mscol.field]:'None' }}\\n                    </td>\\n                </tr>\\n            </ng-template>\\n        </p-table>\\n    </div>\\n\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {MeasurementFormService} from \"../../../core/services/measurement-form.service\";\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\nimport {ScrollMovingService} from \"../../../core/services/scroll-moving.service\";\nimport {UpdateMeasurementTypeService} from \"../../../core/services/update-measurement-type.service\";\nimport {forkJoin} from \"rxjs\";\nimport  config from '../../../../../config.json';\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {SettingService} from \"../../../core/services/setting.service\";\n\ndeclare function checkTable(tblId, tdInfo): any;\ndeclare function initTable(tblId): any;\ndeclare function readTable(tblId): any;\ndeclare function updateTableWidth(tblName, tdInfo): any;\n\n@Component({\n    selector: 'app-measurement-table',\n    templateUrl: './measurement-table.component.html',\n    styleUrls: ['./measurement-table.component.css']\n})\nexport class MeasurementTableComponent implements OnInit {\n\n    measurements: Array<MeasurementType>;\n    measurementCols: any[];\n    addressCols: any[];\n    contactCols: any[];\n    selectedRows: Array<MeasurementType>;\n    accessToken: string;\n    apiURL: string;\n\n    contentLoaded: boolean;\n    isHideFilter: boolean;\n\n    isShowSetting: boolean;\n    curSelColsCnt: number;\n    tableId: string;\n    tableSettingName: string;\n\n    constructor(\n        private msFormService: MeasurementFormService,\n        private httpService: HttpServiceHelper,\n        private scrollService: ScrollMovingService,\n        private navService: NavigationService,\n        private settingService: SettingService,\n        private updateMsService: UpdateMeasurementTypeService) {\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n        this.contentLoaded = false;\n        this.measurements = [];\n        this.selectedRows = [];\n        this.isHideFilter = false;\n        this.apiURL = `${config.client_info.apiURL.serverURL}/measurements`;\n\n        this.tableId = 'measurement-list';\n        this.tableSettingName = this.tableId +'_setting';\n        this.isShowSetting = false;\n        this.measurementCols = [\n            {field: 'id', header: 'ID', group:''},\n            {field: 'name', header: 'Name', group:''},\n            {field: 'description', header: 'Description', group:''},\n            {field: 'unit', header: 'Unit', group:''},\n            {field: 'multiplier', header: 'Multiplier', group:''},\n            {field: 'format', header: 'Format', group:''},\n            {field: 'aggregation', header: 'Aggregation', group:''},\n        ];\n\n    }\n\n    ngOnInit() {\n\n        this.getMeasurementTypes();\n        this.initTableSetting();\n\n        this.updateMsService.getMeasurementTypeInfo().subscribe(updateInfo => {\n            if (updateInfo.mode) {\n                console.log(updateInfo.newMsType);\n                this.measurements.push(updateInfo.newMsType);\n            } else {\n                for (let i = 0; i < this.measurements.length; i++) {\n                    if (this.measurements[i].id == updateInfo.id) {\n                        this.measurements[i] = updateInfo.newMsType;\n                    }\n                }\n            }\n        });\n    }\n\n    getMeasurementTypes() {\n        let msTypeIdList = [];\n        let promiseList = [];\n        this.httpService.httpGetRequest(this.accessToken, this.apiURL).subscribe((res: any) => {\n            msTypeIdList = res;\n            for (let i = 0; i < msTypeIdList.length; i++) {\n                let subDetailURL = this.apiURL + '/' + msTypeIdList[i];\n                promiseList.push(this.httpService.httpGetRequest(this.accessToken, subDetailURL));\n            }\n            if (msTypeIdList.length > 0) {\n                forkJoin(promiseList).subscribe(results => {\n                    this.measurements = results;\n                    this.contentLoaded = true;\n                }, err => {\n                    console.log(\"Can't get substation list\", err);\n                    this.measurements = [];\n                    this.contentLoaded = true;\n                })\n            } else {\n                console.log(\"Can't get substation list\");\n                this.measurements = [];\n                this.contentLoaded = true;\n            }\n        }, error => {\n            if(error.error instanceof ErrorEvent){\n                alert(error.error.message);\n            } else {\n                alert(`Backend returned code ${error.status}, body was: ${JSON.stringify(error.error)}`);\n            }\n            console.error(\"Can't get measurement list\", error);\n            this.measurements = [];\n            this.contentLoaded = true;\n        });\n    }\n\n    onDeleteRows() {\n        let msTypeIds = [];\n        let promiseList = [];\n        for (let i = 0; i < this.selectedRows.length; i++) {\n            let msTypeDeleteURL = this.apiURL + '/' + this.selectedRows[i].id;\n            msTypeIds.push(this.selectedRows[i].id);\n            promiseList.push(this.httpService.httpDeleteRequest(this.accessToken, msTypeDeleteURL));\n        }\n        if (msTypeIds.length > 0) {\n            forkJoin(promiseList).subscribe(results => {\n                let leftMeasurementTypes = [];\n                for (let i = 0; i < this.measurements.length; i++) {\n                    if (msTypeIds.indexOf(this.measurements[i].id) < 0) {\n                        leftMeasurementTypes.push(this.measurements[i]);\n                    }\n                }\n                this.measurements = leftMeasurementTypes;\n                this.selectedRows = [];\n                this.contentLoaded = true;\n                console.log('Success in substation Deleting', results);\n            }, err => {\n                this.measurements = [];\n                this.contentLoaded = true;\n                console.error('Error in measurements Deleting', err);\n            })\n        } else {\n            this.measurements = [];\n            this.contentLoaded = true;\n            console.log('Error in measurements Deleting due to the Empty String');\n        }\n    }\n\n    editMs(ms) {\n        let self = this;\n        this.navService.setNavInfo('measurement-form', true, '');\n        setTimeout(function () {\n            self.msFormService.setMeasurementFormInfo(false, ms, true);\n            self.scrollService.setMovedScroll(true, 'measurement-form');\n        }, 100);\n    }\n\n    onAddNewRow() {\n        let self = this;\n        this.navService.setNavInfo('measurement-form', true, '');\n        setTimeout(function () {\n            self.msFormService.setMeasurementFormInfo(true, null, true);\n            self.scrollService.setMovedScroll(true, 'measurement-form');\n        }, 100);\n    }\n\n    onRowSelect(event) {\n        console.log(this.selectedRows);\n    }\n\n    onRowUnselect(event) {\n        console.log(this.selectedRows);\n    }\n\n    selectAllRows(event) {\n        if (event.checked) {\n            // alert('all rows selected');\n            console.log(this.selectedRows);\n        } else {\n            // alert('all rows diselected');\n\n        }\n    }\n\n    // ====================================================\n    initTableSetting() {\n\n        readTable(this.tableId);\n        let tblSettingStr = localStorage.getItem(this.tableSettingName);\n        let settingInfo: any;\n        if(tblSettingStr) {\n            settingInfo = JSON.parse(tblSettingStr);\n        } else {\n            //Write New Setting\n            settingInfo = { filter: true};\n            settingInfo.visible = ['ID','Name','Description','Unit','Multiplier', 'Format', 'Aggregation'];\n            localStorage.setItem(this.tableSettingName, JSON.stringify(settingInfo));\n        }\n\n        this.isHideFilter = !settingInfo.filter;\n        this.measurementCols = this.checkColVisibility(this.measurementCols, settingInfo.visible);\n        this.curSelColsCnt = settingInfo.visible.length;\n    }\n\n    checkColVisibility(colList: any, visibleColList: any) {\n\n        for(let i = 0; i<colList.length; i++) {\n            colList[i].visibility = visibleColList.indexOf(colList[i].header)>-1;\n        }\n        return colList;\n    }\n\n    onChangeVisibility(item) {\n        checkTable(this.tableId, item);\n        if(item.visibility){\n            this.curSelColsCnt += 1;\n        } else {\n            this.curSelColsCnt -= 1;\n        }\n        this.settingService.setSettingInfo(this.tableSettingName,'visibility', {col:item.header,st:item.visibility})\n    }\n\n    onTblFilter(ev, item, dt) {\n        let field = (item.group != '')? item.group + '.' + item.field: item.field;\n        dt.filter(ev.target.value,  field, item.filterMatchMode);\n    }\n\n    onChangeFilter() {\n        this.isHideFilter = !this.isHideFilter;\n        this.settingService.setSettingInfo(this.tableSettingName,'filter', this.isHideFilter);\n    }\n\n    onColResize($ev) {\n        updateTableWidth(this.tableId, $ev);\n    }\n}\n","module.exports = \".partner-address-list{\\r\\n    width: 960px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL3BhcnRuZXItYWRkcmVzcy10YWJsZS9wYXJ0bmVyLWFkZHJlc3MtdGFibGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEIiLCJmaWxlIjoiY2xpZW50L2FwcC9tb2R1bGVzL2NvbXBvbmVudHMvcGFydG5lci1hZGRyZXNzLXRhYmxlL3BhcnRuZXItYWRkcmVzcy10YWJsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhcnRuZXItYWRkcmVzcy1saXN0e1xyXG4gICAgd2lkdGg6IDk2MHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"partner-address-list mg-app-component\\\" *ngIf=\\\"isEnabled\\\" id=\\\"{{tableId}}\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      <div class=\\\"card-title\\\">\\n        <h4>Addresses</h4>\\n        <span (click)=\\\"onCloseComponent()\\\"><i class=\\\"fa fa-2x fa-close\\\"></i></span>\\n      </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"table-setting-bar\\\">\\n        <div class=\\\"dropdown mg-dropdown-area\\\" >\\n          <div class=\\\"drop-down-backdrop\\\" (click)=\\\"isShowSetting=false\\\" *ngIf=\\\"isShowSetting\\\"></div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle mg-toggle-btn\\\"\\n                  pTooltip=\\\"Column Setting\\\"  tooltipPosition=\\\"top\\\"\\n                  (click)=\\\"isShowSetting = !isShowSetting\\\">\\n            <i class=\\\"fa fa-cog\\\"></i>\\n          </button>\\n          <div class=\\\"dropdown-menu mg-dropdown-menu\\\" *ngIf=\\\"isShowSetting\\\">\\n            <div style=\\\"text-align:left\\\">\\n              <table>\\n                <thead>\\n                <tr>\\n                  <th>Visible</th>\\n                  <th>Column</th>\\n                </tr>\\n                </thead>\\n                <tbody>\\n                <tr *ngFor=\\\"let addresscol of addressCols\\\">\\n                  <td><p-checkbox binary=\\\"true\\\" value=\\\"true\\\" [disabled]=\\\"addresscol.visibility && curSelColsCnt == 1\\\"\\n                                  (onChange)=\\\"onChangeVisibility(addresscol)\\\"\\n                                  [(ngModel)]=\\\"addresscol.visibility\\\">\\n                  </p-checkbox></td>\\n                  <td>{{addresscol.header}}</td>\\n                </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </div>\\n        </div>\\n        <button class=\\\"btn filter-items\\\" (click)=\\\"onChangeFilter()\\\"\\n                pTooltip=\\\"{{ (isHideFilter)?'On Filter':'Off Filter' }}\\\"  tooltipPosition=\\\"top\\\"\\n                [ngClass]=\\\"{'btn-primary':!isHideFilter, 'btn-secondary':isHideFilter}\\\" >\\n          <i class=\\\"fa fa-filter\\\"></i>\\n        </button>\\n        <div class=\\\"clearfix\\\"></div>\\n      </div>\\n      <p-table #dt sortMode=\\\"multiple\\\"\\n               [value]=\\\"addresses\\\"\\n               [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\n               [totalRecords]=\\\"addresses.length\\\"\\n               selectionMode=\\\"multiple\\\"\\n               [resizableColumns]=\\\"true\\\"\\n               columnResizeMode=\\\"expand\\\"\\n               (onColResize) = \\\"onColResize($event)\\\">\\n        <ng-template pTemplate=\\\"header\\\">\\n          <tr>\\n            <th class=\\\"th-id-wrap\\\"\\n                *ngFor=\\\"let addresscol of addressCols\\\"\\n                [ngClass]=\\\"{'mg-hide': !addresscol.visibility}\\\"\\n                [pSortableColumn]=\\\"addresscol.field\\\" pResizableColumn>\\n              {{addresscol.header}}\\n              <p-sortIcon [field]=\\\"addresscol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n            </th>\\n          </tr>\\n          <tr [ngClass]=\\\"{'mg-hide':isHideFilter}\\\">\\n            <th *ngFor=\\\"let addresscol of addressCols\\\"\\n                [ngClass]=\\\"{'mg-hide':!addresscol.visibility}\\\"\\n                [ngSwitch]=\\\"addresscol.field\\\" >\\n              <input *ngSwitchCase=\\\"addresscol.field\\\" pInputText type=\\\"text\\\"\\n                     (input)=\\\"onTblFilter($event, addresscol, dt)\\\">\\n            </th>\\n          </tr>\\n        </ng-template>\\n        <ng-template pTemplate=\\\"body\\\" let-address>\\n          <tr>\\n            <td *ngFor=\\\"let addressrole of addressCols\\\"\\n                [ngClass]=\\\"{'mg-hide':!addressrole.visibility}\\\">\\n              {{address[addressrole.field]}}\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </p-table>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ExpandingPartnerChildrenService} from \"../../../core/services/expanding-partner-children.service\";\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\nimport {SettingService} from \"../../../core/services/setting.service\";\n\ndeclare function checkTable(tblId, tdInfo): any;\ndeclare function initTable(tblId): any;\ndeclare function readTable(tblId): any;\ndeclare function updateTableWidth(tblName, tdInfo): any;\ndeclare var config;\n\n@Component({\n    selector: 'app-partner-address-table',\n    templateUrl: './partner-address-table.component.html',\n    styleUrls: ['./partner-address-table.component.css']\n})\n\nexport class PartnerAddressTableComponent implements OnInit {\n\n    addresses: Array<Address>;\n    isEnabled: boolean;\n    addressCols: any[];\n    isHideFilter: boolean;\n    partnerID: string;\n    accessToken: string;\n    apiURL: string;\n\n    isShowSetting: boolean;\n    curSelColsCnt: number;\n    tableId: string;\n    tableSettingName: string;\n\n    constructor(private expandPartnerChildService: ExpandingPartnerChildrenService,\n                private httpService: HttpServiceHelper,\n                private settingService: SettingService,\n                private navService: NavigationService) {\n        this.addresses = [];\n        this.isHideFilter = false;\n        this.partnerID = '';\n        this.apiURL = `${config.client_info.apiURL.serverURL}/partners/`;\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n\n        this.tableId = 'partner-address-list';\n        this.tableSettingName = this.tableId + '_setting';\n        this.isShowSetting = false;\n        this.addressCols = [\n            {field: 'number', header: 'Number', group: ''},\n            {field: 'street', header: 'Street', group: ''},\n            {field: 'city', header: 'City', group: ''},\n            {field: 'locality', header: 'Locality', group: ''},\n            {field: 'zip', header: 'Zip', group: ''},\n            {field: 'country', header: 'Country', group: ''},\n            {field: 'region', header: 'Region', group: ''}\n        ];\n    }\n\n    ngOnInit() {\n\n        this.initTableSetting();\n\n        this.expandPartnerChildService.getPartnerChildrenInfo().subscribe(contactInfo => {\n            if (contactInfo.name == 'address') {\n                this.isEnabled = contactInfo.mode;\n                this.partnerID = contactInfo.data;\n                this.getAddresses();\n            }\n        });\n    }\n\n    onCloseComponent() {\n        this.navService.setNavInfo('partner-form', true, '');\n    }\n\n    getAddresses() {\n        let apiURL = this.apiURL + this.partnerID + '/addresses';\n        this.httpService.httpGetRequest(this.accessToken, apiURL).subscribe((res: any) => {\n            this.addresses = res;\n        }, err => {\n            console.error(\"Can't get addresses list\");\n            console.error(err);\n        })\n    }\n\n    initTableSetting() {\n\n        readTable(this.tableId);\n        let tblSettingStr = localStorage.getItem(this.tableSettingName);\n        let settingInfo: any;\n        if (tblSettingStr) {\n            settingInfo = JSON.parse(tblSettingStr);\n        } else {\n            //Write New Setting\n            settingInfo = {filter: true};\n            settingInfo.visible = ['Number', 'Street', 'City', 'Locality', 'Zip', 'Country', 'Region'];\n            localStorage.setItem(this.tableSettingName, JSON.stringify(settingInfo));\n        }\n\n        this.isHideFilter = !settingInfo.filter;\n        this.addressCols = this.checkColVisibility(this.addressCols, settingInfo.visible);\n        this.curSelColsCnt = settingInfo.visible.length;\n    }\n\n    checkColVisibility(colList: any, visibleColList: any) {\n\n        for (let i = 0; i < colList.length; i++) {\n            colList[i].visibility = visibleColList.indexOf(colList[i].header) > -1;\n        }\n        return colList;\n    }\n\n    onChangeVisibility(item) {\n        checkTable(this.tableId, item);\n        if (item.visibility) {\n            this.curSelColsCnt += 1;\n        } else {\n            this.curSelColsCnt -= 1;\n        }\n        this.settingService.setSettingInfo(this.tableSettingName, 'visibility', {col: item.header, st: item.visibility})\n    }\n\n    onTblFilter(ev, item, dt) {\n        let field = (item.group != '') ? item.group + '.' + item.field : item.field;\n        dt.filter(ev.target.value, field, item.filterMatchMode);\n    }\n\n    onChangeFilter() {\n        this.isHideFilter = !this.isHideFilter;\n        this.settingService.setSettingInfo(this.tableSettingName, 'filter', this.isHideFilter);\n    }\n\n    onColResize($ev) {\n        updateTableWidth(this.tableId, $ev);\n    }\n}\n","module.exports = \".partner-contact-list{\\r\\n    width: 960px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL3BhcnRuZXItY29udGFjdC10YWJsZS9wYXJ0bmVyLWNvbnRhY3QtdGFibGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEIiLCJmaWxlIjoiY2xpZW50L2FwcC9tb2R1bGVzL2NvbXBvbmVudHMvcGFydG5lci1jb250YWN0LXRhYmxlL3BhcnRuZXItY29udGFjdC10YWJsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhcnRuZXItY29udGFjdC1saXN0e1xyXG4gICAgd2lkdGg6IDk2MHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"partner-contact-list mg-op-form mg-app-component\\\" *ngIf=\\\"isEnabled\\\" id=\\\"{{tableId}}\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n            <div class=\\\"card-title\\\">\\n                <h4>Linked Contacts</h4>\\n                <span (click)=\\\"onCloseComponent()\\\"><i class=\\\"fa fa-2x fa-close\\\"></i></span>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div>\\n                <button class=\\\"btn filter-items\\\" (click)=\\\"onChangeFilter()\\\"\\n                        pTooltip=\\\"{{ (isHideFilter)?'On Filter':'Off Filter' }}\\\"  tooltipPosition=\\\"top\\\"\\n                        [ngClass]=\\\"{'btn-primary':!isHideFilter, 'btn-secondary':isHideFilter}\\\" >\\n                    <i class=\\\"fa fa-filter\\\"></i>\\n                </button>\\n                <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <p-table #dt sortMode=\\\"multiple\\\"\\n                     [value]=\\\"contacts\\\"\\n                     [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\n                     [totalRecords]=\\\"contacts.length\\\"\\n                     selectionMode=\\\"multiple\\\"\\n                     [resizableColumns]=\\\"true\\\"\\n                     columnResizeMode=\\\"expand\\\"\\n                     (onColResize) = \\\"onColResize($event)\\\">\\n                <ng-template pTemplate=\\\"header\\\">\\n                    <tr>\\n                        <th class=\\\"th-id-wrap\\\"\\n                            *ngFor=\\\"let contactcol of contactCols\\\"\\n                            [ngClass]=\\\"{'mg-hide': !contactcol.visibility}\\\"\\n                            [pSortableColumn]=\\\"contactcol.field\\\" pResizableColumn>\\n                            {{contactcol.header}}\\n                            <p-sortIcon [field]=\\\"contactcol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                        </th>\\n                    </tr>\\n                    <tr [ngClass]=\\\"{'mg-hide':isHideFilter}\\\">\\n                        <th *ngFor=\\\"let contactcol of contactCols\\\"\\n                            [ngClass]=\\\"{'mg-hide':!contactcol.visibility}\\\"\\n                            [ngSwitch]=\\\"contactcol.field\\\" >\\n                            <input *ngSwitchCase=\\\"contactcol.field\\\" pInputText type=\\\"text\\\"\\n                                   (input)=\\\"onTblFilter($event, contactcol, dt)\\\">\\n                        </th>\\n                    </tr>\\n                </ng-template>\\n                <ng-template pTemplate=\\\"body\\\" let-contact>\\n                    <tr>\\n                        <td *ngFor=\\\"let contactcol of contactCols\\\">\\n                            {{contact[contactcol.field]}}\\n                        </td>\\n                    </tr>\\n                </ng-template>\\n            </p-table>\\n        </div>\\n    </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ExpandingPartnerChildrenService} from \"../../../core/services/expanding-partner-children.service\";\nimport {ConfirmationService} from \"primeng/api\";\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {UpdatePartnerService} from \"../../../core/services/update-partner.service\";\nimport {SettingService} from \"../../../core/services/setting.service\";\n\ndeclare function checkTable(tblId, tdInfo): any;\ndeclare function initTable(tblId): any;\ndeclare function readTable(tblId): any;\ndeclare function updateTableWidth(tblName, tdInfo): any;\n\n@Component({\n    selector: 'app-partner-contact-table',\n    templateUrl: './partner-contact-table.component.html',\n    styleUrls: ['./partner-contact-table.component.css'],\n    providers: [ConfirmationService]\n})\nexport class PartnerContactTableComponent implements OnInit {\n\n    contacts: Array<Contact>;\n    isEnabled: boolean;\n    contactCols: any[];\n    isHideFilter: boolean;\n\n    isShowSetting: boolean;\n    curSelColsCnt: number;\n    tableId: string;\n    tableSettingName: string;\n\n    constructor(private expandPartnerContactService: ExpandingPartnerChildrenService,\n                private navService: NavigationService,\n                private settingService: SettingService,\n                private updatePartnerService: UpdatePartnerService) {\n        this.contacts = [];\n        this.isHideFilter = false;\n\n        this.tableId = 'partner-contact-list';\n        this.tableSettingName = this.tableId +'_setting';\n        this.isShowSetting = false;\n        this.contactCols = [\n            {field: 'firstname', header: 'First Name', group:''},\n            {field: 'lastname', header: 'Last Name', group:''},\n            {field: 'phone', header: 'Phone', group:''},\n            {field: 'email', header: 'Email', group:''},\n            {field: 'role', header: 'Role', group:''},\n            {field: 'userid', header: 'UserID', group:''},\n        ];\n\n    }\n\n    ngOnInit() {\n\n        this.initTableSetting();\n\n        this.expandPartnerContactService.getPartnerChildrenInfo().subscribe(contactInfo => {\n            if(contactInfo.name == 'contact'){\n                this.isEnabled = contactInfo.mode;\n                this.contacts = contactInfo.data;\n            }\n        });\n        this.updatePartnerService.getPartnerInfo().subscribe(updateInfo => {\n            if (!updateInfo.mode && this.isEnabled) { //Partner edit mode\n                this.contacts = updateInfo.newPartner.contacts\n            }\n        });\n    }\n\n    onCloseComponent() {\n        this.navService.setNavInfo('partner-form', true, '');\n        this.isEnabled = false;\n    }\n\n    initTableSetting() {\n\n        readTable(this.tableId);\n        let tblSettingStr = localStorage.getItem(this.tableSettingName);\n        let settingInfo: any;\n        if(tblSettingStr) {\n            settingInfo = JSON.parse(tblSettingStr);\n        } else {\n            //Write New Setting\n            settingInfo = { filter: true};\n            settingInfo.visible = ['First Name','Last Name','Phone','Email','Role','UserID'];\n            localStorage.setItem(this.tableSettingName, JSON.stringify(settingInfo));\n        }\n\n        this.isHideFilter = !settingInfo.filter;\n        this.contactCols = this.checkColVisibility(this.contactCols, settingInfo.visible);\n        this.curSelColsCnt = settingInfo.visible.length;\n    }\n\n    checkColVisibility(colList: any, visibleColList: any) {\n\n        for(let i = 0; i<colList.length; i++) {\n            colList[i].visibility = visibleColList.indexOf(colList[i].header)>-1;\n        }\n        return colList;\n    }\n\n    onChangeVisibility(item) {\n        checkTable(this.tableId, item);\n        if(item.visibility){\n            this.curSelColsCnt += 1;\n        } else {\n            this.curSelColsCnt -= 1;\n        }\n        this.settingService.setSettingInfo(this.tableSettingName,'visibility', {col:item.header,st:item.visibility})\n    }\n\n    onTblFilter(ev, item, dt) {\n        let field = (item.group != '')? item.group + '.' + item.field: item.field;\n        dt.filter(ev.target.value,  field, item.filterMatchMode);\n    }\n\n    onChangeFilter() {\n        this.isHideFilter = !this.isHideFilter;\n        this.settingService.setSettingInfo(this.tableSettingName,'filter', this.isHideFilter);\n    }\n\n    onColResize($ev) {\n        updateTableWidth(this.tableId, $ev);\n    }\n}\n","module.exports = \".partner-form{\\r\\n    width: 1050px;\\r\\n}\\r\\n.open-tbl-btn button {\\r\\n    float: right;\\r\\n    margin-left: 10px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL3BhcnRuZXItZm9ybS9wYXJ0bmVyLWZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7QUFDakI7QUFDQTtJQUNJLFlBQVk7SUFDWixpQkFBaUI7QUFDckIiLCJmaWxlIjoiY2xpZW50L2FwcC9tb2R1bGVzL2NvbXBvbmVudHMvcGFydG5lci1mb3JtL3BhcnRuZXItZm9ybS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhcnRuZXItZm9ybXtcclxuICAgIHdpZHRoOiAxMDUwcHg7XHJcbn1cclxuLm9wZW4tdGJsLWJ0biBidXR0b24ge1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"partner-form mg-op-form mg-app-component\\\" *ngIf=\\\"isEnabled\\\" id=\\\"partner-form\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n            <div class=\\\"card-title\\\">\\n                <h4>Partner Details</h4>\\n                <span (click)=\\\"onCloseComponent()\\\"><i class=\\\"fa fa-2x fa-close\\\"></i></span>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-3\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary op-btn-save\\\" (click)=\\\"onSaveFormData()\\\"\\n                            [disabled]=\\\"!isFormChanged\\\">{{ (formMode)?'Add':'Save' }}\\n                    </button>\\n                </div>\\n                <div class=\\\"ui-g-9 open-tbl-btn\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"onOpenContacts()\\\"\\n                            *ngIf=\\\"!formMode\\\">Linked Contacts\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"onOpenAddresses()\\\"\\n                            *ngIf=\\\"!formMode\\\">Addresses\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"onOpenSubstations()\\\"\\n                            *ngIf=\\\"!formMode\\\">Substations\\n                    </button>\\n                </div>\\n            </div>\\n            <div class=\\\"clearfix\\\"></div>\\n            <div class=\\\"form-content-wrap\\\">\\n                <div class=\\\"ui-g\\\">\\n                    <div class=\\\"ui-g-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"mrid\\\">MrID</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'mg-error':(mrID.trim().length == 0)}\\\"\\n                                   (ngModelChange)=\\\"mrIDChange($event)\\\"\\n                                   [ngModel]=\\\"mrID\\\" id=\\\"mrid\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"eiccode\\\">EicCode</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'mg-error':(eicCode.trim().length == 0)}\\\"\\n                                   (ngModelChange)=\\\"eicCodeChange($event)\\\"\\n                                   [ngModel]=\\\"eicCode\\\" id=\\\"eiccode\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"partnerrole\\\">Role</label>\\n                            <select name=\\\"role\\\" class=\\\"form-control\\\" [ngModel]=\\\"partnerRole\\\"\\n                                    (ngModelChange)=\\\"roleChange($event)\\\" id=\\\"partnerrole\\\">\\n                                <option *ngFor=\\\"let partnerrole of partnerRoles\\\" [selected]=\\\"partnerrole == role\\\">{{partnerrole}}</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"description\\\">Description</label>\\n                            <input name=\\\"description\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"descriptionChange($event)\\\"\\n                                   [ngModel]=\\\"description\\\" id=\\\"description\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g mg-group-box\\\">\\n                    <div class=\\\"mg-group-box-title\\\">\\n                        <h5 class=\\\"\\\">Address</h5>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"address-number\\\">Number</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"numberChange($event)\\\"\\n                                   [ngModel]=\\\"addressNumber\\\" id=\\\"address-number\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"street\\\">Street</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"streetChange($event)\\\"\\n                                   [ngModel]=\\\"street\\\" id=\\\"street\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"city\\\">City</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"cityChange($event)\\\"\\n                                   [ngModel]=\\\"city\\\" id=\\\"city\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"locality\\\">Locality</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"localityChange($event)\\\"\\n                                   [ngModel]=\\\"locality\\\" id=\\\"locality\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"zip\\\">Zip</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"zipChange($event)\\\"\\n                                   [ngModel]=\\\"zip\\\" id=\\\"zip\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"country\\\">Country</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"countryChange($event)\\\"\\n                                   [ngModel]=\\\"country\\\" id=\\\"country\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"region\\\">Region</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"regionChange($event)\\\"\\n                                   [ngModel]=\\\"region\\\" id=\\\"region\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g mg-group-box\\\">\\n                    <div class=\\\"mg-group-box-title\\\">\\n                        <h5 class=\\\"\\\">Contacts</h5>\\n                    </div>\\n                    <div class=\\\"ui-g-12\\\">\\n                        <p-table #dt sortMode=\\\"multiple\\\"\\n                                 [value]=\\\"contacts\\\"\\n                                 [paginator]=\\\"true\\\" [rows]=\\\"5\\\"\\n                                 [totalRecords]=\\\"contacts.length\\\"\\n                                 selectionMode=\\\"multiple\\\">\\n                            <ng-template pTemplate=\\\"header\\\">\\n                                <tr>\\n                                    <th *ngFor=\\\"let contactcol of contactCols\\\" [pSortableColumn]=\\\"contactcol.field\\\">\\n                                        {{contactcol.header}}\\n                                        <p-sortIcon [field]=\\\"contactcol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                                    </th>\\n                                    <th style=\\\"width:4em\\\"></th>\\n                                </tr>\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"body\\\" let-contact>\\n                                <tr>\\n                                    <td pEditableColumn *ngFor=\\\"let contactcol of contactCols\\\">\\n                                        <p-cellEditor>\\n                                            <ng-template pTemplate=\\\"input\\\">\\n                                                <input pInputText type=\\\"text\\\" *ngIf=\\\"contactcol.field != 'role'\\\"\\n                                                       [(ngModel)]=\\\"contact[contactcol.field]\\\"\\n                                                       (blur)=\\\"onContactEditComplete(contact)\\\"\\n                                                       (keydown.tab)=\\\"onContactEditComplete(contact)\\\"\\n                                                       (keydown.enter)=\\\"onContactEditComplete(contact)\\\">\\n                                                <p-dropdown [options]=\\\"contactRoles\\\" *ngIf=\\\"contactcol.field == 'role'\\\"\\n                                                            [(ngModel)]=\\\"contact[contactcol.field]\\\"\\n                                                            (onChange) = \\\"onContactEditComplete(contact)\\\"\\n                                                            [style]=\\\"{'width':'100%'}\\\">\\n                                                </p-dropdown>\\n                                            </ng-template>\\n                                            <ng-template pTemplate=\\\"output\\\">\\n                                                {{contact[contactcol.field]}}\\n                                            </ng-template>\\n                                        </p-cellEditor>\\n                                    </td>\\n                                    <td>\\n                                        <button pButton type=\\\"button\\\" icon=\\\"pi pi-times\\\" class=\\\"ui-button-danger\\\" (click)=\\\"onDeleteContact(contact)\\\"></button>\\n                                    </td>\\n                                </tr>\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"summary\\\" let-contact>\\n                                <div style=\\\"text-align:left\\\">\\n                                    <button type=\\\"button\\\" pButton icon=\\\"fa fa-plus\\\" (click)=\\\"onShowAddDialog()\\\" label=\\\"Add\\\"></button>\\n                                </div>\\n                            </ng-template>\\n                        </p-table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <p-confirmDialog header=\\\"Warning!\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n    <p-dialog header=\\\"Contact Details\\\" [(visible)]=\\\"displayAddModal\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\">\\n        <div class=\\\"ui-g\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nFName\\\">First Name</label>\\n                    <input [ngModel]=\\\"newContact.firstname\\\" (ngModelChange)=\\\"newFirstNameChange($event)\\\"\\n                           type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nFName\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"ui-g-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nSName\\\">Last Name</label>\\n                    <input [ngModel]=\\\"newContact.lastname\\\" (ngModelChange)=\\\"newLastNameChange($event)\\\"\\n                           type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nSName\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"ui-g-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nPhone\\\">Phone</label>\\n                    <input [ngModel]=\\\"newContact.phone\\\" (ngModelChange)=\\\"newPhoneChange($event)\\\"\\n                           type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nPhone\\\">\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"ui-g\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nFName\\\">Email</label>\\n                    <input [ngModel]=\\\"newContact.email\\\" (ngModelChange)=\\\"newEmailChange($event)\\\"\\n                           type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nEmail\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"ui-g-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nCRole\\\">Role</label>\\n                    <select class=\\\"form-control\\\" (ngModelChange)=\\\"newRoleChange($event)\\\"\\n                            [ngModel]=\\\"newContact.role\\\">\\n                        <option *ngFor=\\\"let contactrole of contactRoles\\\"  id=\\\"nCRole\\\">\\n                            {{contactrole.value}}\\n                        </option>\\n                    </select>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-g-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nUserID\\\">UserID</label>\\n                    <input [ngModel]=\\\"newContact.userid\\\" [ngClass]=\\\"{'mg-error':(newContact.userid.trim().length == 0)}\\\"\\n                           (ngModelChange)=\\\"newUserIDChange($event)\\\"\\n                           type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nUserID\\\">\\n                </div>\\n            </div>\\n        </div>\\n        <p-footer>\\n            <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n                <button type=\\\"button\\\" pButton icon=\\\"fa fa-close\\\" (click)=\\\"onDiscard()\\\" label=\\\"Discard\\\"></button>\\n                <button type=\\\"button\\\" pButton icon=\\\"fa fa-check\\\" (click)=\\\"onAddRow()\\\" label=\\\"Save\\\"></button>\\n            </div>\\n        </p-footer>\\n    </p-dialog>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ConfirmationService, SelectItem} from \"primeng/api\";\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\nimport {UpdatePartnerService} from \"../../../core/services/update-partner.service\";\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {ScrollMovingService} from \"../../../core/services/scroll-moving.service\";\nimport {PartnerFormService} from \"../../../core/services/partner-form.service\";\nimport {UserRole} from \"../../../core/interfaces/user-role\";\n\nimport {PartnerRole} from \"../../../core/interfaces/partner-role\";\nimport {ExpandingPartnerChildrenService} from \"../../../core/services/expanding-partner-children.service\";\n\ndeclare var config;\n\n@Component({\n    selector: 'app-partner-form',\n    templateUrl: './partner-form.component.html',\n    styleUrls: ['./partner-form.component.css'],\n    providers: [ConfirmationService]\n})\nexport class PartnerFormComponent implements OnInit {\n\n    formMode: boolean; //True = >add mode, False=> edit mode\n    isEnabled: boolean;\n    formData: any;\n\n    mrID: string;\n    eicCode: string;\n    partnerRole: string;\n    description: string;\n\n    addressNumber: string;\n    street: string;\n    city: string;\n    locality: string;\n    zip: string;\n    country: string;\n    region: string;\n\n    contactRoles: SelectItem[];\n    partnerRoles: string[];\n\n    newContact: Contact;\n    contactCols: any[];\n    contacts: any[];\n    displayAddModal: boolean;\n\n    isFormChanged: boolean;\n\n    accessToken: string;\n    apiURL: string;\n\n    constructor(private httpService: HttpServiceHelper,\n                private partnerFormService: PartnerFormService,\n                private scrollService: ScrollMovingService,\n                private updatePartnerService: UpdatePartnerService,\n                private expandPartnerChildrenService: ExpandingPartnerChildrenService,\n                private navService: NavigationService,\n                private confirmationService: ConfirmationService) {\n\n        this.isFormChanged = false;\n        this.displayAddModal = false;\n\n        this.contactRoles = [];\n        this.partnerRoles = [];\n\n        this.newContact = {firstname: '', lastname: '', phone: '', email: '', role: UserRole.manager, userid: ''};\n\n        for (let item in UserRole) {\n            if (isNaN(Number(item))) {\n                this.contactRoles.push({label: UserRole[item], value: UserRole[item]});\n            }\n        }\n\n        for (let item in PartnerRole) {\n            if (isNaN(Number(item))) {\n                this.partnerRoles.push(PartnerRole[item]);\n            }\n        }\n\n        this.contactCols = [\n            {field: 'firstname', header: 'First Name'},\n            {field: 'lastname', header: 'Last Name'},\n            {field: 'phone', header: 'Phone'},\n            {field: 'email', header: 'Email'},\n            {field: 'role', header: 'Role'},\n            {field: 'userid', header: 'UserID'},\n        ];\n\n        this.formMode = true;\n        this.isEnabled = false;\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n        this.initFormFields();\n\n        this.apiURL = `${config.client_info.apiURL.serverURL}/partners`;\n\n    }\n\n    ngOnInit() {\n        this.partnerFormService.getPartnerFormInfo().subscribe(subFormInfo => {\n            this.formMode = subFormInfo.type;\n            this.isEnabled = subFormInfo.showMode;\n            this.formData = subFormInfo.value;\n            if (this.formMode) { //Add Mode\n                this.initFormData();\n            }\n            this.setPartnerDetails();\n        })\n    }\n\n    setPartnerDetails() {\n        this.mrID = this.formData.mrid;\n        this.eicCode = this.formData.eicCode;\n        this.partnerRole = this.formData.role.role;\n        this.description = this.formData.description;\n\n        this.contacts = JSON.parse(JSON.stringify(this.formData.contacts)); //Array copy\n\n        this.addressNumber = this.formData.registeredseat.number;\n        this.street = this.formData.registeredseat.street;\n        this.city = this.formData.registeredseat.city;\n        this.locality = this.formData.registeredseat.locality;\n        this.zip = this.formData.registeredseat.zip;\n        this.country = this.formData.registeredseat.country;\n        this.region = this.formData.registeredseat.region;\n\n        this.isFormChanged = false;\n    }\n\n    initFormFields() {\n\n        this.eicCode = this.mrID = this.description = '';\n        this.contacts = [];\n        this.partnerRole = PartnerRole.owner;\n\n        this.addressNumber = this.street = this.city = this.locality = this.zip = this.country = this.region = '';\n    }\n\n    initFormData() {\n        this.formData = {\n            eicCode: '',\n            mrid: '',\n            role: {role: PartnerRole.owner},\n            contacts: [],\n            location: {latitude: 0, longitude: 0, altitude: 0},\n            registeredseat: [{number: '', street: '', city: '', locality: '', zip: '', country: '', region: ''}],\n            description: '',\n        }\n    }\n\n    onSaveFormData() {\n        if (this.checkValidation()) {\n            let postBody = {\n                eicCode: this.eicCode,\n                mrid: this.mrID,\n                role: {role: this.partnerRole},\n                contacts: this.contacts,\n                registeredseat: {\n                    number: this.addressNumber,\n                    street: this.street,\n                    city: this.city,\n                    locality: this.locality,\n                    zip: this.zip,\n                    country: this.country,\n                    region: this.region,\n                },\n                description: this.description,\n            };\n            if (this.formMode) { //Add mode\n                this.httpService.httpPostRequest(this.accessToken, this.apiURL, postBody)\n                    .subscribe((res: any) => {\n                        this.formData = postBody;\n                        this.contacts = [];\n                        this.updatePartnerService.setPartnerInfo(true, null, postBody);\n                        this.initFormData();\n                        this.initFormFields();\n                        this.isFormChanged = false;\n                        console.log('Success in add substation', postBody);\n                    }, err => {\n                        this.formData = {};\n                        console.log('Error in add substation', err);\n                    });\n            } else { //Edit mode\n                let partnerEditURL = this.apiURL + '/' + this.formData.mrid;\n                this.httpService.httpPutRequest(this.accessToken, partnerEditURL, postBody)\n                    .subscribe((res: any) => {\n                        this.updatePartnerService.setPartnerInfo(false, this.formData.mrid, postBody);\n                        this.formData = postBody;\n                        this.contacts = JSON.parse(JSON.stringify(this.formData.contacts));\n                        this.isFormChanged = false;\n                        console.log('Success in update partners', postBody);\n                    }, err => {\n                        this.formData = {};\n                        console.log('Error in update partners', err);\n                    });\n            }\n\n        }\n    }\n\n    isChanged() {\n        let opSaveBtn: any;\n        opSaveBtn = document.getElementsByClassName('op-btn-save');\n        if (opSaveBtn) {\n            let disabledBtnCnt = 0;\n            for (let i = 0; i < opSaveBtn.length; i++) {\n                if (opSaveBtn[i].disabled) {\n                    disabledBtnCnt++;\n                }\n            }\n            if (disabledBtnCnt != opSaveBtn.length) {\n                return true;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    closeMe() {\n        this.navService.setNavInfo('partner-list', true, '');\n        const htmlElem = document.getElementsByClassName('mg-width-virtual');\n        htmlElem[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\n        this.initFormFields();\n        this.initFormData();\n    }\n\n    onCloseComponent() {\n        let self = this;\n        if (this.isChanged()) {\n            this.confirmationService.confirm({\n                message: 'Changes you made may not be saved.',\n                accept: () => {\n                    self.closeMe();\n                },\n                reject: () => {\n\n                }\n            });\n        } else {\n            this.closeMe();\n        }\n    }\n\n    checkValidation() {\n        if (this.eicCode.trim() == \"\") {\n            return false;\n        }\n        if (this.mrID.trim() == \"\") {\n            return false;\n        }\n        return true;\n    }\n\n    onContactEditComplete(newVal) {\n        this.checkFormChange();\n    }\n\n    onDeleteContact(contactVal: Contact) {\n        let indexof = this.contacts.indexOf(contactVal);\n        if (indexof > -1) {\n            this.contacts.splice(indexof, 1)\n        }\n        this.checkFormChange();\n    }\n\n    compareContacts(x: Contact, y: Contact) {\n        return (x.firstname == y.firstname &&\n            x.lastname == y.lastname &&\n            x.phone == y.phone &&\n            x.email == y.email &&\n            x.userid == y.userid &&\n            x.role == y.role);\n    }\n\n    checkFormChange() {\n        this.isFormChanged = (this.mrID != this.formData.mrid ||\n            this.eicCode != this.formData.eicCode ||\n            this.partnerRole != this.formData.role.role ||\n            this.contacts.length != this.formData.contacts.length ||\n            this.addressNumber != this.formData.registeredseat.number ||\n            this.street != this.formData.registeredseat.street ||\n            this.city != this.formData.registeredseat.city ||\n            this.locality != this.formData.registeredseat.locality ||\n            this.zip != this.formData.registeredseat.zip ||\n            this.country != this.formData.registeredseat.country ||\n            this.region != this.formData.registeredseat.region ||\n            this.description != this.formData.description);\n        let sameObjCnt = 0;\n        let formContacts = this.formData.contacts;\n        for (let i = 0; i < this.contacts.length; i++) {\n            for (let j = 0; j < formContacts.length; j++) {\n                if (this.compareContacts(this.contacts[i], formContacts[j])) {\n                    sameObjCnt++;\n                }\n            }\n        }\n\n        this.isFormChanged = this.isFormChanged || (sameObjCnt < this.contacts.length);\n    }\n\n    onShowAddDialog() {\n        this.displayAddModal = true;\n        this.newContact = {firstname: '', lastname: '', phone: '', email: '', role: UserRole.manager, userid: ''};\n    }\n\n    onDiscard() {\n        this.displayAddModal = false;\n    }\n\n    onAddRow() {\n        if (this.newContact.userid.trim() == \"\") return;\n        this.contacts.push(this.newContact);\n        this.displayAddModal = false;\n        this.newContact = {firstname: '', lastname: '', phone: '', email: '', role: UserRole.manager, userid: ''};\n        this.isFormChanged = true;\n        this.checkFormChange();\n    }\n\n    onOpenContacts() {\n        let self = this;\n        this.navService.setNavInfo('partner-contact', true, '');\n        setTimeout(function () {\n            self.expandPartnerChildrenService.setPartnerChildrenStatus(true, self.formData.contacts, 'contact');\n            self.scrollService.setMovedScroll(true, 'partner-contact-list');\n        }, 100)\n    }\n\n    onOpenAddresses() {\n        let self = this;\n        this.navService.setNavInfo('partner-address', true, '');\n        setTimeout(function () {\n            self.expandPartnerChildrenService.setPartnerChildrenStatus(true, self.formData.mrid, 'address');\n            self.scrollService.setMovedScroll(true, 'partner-address-list');\n        }, 100)\n    }\n\n    onOpenSubstations() {\n        let self = this;\n        this.navService.setNavInfo('partner-substation', true, '');\n        setTimeout(function () {\n            self.expandPartnerChildrenService.setPartnerChildrenStatus(true, self.formData.mrid, 'substation');\n            self.scrollService.setMovedScroll(true, 'partner-substation-list');\n        }, 100)\n    }\n\n    eicCodeChange(newVal: string) {\n        this.eicCode = newVal;\n        this.checkFormChange();\n    }\n\n    mrIDChange(newVal: string) {\n        this.mrID = newVal;\n        this.checkFormChange();\n    }\n\n    descriptionChange(newVal: string) {\n        this.description = newVal;\n        this.checkFormChange();\n    }\n\n    zipChange(newVal: string) {\n        this.zip = newVal;\n        this.checkFormChange();\n    }\n\n    streetChange(newVal: string) {\n        this.street = newVal;\n        this.checkFormChange();\n    }\n\n    numberChange(newVal: string) {\n        this.addressNumber = newVal;\n        this.checkFormChange();\n    }\n\n    cityChange(newVal: string) {\n        this.city = newVal;\n        this.checkFormChange();\n    }\n\n    localityChange(newVal: string) {\n        this.locality = newVal;\n        this.checkFormChange();\n    }\n\n    countryChange(newVal: string) {\n        this.country = newVal;\n        this.checkFormChange();\n    }\n\n    regionChange(newVal: string) {\n        this.region = newVal;\n        this.checkFormChange();\n    }\n\n    roleChange(newVal: string) {\n        this.partnerRole = newVal;\n        this.checkFormChange();\n    }\n\n    newFirstNameChange(newVal: string) {\n        this.newContact.firstname = newVal;\n    }\n\n    newLastNameChange(newVal: string) {\n        this.newContact.lastname = newVal;\n    }\n\n    newPhoneChange(newVal: string) {\n        this.newContact.phone = newVal;\n    }\n\n    newEmailChange(newVal: string) {\n        this.newContact.email = newVal;\n    }\n\n    newUserIDChange(newVal: string) {\n        this.newContact.userid = newVal;\n    }\n\n    newRoleChange(newVal: string) {\n        this.newContact.role = newVal;\n    }\n}\n","module.exports = \".partner-substation-list {\\r\\n    width: 2100px;\\r\\n    display: inline-block;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL3BhcnRuZXItc3Vic3RhdGlvbi10YWJsZS9wYXJ0bmVyLXN1YnN0YXRpb24tdGFibGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixxQkFBcUI7QUFDekIiLCJmaWxlIjoiY2xpZW50L2FwcC9tb2R1bGVzL2NvbXBvbmVudHMvcGFydG5lci1zdWJzdGF0aW9uLXRhYmxlL3BhcnRuZXItc3Vic3RhdGlvbi10YWJsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhcnRuZXItc3Vic3RhdGlvbi1saXN0IHtcclxuICAgIHdpZHRoOiAyMTAwcHg7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"partner-substation-list card mg-app-component\\\"  id=\\\"{{tableId}}\\\" *ngIf=\\\"isEnabled\\\">\\n    <div class=\\\"content-loading\\\" *ngIf=\\\"!contentLoaded\\\">\\n        <img src=\\\"../../../../assets/img/loading.svg\\\">\\n    </div>\\n    <div class=\\\"card-header\\\">\\n        <div class=\\\"card-title\\\">\\n            <h4>Substations</h4>\\n            <span (click)=\\\"onCloseComponent()\\\"><i class=\\\"fa fa-2x fa-close\\\"></i></span>\\n        </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"table-setting-bar\\\">\\n            <div class=\\\"dropdown mg-dropdown-area\\\" >\\n                <div class=\\\"drop-down-backdrop\\\" (click)=\\\"isShowSetting=false\\\" *ngIf=\\\"isShowSetting\\\"></div>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle mg-toggle-btn\\\"\\n                        pTooltip=\\\"Column Setting\\\"  tooltipPosition=\\\"top\\\"\\n                        (click)=\\\"isShowSetting = !isShowSetting\\\">\\n                    <i class=\\\"fa fa-cog\\\"></i>\\n                </button>\\n                <div class=\\\"dropdown-menu mg-dropdown-menu\\\" *ngIf=\\\"isShowSetting\\\">\\n                    <div style=\\\"text-align:left\\\">\\n                        <table>\\n                            <thead>\\n                            <tr>\\n                                <th>Visible</th>\\n                                <th>Column</th>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n                            <tr *ngFor=\\\"let subcol of subCols\\\">\\n                                <td><p-checkbox binary=\\\"true\\\" value=\\\"true\\\" [disabled]=\\\"subcol.visibility && curSelColsCnt == 1\\\"\\n                                                (onChange)=\\\"onChangeVisibility(subcol)\\\"\\n                                                [(ngModel)]=\\\"subcol.visibility\\\">\\n                                </p-checkbox></td>\\n                                <td>{{subcol.header}}</td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n            <button class=\\\"btn filter-items\\\" (click)=\\\"onChangeFilter()\\\"\\n                    pTooltip=\\\"{{ (isHideFilter)?'On Filter':'Off Filter' }}\\\"  tooltipPosition=\\\"top\\\"\\n                    [ngClass]=\\\"{'btn-primary':!isHideFilter, 'btn-secondary':isHideFilter}\\\" >\\n                <i class=\\\"fa fa-filter\\\"></i>\\n            </button>\\n            <div class=\\\"clearfix\\\"></div>\\n        </div>\\n        <p-table #dt sortMode=\\\"multiple\\\"\\n                 [value]=\\\"substations\\\"\\n                 [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\n                 [totalRecords]=\\\"substations.length\\\"\\n                 [(selection)]=\\\"selectedRows\\\"\\n                 selectionMode=\\\"multiple\\\"\\n                 [resizableColumns]=\\\"true\\\"\\n                 columnResizeMode=\\\"expand\\\"\\n                 (onColResize) = \\\"onColResize($event)\\\">\\n            <ng-template pTemplate=\\\"header\\\">\\n                <tr>\\n                    <th class=\\\"th-id-wrap\\\"\\n                        *ngFor=\\\"let subcol of subCols\\\"\\n                        [ngClass]=\\\"{'mg-hide': !subcol.visibility}\\\"\\n                        [pSortableColumn]=\\\" (subcol.group != '')? subcol.group + '.' + subcol.field: subcol.field\\\" pResizableColumn>\\n                        {{subcol.header}}\\n                        <p-sortIcon [field]=\\\"subcol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                    </th>\\n                </tr>\\n                <tr [ngClass]=\\\"{'mg-hide':isHideFilter}\\\">\\n                    <th *ngFor=\\\"let subcol of subCols\\\"\\n                        [ngClass]=\\\"{'mg-hide':!subcol.visibility}\\\"\\n                        [ngSwitch]=\\\"subcol.field\\\" >\\n                        <input *ngSwitchCase=\\\"subcol.field\\\" pInputText type=\\\"text\\\"\\n                               (input)=\\\"onTblFilter($event, subcol, dt)\\\">\\n                    </th>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"body\\\" let-substation>\\n                <tr>\\n                    <td *ngFor=\\\"let subcol of subCols\\\"\\n                        [ngClass]=\\\"{'mg-hide':!subcol.visibility}\\\">\\n                        {{ (subcol.group != '')? substation[subcol.group][subcol.field]: substation[subcol.field]}}\\n                    </td>\\n                </tr>\\n            </ng-template>\\n        </p-table>\\n    </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {ExpandingPartnerChildrenService} from \"../../../core/services/expanding-partner-children.service\";\nimport {SettingService} from \"../../../core/services/setting.service\";\n\ndeclare function checkTable(tblId, tdInfo): any;\ndeclare function initTable(tblId): any;\ndeclare function readTable(tblId): any;\ndeclare function updateTableWidth(tblName, tdInfo): any;\ndeclare var config;\n\n@Component({\n    selector: 'app-partner-substation-table',\n    templateUrl: './partner-substation-table.component.html',\n    styleUrls: ['./partner-substation-table.component.css']\n})\n\n\nexport class PartnerSubstationTableComponent implements OnInit {\n\n    substations: Array<Substation>;\n    partnerMrID: string;\n    subCols: any[];\n    selectedRows: Array<Substation>;\n    accessToken: string;\n    apiURL: string;\n\n    contentLoaded: boolean;\n    isHideFilter: boolean;\n    isEnabled: boolean;\n\n    isShowSetting: boolean;\n    curSelColsCnt: number;\n    tableId: string;\n    tableSettingName: string;\n\n    constructor(private expandPartnerChildService: ExpandingPartnerChildrenService,\n                private httpService: HttpServiceHelper,\n                private settingService: SettingService,\n                private navService: NavigationService) {\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n        this.contentLoaded = false;\n        this.partnerMrID = '';\n        this.isEnabled = false;\n        this.substations = [];\n        this.selectedRows = [];\n        this.isHideFilter = false;\n        this.apiURL = `${config.client_info.apiURL.serverURL}/partners/`;\n\n        this.tableId = 'partner-substation-list';\n        this.tableSettingName = this.tableId +'_setting';\n        this.isShowSetting = false;\n        this.subCols = [\n            {field: 'mrid', header: 'MrId', group:''},\n            {field: 'description', header: 'Description', group:''},\n            {field: 'latitude', header: 'Location.Lat', group:'location'},\n            {field: 'longitude', header: 'Location.Lon', group:'location'},\n            {field: 'altitude', header: 'Location.Alt', group:'location'},\n            {field: 'number', header: 'Address.Number', group:'address'},\n            {field: 'street', header: 'Address.Street', group:'address'},\n            {field: 'city', header: 'Address.City', group:'address'},\n            {field: 'locality', header: 'Address.Locality', group:'address'},\n            {field: 'zip', header: 'Address.Zip', group:'address'},\n            {field: 'country', header: 'Address.Country', group:'address'},\n            {field: 'region', header: 'Address.Region', group:'address'},\n        ];\n\n    }\n\n    ngOnInit() {\n        this.initTableSetting();\n        this.expandPartnerChildService.getPartnerChildrenInfo().subscribe(substationInfo => {\n            if(substationInfo.name == 'substation'){\n                this.isEnabled = substationInfo.mode;\n                this.partnerMrID = substationInfo.data;\n\n                this.getSubstations();\n            }\n        });\n    }\n\n    getSubstations() {\n        this.contentLoaded = false;\n        let apiURL = this.apiURL + this.partnerMrID + '/substations';\n        this.httpService.httpGetRequest(this.accessToken, apiURL).subscribe((res: any) => {\n            this.substations = res;\n            this.contentLoaded = true;\n        }, error => {\n            console.error(\"Can't get substation list\", error);\n            this.substations = [];\n            this.contentLoaded = true;\n        });\n    }\n\n    onCloseComponent() {\n        this.navService.setNavInfo('partner-form', true, '');\n    }\n\n    initTableSetting() {\n\n        readTable(this.tableId);\n        let tblSettingStr = localStorage.getItem(this.tableSettingName);\n        let settingInfo: any;\n        if(tblSettingStr) {\n            settingInfo = JSON.parse(tblSettingStr);\n        } else {\n            //Write New Setting\n            settingInfo = { filter: true};\n            settingInfo.visible = [\n                'MrId','Description',\n                'Location.Lat','Location.Lon','Location.Alt',\n                'Address.Number','Address.Street','Address.City',\n                'Address.Locality','Address.Zip','Address.Country','Address.Region'\n            ];\n            localStorage.setItem(this.tableSettingName, JSON.stringify(settingInfo));\n        }\n\n        this.isHideFilter = !settingInfo.filter;\n        this.subCols = this.checkColVisibility(this.subCols, settingInfo.visible);\n        this.curSelColsCnt = settingInfo.visible.length;\n    }\n\n    checkColVisibility(colList: any, visibleColList: any) {\n\n        for(let i = 0; i<colList.length; i++) {\n            colList[i].visibility = visibleColList.indexOf(colList[i].header)>-1;\n        }\n        return colList;\n    }\n\n    onChangeVisibility(item) {\n        checkTable(this.tableId, item);\n        if(item.visibility){\n            this.curSelColsCnt += 1;\n        } else {\n            this.curSelColsCnt -= 1;\n        }\n        this.settingService.setSettingInfo(this.tableSettingName,'visibility', {col:item.header,st:item.visibility})\n    }\n\n    onTblFilter(ev, item, dt) {\n        let field = (item.group != '')? item.group + '.' + item.field: item.field;\n        dt.filter(ev.target.value,  field, item.filterMatchMode);\n    }\n\n    onChangeFilter() {\n        this.isHideFilter = !this.isHideFilter;\n        this.settingService.setSettingInfo(this.tableSettingName,'filter', this.isHideFilter);\n    }\n\n    onColResize($ev) {\n        updateTableWidth(this.tableId, $ev);\n    }\n}\n","module.exports = \".partner-list {\\r\\n    width: 1944px;\\r\\n    display: inline-block;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL3BhcnRuZXItdGFibGUvcGFydG5lci10YWJsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHFCQUFxQjtBQUN6QiIsImZpbGUiOiJjbGllbnQvYXBwL21vZHVsZXMvY29tcG9uZW50cy9wYXJ0bmVyLXRhYmxlL3BhcnRuZXItdGFibGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wYXJ0bmVyLWxpc3Qge1xyXG4gICAgd2lkdGg6IDE5NDRweDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG5cclxuXHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"partner-list card mg-app-component\\\" id=\\\"{{tableId}}\\\">\\r\\n    <div class=\\\"content-loading\\\" *ngIf=\\\"!contentLoaded\\\">\\r\\n        <img src=\\\"../../../../assets/img/loading.svg\\\">\\r\\n    </div>\\r\\n    <div class=\\\"card-header\\\">\\r\\n        <div class=\\\"card-title\\\">\\r\\n            <h4>Partners</h4>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"table-setting-bar\\\">\\r\\n            <div class=\\\"dropdown mg-dropdown-area\\\" >\\r\\n                <div class=\\\"drop-down-backdrop\\\" (click)=\\\"isShowSetting=false\\\" *ngIf=\\\"isShowSetting\\\"></div>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle mg-toggle-btn\\\"\\r\\n                        pTooltip=\\\"Column Setting\\\"  tooltipPosition=\\\"top\\\"\\r\\n                        (click)=\\\"isShowSetting = !isShowSetting\\\">\\r\\n                    <i class=\\\"fa fa-cog\\\"></i>\\r\\n                </button>\\r\\n                <div class=\\\"dropdown-menu mg-dropdown-menu\\\" *ngIf=\\\"isShowSetting\\\">\\r\\n                    <div style=\\\"text-align:left\\\">\\r\\n                        <table>\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th>Visible</th>\\r\\n                                <th>Column</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr *ngFor=\\\"let partnercol of partnerCols\\\">\\r\\n                                <td><p-checkbox binary=\\\"true\\\" value=\\\"true\\\" [disabled]=\\\"partnercol.visibility && curSelColsCnt == 1\\\"\\r\\n                                                (onChange)=\\\"onChangeVisibility(partnercol)\\\"\\r\\n                                                [(ngModel)]=\\\"partnercol.visibility\\\">\\r\\n                                </p-checkbox></td>\\r\\n                                <td>{{partnercol.header}}</td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button class=\\\"btn filter-items\\\" (click)=\\\"onChangeFilter()\\\"\\r\\n                    pTooltip=\\\"{{ (isHideFilter)?'On Filter':'Off Filter' }}\\\"  tooltipPosition=\\\"top\\\"\\r\\n                    [ngClass]=\\\"{'btn-primary':!isHideFilter, 'btn-secondary':isHideFilter}\\\" >\\r\\n                <i class=\\\"fa fa-filter\\\"></i>\\r\\n            </button>\\r\\n            <button class=\\\"btn btn-danger delete-item\\\"\\r\\n                    pTooltip=\\\"Delete Rows\\\"  tooltipPosition=\\\"top\\\"\\r\\n                    (click)=\\\"onDeleteRows()\\\" [disabled]=\\\"selectedRows.length == 0\\\">\\r\\n                <i class=\\\"fa fa-trash\\\"></i>\\r\\n            </button>\\r\\n            <button class=\\\"btn btn-primary add-item\\\" (click)=\\\"onAddNewRow()\\\">+ Add New</button>\\r\\n            <div class=\\\"clearfix\\\"></div>\\r\\n        </div>\\r\\n        <p-table #dt sortMode=\\\"multiple\\\"\\r\\n                 [value]=\\\"partners\\\"\\r\\n                 [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\r\\n                 [totalRecords]=\\\"partners.length\\\"\\r\\n                 [(selection)]=\\\"selectedRows\\\"\\r\\n                 selectionMode=\\\"multiple\\\"\\r\\n                 [resizableColumns]=\\\"true\\\"\\r\\n                 columnResizeMode=\\\"expand\\\"\\r\\n                 (onColResize) = \\\"onColResize($event)\\\"\\r\\n                 (onHeaderCheckboxToggle)=\\\"selectAllRows($event)\\\"\\r\\n                 (onRowSelect)=\\\"onRowSelect($event)\\\"\\r\\n                 (onRowUnselect)=\\\"onRowUnselect($event)\\\">\\r\\n            <ng-template pTemplate=\\\"header\\\">\\r\\n                <tr>\\r\\n                    <th class=\\\"mg-item-checkbox\\\">\\r\\n                        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\\r\\n                    </th>\\r\\n                    <th class=\\\"th-id-wrap\\\"\\r\\n                        *ngFor=\\\"let partnercol of partnerCols\\\"\\r\\n                        [ngClass]=\\\"{'mg-hide': !partnercol.visibility}\\\"\\r\\n                        [pSortableColumn]=\\\" (partnercol.group != '')? partnercol.group + '.' + partnercol.field: partnercol.field\\\" pResizableColumn>\\r\\n                        {{partnercol.header}}\\r\\n                        <p-sortIcon [field]=\\\"partnercol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\r\\n                    </th>\\r\\n                </tr>\\r\\n                <tr [ngClass]=\\\"{'mg-hide':isHideFilter}\\\">\\r\\n                    <th></th>\\r\\n                    <th *ngFor=\\\"let partnercol of partnerCols\\\"\\r\\n                        [ngClass]=\\\"{'mg-hide':!partnercol.visibility}\\\"\\r\\n                        [ngSwitch]=\\\"partnercol.field\\\" >\\r\\n                        <input *ngSwitchCase=\\\"partnercol.field\\\" pInputText type=\\\"text\\\"\\r\\n                               (input)=\\\"onTblFilter($event, partnercol, dt)\\\">\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n            <ng-template pTemplate=\\\"body\\\" let-partner>\\r\\n                <tr>\\r\\n                    <td>\\r\\n                        <p-tableCheckbox [value]=\\\"partner\\\"></p-tableCheckbox>\\r\\n                    </td>\\r\\n                    <td *ngFor=\\\"let partnercol of partnerCols\\\"  (click)=\\\"onEditRow(partner)\\\"\\r\\n                        [ngClass]=\\\"{'mg-hide':!partnercol.visibility}\\\">\\r\\n                        {{ (partnercol.group != '')? partner[partnercol.group][partnercol.field]: partner[partnercol.field]}}\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n        </p-table>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\nimport {PartnerFormService} from \"../../../core/services/partner-form.service\";\nimport {ScrollMovingService} from \"../../../core/services/scroll-moving.service\";\nimport {UpdatePartnerService} from \"../../../core/services/update-partner.service\";\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\n\nimport {forkJoin} from \"rxjs\";\nimport {SettingService} from \"../../../core/services/setting.service\";\n\ndeclare function checkTable(tblId, tdInfo): any;\ndeclare function initTable(tblId): any;\ndeclare function readTable(tblId): any;\ndeclare function updateTableWidth(tblName, tdInfo): any;\ndeclare var config;\n\n@Component({\n    selector: 'app-partner-table',\n    templateUrl: './partner-table.component.html',\n    styleUrls: ['./partner-table.component.css']\n})\n\n\nexport class PartnerTableComponent implements OnInit {\n\n    partners: Array<Partner>;\n    partnerCols: any[];\n    addressCols: any[];\n    contactCols: any[];\n    selectedRows: Array<Partner>;\n    accessToken: string;\n    apiURL: string;\n\n    contentLoaded: boolean;\n    isHideFilter: boolean;\n\n    isShowSetting: boolean;\n    curSelColsCnt: number;\n    tableId: string;\n    tableSettingName: string;\n\n    constructor(\n        private partnerFormService: PartnerFormService,\n        private httpService: HttpServiceHelper,\n        private scrollService: ScrollMovingService,\n        private settingService: SettingService,\n        private updatePartnerService: UpdatePartnerService,\n        private navService: NavigationService) {\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n        this.contentLoaded = false;\n        this.partners = [];\n        this.apiURL = `${config.client_info.apiURL.serverURL}/partners`;\n        this.selectedRows = [];\n\n        this.tableId = 'partner-list';\n        this.tableSettingName = this.tableId +'_setting';\n        this.isShowSetting = false;\n        this.partnerCols = [\n            {field: 'mrid', header: 'MrId', group:''},\n            {field: 'eicCode', header: 'EicCode', group:''},\n            {field: 'role', header: 'Role', group:'role'},\n            {field: 'description', header: 'Description', group:''},\n            {field: 'number', header: 'Address.Number', group:'registeredseat'},\n            {field: 'street', header: 'Address.Street', group:'registeredseat'},\n            {field: 'city', header: 'Address.City', group:'registeredseat'},\n            {field: 'locality', header: 'Address.Locality', group:'registeredseat'},\n            {field: 'zip', header: 'Address.Zip', group:'registeredseat'},\n            {field: 'country', header: 'Address.Country', group:'registeredseat'},\n            {field: 'region', header: 'Address.Region', group:'registeredseat'},\n        ];\n    }\n\n    ngOnInit() {\n\n        this.selectedRows = [];\n        this.isHideFilter = false;\n\n        this.contactCols = [\n            {field: 'firstname', header: 'Firstname'},\n            {field: 'lastname', header: 'Lastname'},\n            {field: 'phone', header: 'Phone'},\n            {field: 'email', header: 'Email'},\n            {field: 'role', header: 'Role'},\n            {field: 'userid', header: 'UserID'},\n        ];\n\n        this.getPartners();\n\n        this.initTableSetting();\n\n        this.updatePartnerService.getPartnerInfo().subscribe(updateInfo => {\n            if (updateInfo.mode) {\n                console.log(updateInfo.newPartner);\n                this.partners.push(updateInfo.newPartner);\n            } else {\n                for (let i = 0; i < this.partners.length; i++) {\n                    if (this.partners[i].mrid == updateInfo.mrid) {\n                        this.partners[i] = updateInfo.newPartner;\n                    }\n                }\n            }\n        });\n    }\n\n    getPartners() {\n        let partnerIdList = [];\n        let promiseList = [];\n        this.httpService.httpGetRequest(this.accessToken, this.apiURL).subscribe((res: any) => {\n            partnerIdList = res;\n            for (let i = 0; i < partnerIdList.length; i++) {\n                let partnerDetailURL = this.apiURL + '/' + partnerIdList[i];\n                promiseList.push(this.httpService.httpGetRequest(this.accessToken, partnerDetailURL));\n            }\n            if (partnerIdList.length > 0) {\n                forkJoin(promiseList).subscribe(results => {\n                    this.partners = results;\n                    this.contentLoaded = true;\n                }, err => {\n                    console.log(\"Can't get partners list\", err);\n                    this.partners = [];\n                    this.contentLoaded = true;\n                })\n            } else {\n                console.log(\"Can't get partners list\");\n                this.partners = [];\n                this.contentLoaded = true;\n            }\n        }, error => {\n            if(error.error instanceof ErrorEvent){\n                alert(error.error.message);\n            } else {\n                alert(`Backend returned code ${error.status}, body was: ${JSON.stringify(error.error)}`);\n            }\n            console.error(\"Can't get partners list\", error);\n            this.partners = [];\n            this.contentLoaded = true;\n        });\n    }\n\n    onDeleteRows() {\n        let subIds = [];\n        let promiseList = [];\n        for (let i = 0; i < this.selectedRows.length; i++) {\n            let subDeleteURL = this.apiURL + '/' + this.selectedRows[i].mrid;\n            subIds.push(this.selectedRows[i].mrid);\n            promiseList.push(this.httpService.httpDeleteRequest(this.accessToken, subDeleteURL));\n        }\n        if (subIds.length > 0) {\n            forkJoin(promiseList).subscribe(results => {\n                let leftPartners = [];\n                for (let i = 0; i < this.partners.length; i++) {\n                    if (subIds.indexOf(this.partners[i].mrid) < 0) {\n                        leftPartners.push(this.partners[i]);\n                    }\n                }\n                this.partners = leftPartners;\n                this.selectedRows = [];\n                this.contentLoaded = true;\n                console.log('Success in substation Deleting', results);\n            }, err => {\n                this.partners = [];\n                this.contentLoaded = true;\n                console.error('Error in partners Deleting', err);\n            })\n        } else {\n            this.partners = [];\n            this.contentLoaded = true;\n            console.log('Error in partners Deleting due to the Empty String');\n        }\n    }\n\n    onEditRow(partner) {\n        let self = this;\n        this.navService.setNavInfo('partner-form', true, partner.mrid);\n        setTimeout(function () {\n            self.partnerFormService.setPartnerFormInfo(false, partner, true);\n            self.scrollService.setMovedScroll(true, 'partner-form');\n        }, 100);\n\n    }\n\n    onAddNewRow() {\n        let self = this;\n        this.navService.setNavInfo('partner-form', true, '');\n        setTimeout(function () {\n            self.partnerFormService.setPartnerFormInfo(true, null, true);\n            self.scrollService.setMovedScroll(true, 'partner-form');\n        }, 100);\n\n    }\n\n    onRowSelect(event) {\n        console.log(this.selectedRows);\n    }\n\n    onRowUnselect(event) {\n        console.log(this.selectedRows);\n    }\n\n    selectAllRows(event) {\n        if (event.checked) {\n            // alert('all rows selected');\n            console.log(this.selectedRows);\n        } else {\n            // alert('all rows diselected');\n\n        }\n    }\n    // ====================================================\n    initTableSetting() {\n\n        readTable(this.tableId);\n        let tblSettingStr = localStorage.getItem(this.tableSettingName);\n        let settingInfo: any;\n        if(tblSettingStr) {\n            settingInfo = JSON.parse(tblSettingStr);\n        } else {\n            //Write New Setting\n            settingInfo = { filter: true};\n            settingInfo.visible = [\n                'MrId','EicCode','Role','Description',\n                'Location.Lat','Location.Lon','Location.Alt',\n                'Address.Number','Address.Street','Address.City',\n                'Address.Locality','Address.Zip','Address.Country', 'Address.Region'\n            ];\n            localStorage.setItem(this.tableSettingName, JSON.stringify(settingInfo));\n        }\n\n        this.isHideFilter = !settingInfo.filter;\n        this.partnerCols = this.checkColVisibility(this.partnerCols, settingInfo.visible);\n        this.curSelColsCnt = settingInfo.visible.length;\n    }\n\n    checkColVisibility(colList: any, visibleColList: any) {\n\n        for(let i = 0; i<colList.length; i++) {\n            colList[i].visibility = visibleColList.indexOf(colList[i].header)>-1;\n        }\n        return colList;\n    }\n\n    onChangeVisibility(item) {\n        checkTable(this.tableId, item);\n        if(item.visibility){\n            this.curSelColsCnt += 1;\n        } else {\n            this.curSelColsCnt -= 1;\n        }\n        this.settingService.setSettingInfo(this.tableSettingName,'visibility', {col:item.header,st:item.visibility})\n    }\n\n    onTblFilter(ev, item, dt) {\n        let field = (item.group != '')? item.group + '.' + item.field: item.field;\n        dt.filter(ev.target.value,  field, item.filterMatchMode);\n    }\n\n    onChangeFilter() {\n        this.isHideFilter = !this.isHideFilter;\n        this.settingService.setSettingInfo(this.tableSettingName,'filter', this.isHideFilter);\n    }\n\n    onColResize($ev) {\n        updateTableWidth(this.tableId, $ev);\n    }\n\n}\n","module.exports = \".physical-substation-form .table-setting-bar label {\\r\\n    padding-top: 8px;margin-bottom: 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL3BoeXNpY2FsLXN1YnN0YXRpb24tZm9ybS9waHlzaWNhbC1zdWJzdGF0aW9uLWZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQixDQUFDLGdCQUFnQjtBQUNyQyIsImZpbGUiOiJjbGllbnQvYXBwL21vZHVsZXMvY29tcG9uZW50cy9waHlzaWNhbC1zdWJzdGF0aW9uLWZvcm0vcGh5c2ljYWwtc3Vic3RhdGlvbi1mb3JtLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGh5c2ljYWwtc3Vic3RhdGlvbi1mb3JtIC50YWJsZS1zZXR0aW5nLWJhciBsYWJlbCB7XHJcbiAgICBwYWRkaW5nLXRvcDogOHB4O21hcmdpbi1ib3R0b206IDA7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"physical-substation-form\\\" id=\\\"{{tableId}}\\\">\\n    <p-dialog header=\\\"Physical Substations\\\"\\n              width=\\\"1068\\\"\\n              [(visible)]=\\\"displayModal\\\"\\n              (onShow)=\\\"onShowDialog()\\\"\\n              (onHide)=\\\"onDiscard()\\\"\\n              [modal]=\\\"true\\\">\\n        <div class=\\\"table-setting-bar\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-6\\\">\\n                    <button class=\\\"btn filter-items\\\" (click)=\\\"isHideFilter = !isHideFilter\\\"\\n                            pTooltip=\\\"{{ (isHideFilter)?'On Filter':'Off Filter' }}\\\" tooltipPosition=\\\"top\\\"\\n                            [ngClass]=\\\"{'btn-primary':!isHideFilter, 'btn-secondary':isHideFilter}\\\">\\n                        <i class=\\\"fa fa-filter\\\"></i>\\n                    </button>\\n                </div>\\n                <div class=\\\"ui-g-3 text-right\\\">\\n                    <label>Role</label>\\n                </div>\\n                <div class=\\\"ui-g-3\\\">\\n                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedRole\\\">\\n                        <option *ngFor=\\\"let vrole of vRoles\\\" [value]=\\\"vrole.value\\\"\\n                                [selected]=\\\"(selectedRole && vrole.value == selectedRole)\\\">{{vrole.value}}</option>\\n                    </select>\\n                </div>\\n            </div>\\n            <div class=\\\"clearfix\\\"></div>\\n        </div>\\n        <p-table #dt sortMode=\\\"multiple\\\"\\n                 [value]=\\\"substations\\\"\\n                 [totalRecords]=\\\"substations.length\\\"\\n                 [paginator]=\\\"true\\\" [rows]=\\\"5\\\"\\n                 [(selection)]=\\\"selectedRow\\\"\\n                 selectionMode=\\\"single\\\">\\n            <ng-template pTemplate=\\\"header\\\">\\n                <tr>\\n                    <th class=\\\"th-id-wrap\\\"\\n                        *ngFor=\\\"let subcol of subCols\\\"\\n                        [pSortableColumn]=\\\" (subcol.group != '')? subcol.group + '.' + subcol.field: subcol.field\\\">\\n                        {{subcol.header}}\\n                        <p-sortIcon [field]=\\\"subcol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                    </th>\\n                </tr>\\n                <tr [ngClass]=\\\"{'mg-hide':isHideFilter}\\\">\\n                    <th *ngFor=\\\"let subcol of subCols\\\"\\n                        [ngSwitch]=\\\"subcol.field\\\">\\n                        <input *ngSwitchCase=\\\"subcol.field\\\" pInputText type=\\\"text\\\"\\n                               (input)=\\\"onTblFilter($event, subcol, dt)\\\">\\n                    </th>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"body\\\" let-partner>\\n                <tr [pSelectableRow]=\\\"partner\\\">\\n                    <td *ngFor=\\\"let subcol of subCols\\\">\\n                        {{ (subcol.group != '') ? partner[subcol.group][subcol.field] : partner[subcol.field]}}\\n                    </td>\\n                </tr>\\n            </ng-template>\\n        </p-table>\\n        <p-footer>\\n            <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n                <button type=\\\"button\\\" pButton icon=\\\"fa fa-close\\\" (click)=\\\"onDiscard()\\\" label=\\\"Discard\\\"></button>\\n                <button type=\\\"button\\\" pButton icon=\\\"fa fa-check\\\" (click)=\\\"onAddRow()\\\" label=\\\"Save\\\"></button>\\n            </div>\\n        </p-footer>\\n    </p-dialog>\\n</div>\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {forkJoin} from \"rxjs\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\nimport {AuthService} from \"../../../core/services/auth.service\";\nimport {UserRole} from \"../../../core/interfaces/user-role\";\nimport {VirtualSubstationRole} from \"../../../core/interfaces/virtual-substation-role\";\n\ndeclare function checkTable(tblId, tdInfo): any;\n\ndeclare function initTable(tblId): any;\n\ndeclare function readTable(tblId): any;\n\ndeclare function updateTableWidth(tblName, tdInfo): any;\n\ndeclare var config;\n\n@Component({\n    selector: 'app-physical-substation-form',\n    templateUrl: './physical-substation-form.component.html',\n    styleUrls: ['./physical-substation-form.component.css']\n})\nexport class PhysicalSubstationFormComponent implements OnInit {\n\n    @Input() displayModal: boolean;\n    @Output() closeForm = new EventEmitter();\n    @Output() addNewItem = new EventEmitter();\n\n    accessToken: string;\n    apiURL: string;\n    isHideFilter: boolean;\n    contentLoaded: boolean;\n\n    substations: any[];\n    selectedRow: Substation;\n    selectedRole: string;\n    vRoles: any[];\n    subCols: any[];\n    tableId: string;\n\n    constructor(private authService: AuthService,\n                private httpService: HttpServiceHelper) {\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n        this.isHideFilter = false;\n        this.substations = [];\n        this.subCols = [\n            {field: 'partnermrid', header: 'PMrId', group: ''},\n            {field: 'mrid', header: 'MrId', group: ''},\n            {field: 'description', header: 'Description', group: ''},\n            {field: 'latitude', header: 'Location.Lat', group: 'location'},\n            {field: 'longitude', header: 'Location.Lon', group: 'location'},\n            {field: 'altitude', header: 'Location.Alt', group: 'location'},\n            /*{field: 'number', header: 'Address.Number', group: 'address'},\n            {field: 'street', header: 'Address.Street', group: 'address'},\n            {field: 'city', header: 'Address.City', group: 'address'},\n            {field: 'locality', header: 'Address.Locality', group: 'address'},\n            {field: 'zip', header: 'Address.Zip', group: 'address'},\n            {field: 'country', header: 'Address.Country', group: 'address'},\n            {field: 'region', header: 'Address.Region', group: 'address'},*/\n        ];\n        this.tableId = \"v-p-substation-list\";\n        this.apiURL = `${config.client_info.apiURL.serverURL}/substations`;\n        this.selectedRow = {partnermrid:'', mrid:'', location:null, contacts:null, address:null, description:''};\n        this.selectedRole = '';\n        this.vRoles = [];\n        for (let item in VirtualSubstationRole) {\n            if (isNaN(Number(item))) {\n                this.vRoles.push({label: VirtualSubstationRole[item], value: VirtualSubstationRole[item]});\n            }\n        }\n\n    }\n\n    ngOnInit() {\n        this.contentLoaded = false;\n    }\n\n    getSubstations() {\n        if(this.substations.length>0) return;\n        let subIdList = [];\n        let promiseList = [];\n        this.httpService.httpGetRequest(this.accessToken, this.apiURL).subscribe((res: any) => {\n            subIdList = res;\n            for (let i = 0; i < subIdList.length; i++) {\n                let subDetailURL = this.apiURL + '/' + subIdList[i];\n                promiseList.push(this.httpService.httpGetRequest(this.accessToken, subDetailURL));\n            }\n            if (subIdList.length > 0) {\n                forkJoin(promiseList).subscribe(results => {\n                    this.substations = results;\n                    this.contentLoaded = true;\n                }, err => {\n                    console.log(\"Can't get substation list\", err);\n                    this.substations = [];\n                    this.contentLoaded = true;\n                })\n            } else {\n                console.log(\"Can't get substation list\");\n                alert('No substation data is accessible');\n                // this.authService.setAuthInfo({login_st:false}); ////888888888888888888888888\n                // this.substations = [];\n                this.contentLoaded = true;\n\n            }\n        }, (error: HttpErrorResponse) => {\n            this.httpErrorHandler(error);\n            console.error(\"Can't get substation list\", error);\n            this.substations = [];\n            this.contentLoaded = true;\n        });\n    }\n\n    httpErrorHandler(error: any) {\n        const msgPrefix = \"The remote server returned an error: \";\n        const err401Msg = \"(401) Unauthorized.\";\n        switch (error.status) {\n            case 400:\n                let errMsg = error.error.Message;\n                let idx = errMsg.indexOf(msgPrefix);\n                if (idx > -1) {\n                    let trueMsgPart = errMsg.substr(msgPrefix.length);\n                    alert(trueMsgPart);\n                    if (trueMsgPart == err401Msg) {\n                        this.authService.setAuthInfo({login_st: false})\n                    }\n                } else {\n                    alert(errMsg);\n                }\n                break;\n            case 401:\n                this.authService.setAuthInfo({login_st: false});\n                break;\n            default:\n                alert(`Backend returned code ${error.status}, body was: ${error.error.Message}`);\n        }\n    }\n\n    onTblFilter(ev, item, dt) {\n        let field = (item.group != '') ? item.group + '.' + item.field : item.field;\n        dt.filter(ev.target.value, field, item.filterMatchMode);\n    }\n\n    onDiscard() {\n        ///Send Hide Event to parent\n        this.closeForm.emit('closed form');\n    }\n\n    onAddRow() {\n        this.addNewItem.emit({substationmrid:this.selectedRow.mrid, role: this.selectedRole});\n    }\n\n    onShowDialog() {\n        this.getSubstations();\n        if(this.selectedRole == '') {\n            this.selectedRole = this.vRoles[0].value;\n        }\n    }\n}\n","module.exports = \".mg-sidebar {\\r\\n    padding-top: 20px;\\r\\n    width: 225px;\\r\\n    min-height: calc(100vh - 56px);\\r\\n    background-color: #323130;\\r\\n}\\r\\n\\r\\n.mg-sidebar .mg-sidebar-link {\\r\\n    display: block;\\r\\n    padding: 12px 30px;\\r\\n    text-decoration: none;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.mg-sidebar .mg-sidebar-link:hover {\\r\\n    text-decoration: none;\\r\\n    background-color: #131212e8;\\r\\n}\\r\\n\\r\\n.mg-sidebar-link i {\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n.mg-sidebar-link.active{\\r\\n    background-color: #131212e8;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL3NpZGViYXIvc2lkZWJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWiw4QkFBOEI7SUFDOUIseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksY0FBYztJQUNkLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQiwyQkFBMkI7QUFDL0I7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBQ0E7SUFDSSwyQkFBMkI7QUFDL0IiLCJmaWxlIjoiY2xpZW50L2FwcC9tb2R1bGVzL2NvbXBvbmVudHMvc2lkZWJhci9zaWRlYmFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWctc2lkZWJhciB7XHJcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcclxuICAgIHdpZHRoOiAyMjVweDtcclxuICAgIG1pbi1oZWlnaHQ6IGNhbGMoMTAwdmggLSA1NnB4KTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMjMxMzA7XHJcbn1cclxuXHJcbi5tZy1zaWRlYmFyIC5tZy1zaWRlYmFyLWxpbmsge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwYWRkaW5nOiAxMnB4IDMwcHg7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5tZy1zaWRlYmFyIC5tZy1zaWRlYmFyLWxpbms6aG92ZXIge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzEzMTIxMmU4O1xyXG59XHJcblxyXG4ubWctc2lkZWJhci1saW5rIGkge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcbi5tZy1zaWRlYmFyLWxpbmsuYWN0aXZle1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzEzMTIxMmU4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"mg-sidebar\\\">\\n  <a class=\\\"mg-sidebar-link\\\" *ngFor=\\\"let menuitem of items\\\" [ngClass]=\\\"{'active':(menuitem.routerLink == router.url)}\\\" routerLink=\\\"{{menuitem.routerLink}}\\\">\\n  <i class=\\\"{{menuitem.icon}}\\\"></i>  {{menuitem.label}}\\n  </a>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {MenuItem} from 'primeng/api';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  items: MenuItem[];\n  constructor(private router:Router) { }\n\n  ngOnInit() {\n    this.items = [\n      {label: 'Substation', icon: 'fa fa-sitemap', routerLink: '/app/substation'},\n      {label: 'Virtual Substation', icon: 'fa fa-sitemap', routerLink: '/app/virtual-substation'},\n      {label: 'Partner', icon: 'fa fa-users', routerLink: '/app/partner'},\n      {label: 'Measurements', icon: 'fa fa-list-ul', routerLink: '/app/measurements'},\n      {label: 'Device Types', icon: 'fa fa-list-ul', routerLink: '/app/device-types'},\n      {label: 'Global settings', icon: 'fa fa-cog', routerLink: '/app/global-settings'}\n    ];\n  }\n\n}\n","module.exports = \".substation-form {\\r\\n    width: 960px;\\r\\n}\\r\\n.filter-items {\\r\\n    margin-left: 5px;\\r\\n}\\r\\n.partner-substation-list {\\r\\n    position: fixed;\\r\\n    width: 100vw;\\r\\n    height: 100vh;\\r\\n    z-index: 1;\\r\\n    opacity: 1;\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    background-color: #bfbfbfa1;\\r\\n}\\r\\n.custom-partner-modal {\\r\\n    background-color: rgba(255, 255, 255, 0.96);\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    -webkit-transform: translate(-50%, -50%);\\r\\n    transform: translate(-50%, -50%);\\r\\n    border-radius: 2px;\\r\\n    max-width: 96%;\\r\\n    max-height: 96%;\\r\\n    /*overflow-y: auto;*/\\r\\n}\\r\\n.partner-substation-list .close-icon {\\r\\n    position: absolute;\\r\\n    top: 10px;\\r\\n    right: 10px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.custom-partner-modal h6 {\\r\\n    background-color: #e0e0e085;\\r\\n    padding-left: 20px;\\r\\n    padding-top: 10px;\\r\\n    padding-bottom: 12px;\\r\\n}\\r\\n.custom-partner-modal .custom-modal-body {\\r\\n    padding: 0 20px 20px 20px;\\r\\n}\\r\\n.custom-modal-body .ui-dialog-buttonpane {\\r\\n    margin-top: 10px;\\r\\n    text-align: right\\r\\n}\\r\\n.custom-modal-body .ui-dialog-buttonpane  button.discard-btn {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL3N1YnN0YXRpb24tZm9ybS9zdWJzdGF0aW9uLWZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEI7QUFDQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUVBO0lBQ0ksZUFBZTtJQUNmLFlBQVk7SUFDWixhQUFhO0lBQ2IsVUFBVTtJQUNWLFVBQVU7SUFDVixPQUFPO0lBQ1AsTUFBTTtJQUNOLDJCQUEyQjtBQUMvQjtBQUVBO0lBQ0ksMkNBQTJDO0lBQzNDLGtCQUFrQjtJQUNsQixRQUFRO0lBQ1IsU0FBUztJQUNULHdDQUF3QztJQUN4QyxnQ0FBZ0M7SUFDaEMsa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysb0JBQW9CO0FBQ3hCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsU0FBUztJQUNULFdBQVc7SUFDWCxlQUFlO0FBQ25CO0FBRUE7SUFDSSwyQkFBMkI7SUFDM0Isa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixvQkFBb0I7QUFDeEI7QUFFQTtJQUNJLHlCQUF5QjtBQUM3QjtBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCO0FBQ0o7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJjbGllbnQvYXBwL21vZHVsZXMvY29tcG9uZW50cy9zdWJzdGF0aW9uLWZvcm0vc3Vic3RhdGlvbi1mb3JtLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3Vic3RhdGlvbi1mb3JtIHtcclxuICAgIHdpZHRoOiA5NjBweDtcclxufVxyXG4uZmlsdGVyLWl0ZW1zIHtcclxuICAgIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbn1cclxuXHJcbi5wYXJ0bmVyLXN1YnN0YXRpb24tbGlzdCB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB3aWR0aDogMTAwdnc7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgei1pbmRleDogMTtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2JmYmZiZmExO1xyXG59XHJcblxyXG4uY3VzdG9tLXBhcnRuZXItbW9kYWwge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjk2KTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gICAgbWF4LXdpZHRoOiA5NiU7XHJcbiAgICBtYXgtaGVpZ2h0OiA5NiU7XHJcbiAgICAvKm92ZXJmbG93LXk6IGF1dG87Ki9cclxufVxyXG4ucGFydG5lci1zdWJzdGF0aW9uLWxpc3QgLmNsb3NlLWljb24ge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAxMHB4O1xyXG4gICAgcmlnaHQ6IDEwcHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5jdXN0b20tcGFydG5lci1tb2RhbCBoNiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTBlMGUwODU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XHJcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAxMnB4O1xyXG59XHJcblxyXG4uY3VzdG9tLXBhcnRuZXItbW9kYWwgLmN1c3RvbS1tb2RhbC1ib2R5IHtcclxuICAgIHBhZGRpbmc6IDAgMjBweCAyMHB4IDIwcHg7XHJcbn1cclxuLmN1c3RvbS1tb2RhbC1ib2R5IC51aS1kaWFsb2ctYnV0dG9ucGFuZSB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHRcclxufVxyXG5cclxuLmN1c3RvbS1tb2RhbC1ib2R5IC51aS1kaWFsb2ctYnV0dG9ucGFuZSAgYnV0dG9uLmRpc2NhcmQtYnRuIHtcclxuICAgIG1hcmdpbi1yaWdodDogNXB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"substation-form mg-op-form mg-app-component\\\" *ngIf=\\\"isEnabled\\\" id=\\\"substation-form\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n            <div class=\\\"card-title\\\">\\n                <h4>Substation Details</h4>\\n                <span (click)=\\\"onCloseComponent()\\\"><i class=\\\"fa fa-2x fa-close\\\"></i></span>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-6\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary op-btn-save\\\" (click)=\\\"onSaveFormData()\\\"\\n                            [disabled]=\\\"!isFormChanged\\\">{{ (formMode)?'Add':'Save' }}</button>\\n                </div>\\n                <div class=\\\"ui-g-6\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success op-btn-details\\\" (click)=\\\"onBaysTable()\\\"\\n                            *ngIf=\\\"!formMode\\\">Bays</button>\\n                </div>\\n            </div>\\n            <div class=\\\"clearfix\\\"></div>\\n            <div class=\\\"form-content-wrap\\\">\\n                <div class=\\\"ui-g mg-group-box\\\">\\n                    <div class=\\\"mg-group-box-title\\\">\\n                        <h5 class=\\\"\\\">Partner</h5>\\n                    </div>\\n                    <div class=\\\"ui-g-9\\\">\\n                        <p>MrID : {{selectedPartnerRow.mrid}}</p>\\n                        <p>EicCode : {{selectedPartnerRow.eicCode}}</p>\\n                        <p>Description : {{selectedPartnerRow.description}}</p>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-info mg-show-popup-tbl\\\" (click)=\\\"onShowPartnersDialog()\\\">\\n                            <i class=\\\"fa fa-ellipsis-h\\\"></i>\\n                        </button>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g\\\">\\n                    <div class=\\\"ui-g-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"mrid\\\">MrID</label>\\n                            <input type=\\\"text\\\"  class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'mg-error':(mrID.trim().length == 0)}\\\"\\n                                   (ngModelChange)=\\\"mrIDChange($event)\\\"\\n                                   [ngModel]=\\\"mrID\\\" id=\\\"mrid\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"description\\\">Description</label>\\n                            <input name=\\\"description\\\" class=\\\"form-control\\\"\\n                                   (ngModelChange)=\\\"descriptionChange($event)\\\"\\n                                   [ngModel]=\\\"description\\\" id=\\\"description\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g mg-group-box\\\">\\n                    <div class=\\\"mg-group-box-title\\\">\\n                        <h5 class=\\\"\\\">Location</h5>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"latitude\\\">Latitude</label>\\n                            <input type=\\\"number\\\"  class=\\\"form-control\\\" (ngModelChange)=\\\"latitudeChange($event)\\\"\\n                                   [ngModel]=\\\"latitude\\\" id=\\\"latitude\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"longitude\\\">Longitude</label>\\n                            <input type=\\\"number\\\"  class=\\\"form-control\\\" (ngModelChange)=\\\"longitudeChange($event)\\\"\\n                                   [ngModel]=\\\"longitude\\\" id=\\\"longitude\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"altitude\\\">Altitude</label>\\n                            <input type=\\\"number\\\"  class=\\\"form-control\\\" (ngModelChange)=\\\"altitudeChange($event)\\\"\\n                                   [ngModel]=\\\"altitude\\\" id=\\\"altitude\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g mg-group-box\\\">\\n                    <div class=\\\"mg-group-box-title\\\">\\n                        <h5 class=\\\"\\\">Contacts</h5>\\n                    </div>\\n                    <div class=\\\"ui-g-12\\\">\\n                        <p-table #dt sortMode=\\\"multiple\\\"\\n                                 [value]=\\\"contacts\\\"\\n                                 [paginator]=\\\"true\\\" [rows]=\\\"5\\\"\\n                                 [totalRecords]=\\\"contacts.length\\\"\\n                                 selectionMode=\\\"multiple\\\"\\n                                 (onHeaderCheckboxToggle)=\\\"selectAllRows($event)\\\"\\n                                 (onRowSelect)=\\\"onRowSelect($event)\\\"\\n                                 (onRowUnselect)=\\\"onRowUnselect($event)\\\">\\n                            <ng-template pTemplate=\\\"header\\\">\\n                                <tr>\\n                                    <th *ngFor=\\\"let contactcol of contactCols\\\" [pSortableColumn]=\\\"contactcol.field\\\">\\n                                        {{contactcol.header}}\\n                                        <p-sortIcon [field]=\\\"contactcol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                                    </th>\\n                                    <th style=\\\"width:4em\\\"></th>\\n                                </tr>\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"body\\\" let-contact>\\n                                <tr>\\n                                    <td pEditableColumn *ngFor=\\\"let contactcol of contactCols\\\">\\n                                        <p-cellEditor>\\n                                            <ng-template pTemplate=\\\"input\\\">\\n                                                <input pInputText type=\\\"text\\\" *ngIf=\\\"contactcol.field != 'role'\\\"\\n                                                       [(ngModel)]=\\\"contact[contactcol.field]\\\"\\n                                                       (blur)=\\\"onContactEditComplete(contact)\\\"\\n                                                       (keydown.tab)=\\\"onContactEditComplete(contact)\\\"\\n                                                       (keydown.enter)=\\\"onContactEditComplete(contact)\\\">\\n                                                <p-dropdown [options]=\\\"contactRoles\\\" *ngIf=\\\"contactcol.field == 'role'\\\"\\n                                                            [(ngModel)]=\\\"contact[contactcol.field]\\\"\\n                                                            (onChange) = \\\"onContactEditComplete(contact)\\\"\\n                                                            [style]=\\\"{'width':'100%'}\\\">\\n                                                </p-dropdown>\\n                                            </ng-template>\\n                                            <ng-template pTemplate=\\\"output\\\">\\n                                                {{contact[contactcol.field]}}\\n                                            </ng-template>\\n                                        </p-cellEditor>\\n                                    </td>\\n                                    <td>\\n                                        <button pButton type=\\\"button\\\" icon=\\\"pi pi-times\\\" class=\\\"ui-button-danger\\\" (click)=\\\"onDeleteContact(contact)\\\"></button>\\n                                    </td>\\n                                </tr>\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"summary\\\" let-contact>\\n                                <div style=\\\"text-align:left\\\">\\n                                    <button type=\\\"button\\\" pButton icon=\\\"fa fa-plus\\\" (click)=\\\"onShowAddDialog()\\\" label=\\\"Add\\\"></button>\\n                                </div>\\n                            </ng-template>\\n                        </p-table>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g mg-group-box\\\">\\n                    <div class=\\\"mg-group-box-title\\\">\\n                        <h5 class=\\\"\\\">Address</h5>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"address-number\\\">Number</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"numberChange($event)\\\"\\n                                   [ngModel]=\\\"addressNumber\\\" id=\\\"address-number\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"street\\\">Street</label>\\n                            <input type=\\\"text\\\"  class=\\\"form-control\\\" (ngModelChange)=\\\"streetChange($event)\\\"\\n                                   [ngModel]=\\\"street\\\" id=\\\"street\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"city\\\">City</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"cityChange($event)\\\"\\n                                   [ngModel]=\\\"city\\\" id=\\\"city\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"locality\\\">Locality</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"localityChange($event)\\\"\\n                                   [ngModel]=\\\"locality\\\" id=\\\"locality\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"zip\\\">Zip</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"zipChange($event)\\\"\\n                                   [ngModel]=\\\"zip\\\" id=\\\"zip\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"country\\\">Country</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"countryChange($event)\\\"\\n                                   [ngModel]=\\\"country\\\" id=\\\"country\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"region\\\">Region</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"regionChange($event)\\\"\\n                                   [ngModel]=\\\"region\\\" id=\\\"region\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <p-confirmDialog header=\\\"Warning!\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n    <p-dialog header=\\\"Contact Details\\\" [(visible)]=\\\"displayAddModal\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\">\\n        <div class=\\\"ui-g\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nFName\\\">First Name</label>\\n                    <input [ngModel]=\\\"newContact.firstname\\\" (ngModelChange)=\\\"newFirstNameChange($event)\\\"\\n                           type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nFName\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"ui-g-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nSName\\\">Last Name</label>\\n                    <input [ngModel]=\\\"newContact.lastname\\\" (ngModelChange)=\\\"newLastNameChange($event)\\\"\\n                           type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nSName\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"ui-g-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nPhone\\\">Phone</label>\\n                    <input [ngModel]=\\\"newContact.phone\\\" (ngModelChange)=\\\"newPhoneChange($event)\\\"\\n                           type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nPhone\\\">\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"ui-g\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nFName\\\">Email</label>\\n                    <input [ngModel]=\\\"newContact.email\\\" (ngModelChange)=\\\"newEmailChange($event)\\\"\\n                           type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nEmail\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"ui-g-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nCRole\\\">Role</label>\\n                    <select class=\\\"form-control\\\" (ngModelChange)=\\\"newRoleChange($event)\\\"\\n                            [ngModel]=\\\"newContact.role\\\">\\n                        <option *ngFor=\\\"let contactrole of contactRoles\\\"  id=\\\"nCRole\\\">\\n                            {{contactrole.value}}\\n                        </option>\\n                    </select>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-g-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nUserID\\\">UserID</label>\\n                    <input [ngModel]=\\\"newContact.userid\\\" [ngClass]=\\\"{'mg-error':(newContact.userid.trim().length == 0)}\\\"\\n                           (ngModelChange)=\\\"newUserIDChange($event)\\\"\\n                           type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nUserID\\\">\\n                </div>\\n            </div>\\n        </div>\\n        <p-footer>\\n            <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n                <button type=\\\"button\\\" pButton icon=\\\"fa fa-close\\\" (click)=\\\"onDiscard()\\\" label=\\\"Discard\\\"></button>\\n                <button type=\\\"button\\\" pButton icon=\\\"fa fa-check\\\" (click)=\\\"onAddRow()\\\" label=\\\"Save\\\"></button>\\n            </div>\\n        </p-footer>\\n    </p-dialog>\\n</div>\\n\\n<div class=\\\"partner-substation-list\\\" [ngClass]=\\\"{'mg-hide':!displayPartnerModal}\\\" id=\\\"substation-partner-tbl\\\">\\n    <div class=\\\"custom-partner-modal\\\">\\n        <h6>Partner</h6>\\n        <span class=\\\"pi pi-times close-icon\\\" (click)=\\\"onDiscardPartner()\\\" ></span>\\n        <div class=\\\"custom-modal-body\\\">\\n            <div class=\\\"table-setting-bar\\\">\\n                <div class=\\\"dropdown mg-dropdown-area\\\" >\\n                    <div class=\\\"drop-down-backdrop\\\" (click)=\\\"isShowSetting=false\\\" *ngIf=\\\"isShowSetting\\\"></div>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle mg-toggle-btn\\\"\\n                            pTooltip=\\\"Column Setting\\\"  tooltipPosition=\\\"top\\\"\\n                            (click)=\\\"isShowSetting = !isShowSetting\\\">\\n                        <i class=\\\"fa fa-cog\\\"></i>\\n                    </button>\\n                    <div class=\\\"dropdown-menu mg-dropdown-menu\\\" *ngIf=\\\"isShowSetting\\\">\\n                        <div style=\\\"text-align:left\\\">\\n                            <table>\\n                                <thead>\\n                                <tr>\\n                                    <th>Visible</th>\\n                                    <th>Column</th>\\n                                </tr>\\n                                </thead>\\n                                <tbody>\\n                                <tr *ngFor=\\\"let partnercol of partnerCols\\\">\\n                                    <td><p-checkbox binary=\\\"true\\\" value=\\\"true\\\" [disabled]=\\\"partnercol.visibility && curSelColsCnt == 1\\\"\\n                                                    (onChange)=\\\"onChangeVisibility(partnercol)\\\"\\n                                                    [(ngModel)]=\\\"partnercol.visibility\\\">\\n                                    </p-checkbox></td>\\n                                    <td>{{partnercol.header}}</td>\\n                                </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n                <button class=\\\"btn filter-items\\\" (click)=\\\"onChangeFilter()\\\"\\n                        pTooltip=\\\"{{ (isHideFilter)?'On Filter':'Off Filter' }}\\\"  tooltipPosition=\\\"top\\\"\\n                        [ngClass]=\\\"{'btn-primary':!isHideFilter, 'btn-secondary':isHideFilter}\\\" >\\n                    <i class=\\\"fa fa-filter\\\"></i>\\n                </button>\\n                <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <p-table #dt sortMode=\\\"multiple\\\"\\n                     [value]=\\\"partners\\\"\\n                     [totalRecords]=\\\"partners.length\\\"\\n                     [paginator]=\\\"true\\\" [rows]=\\\"5\\\"\\n                     [(selection)]=\\\"selectedPartnerRow\\\"\\n                     selectionMode=\\\"single\\\"\\n                     [resizableColumns]=\\\"true\\\"\\n                     columnResizeMode=\\\"expand\\\"\\n                     (onColResize) = \\\"onColResize($event)\\\">\\n                <ng-template pTemplate=\\\"header\\\">\\n                    <tr>\\n                        <th class=\\\"th-id-wrap\\\"\\n                            *ngFor=\\\"let partnercol of partnerCols\\\"\\n                            [ngClass]=\\\"{'mg-hide': !partnercol.visibility}\\\"\\n                            [pSortableColumn]=\\\" (partnercol.group != '')? partnercol.group + '.' + partnercol.field: partnercol.field\\\" pResizableColumn>\\n                            {{partnercol.header}}\\n                            <p-sortIcon [field]=\\\"partnercol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                        </th>\\n                    </tr>\\n                    <tr [ngClass]=\\\"{'mg-hide':isHideFilter}\\\">\\n                        <th *ngFor=\\\"let partnercol of partnerCols\\\"\\n                            [ngClass]=\\\"{'mg-hide':!partnercol.visibility}\\\"\\n                            [ngSwitch]=\\\"partnercol.field\\\" >\\n                            <input *ngSwitchCase=\\\"partnercol.field\\\" pInputText type=\\\"text\\\"\\n                                   (input)=\\\"onTblFilter($event, partnercol, dt)\\\">\\n                        </th>\\n                    </tr>\\n                </ng-template>\\n                <ng-template pTemplate=\\\"body\\\" let-partner>\\n                    <tr [pSelectableRow]=\\\"partner\\\">\\n                        <td *ngFor=\\\"let partnercol of partnerCols\\\"\\n                            [ngClass]=\\\"{'mg-hide':!partnercol.visibility}\\\">\\n                            {{ (partnercol.group != '')? partner[partnercol.group][partnercol.field]: partner[partnercol.field]}}\\n                        </td>\\n                    </tr>\\n                </ng-template>\\n            </p-table>\\n            <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n                <button type=\\\"button\\\" class=\\\"discard-btn\\\" pButton icon=\\\"fa fa-close\\\" (click)=\\\"onDiscardPartner()\\\" label=\\\"Discard\\\"></button>\\n                <button type=\\\"button\\\" pButton icon=\\\"fa fa-check\\\" (click)=\\\"onSelectPartner()\\\" label=\\\"Save\\\"></button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import {Component, HostListener, Input, OnInit, ViewChild} from '@angular/core';\nimport {SubFormService} from \"../../../core/services/sub-form.service\";\nimport {UserRole} from \"../../../core/interfaces/user-role\";\nimport {AddressRole} from \"../../../core/interfaces/address-role\";\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\nimport {UpdateSubstationService} from \"../../../core/services/update-substation.service\";\nimport {ExpandingBayService} from \"../../../core/services/expanding-bay.service\";\nimport {ScrollMovingService} from \"../../../core/services/scroll-moving.service\";\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {ConfirmationService, SelectItem} from \"primeng/api\";\nimport {forkJoin} from \"rxjs\";\nimport {SettingService} from \"../../../core/services/setting.service\";\n\ndeclare function checkTable(tblId, tdInfo): any;\ndeclare function initTable(tblId): any;\ndeclare function readTable(tblId): any;\ndeclare function updateTableWidth(tblName, tdInfo): any;\ndeclare var config;\n\n@Component({\n    selector: 'app-substation-form',\n    templateUrl: './substation-form.component.html',\n    styleUrls: ['./substation-form.component.css'],\n    providers: [ConfirmationService]\n})\nexport class SubstationFormComponent implements OnInit {\n\n    formMode: boolean; //True = >add mode, False=> edit mode\n    isEnabled: boolean;\n    formData: any;\n\n    partnerMrID: string;\n    mrID: string;\n    description: string;\n\n    latitude: number;\n    longitude: number;\n    altitude: number;\n\n    addressNumber: string;\n    street: string;\n    city: string;\n    locality: string;\n    zip: string;\n    country: string;\n    region: string;\n\n    contactRoles: SelectItem[];\n    addressRole: string[];\n\n    isFormChanged: boolean;\n    accessToken: string;\n    apiURL: string;\n\n    newContact: Contact;\n    contactCols: any[];\n    contacts: any[];\n    partnerCols: any[];\n    addressCols: any[];\n    displayAddModal: boolean;\n    displayPartnerModal: boolean;\n\n    partners: Array<Partner>;\n    selectedPartnerRow: Partner;\n    contentLoaded: boolean;\n    isHideFilter: boolean;\n\n    isShowSetting: boolean;\n    curSelColsCnt: number;\n    tableId: string;\n    tableSettingName: string;\n\n    constructor(private httpService: HttpServiceHelper,\n                private settingService: SettingService,\n                private subFormService: SubFormService,\n                private scrollService: ScrollMovingService,\n                private updateSubstationService: UpdateSubstationService,\n                private expandBayService: ExpandingBayService,\n                private navService: NavigationService,\n                private confirmationService: ConfirmationService) {\n\n        this.isFormChanged = false;\n        this.contentLoaded = false;\n        this.isHideFilter = false;\n        this.partners = [];\n        this.contactRoles = [];\n        this.addressRole = [];\n        this.displayAddModal = false;\n        this.displayPartnerModal = false;\n        this.contactCols = [\n            {field: 'firstname', header: 'First Name'},\n            {field: 'lastname', header: 'Last Name'},\n            {field: 'phone', header: 'Phone'},\n            {field: 'email', header: 'Email'},\n            {field: 'role', header: 'Role'},\n            {field: 'userid', header: 'UserID'},\n        ];\n\n        this.tableId = 'substation-partner-tbl';\n        this.tableSettingName = this.tableId +'_setting';\n        this.isShowSetting = false;\n\n        this.partnerCols = [\n            {field: 'mrid', header: 'MrId', group:''},\n            {field: 'eicCode', header: 'EicCode', group:''},\n            {field: 'role', header: 'Role', group:'role'},\n            {field: 'description', header: 'Description', group:''},\n            {field: 'number', header: 'Address.Number', group:'registeredseat'},\n            {field: 'street', header: 'Address.Street', group:'registeredseat'},\n            {field: 'city', header: 'Address.City', group:'registeredseat'},\n            {field: 'locality', header: 'Address.Locality', group:'registeredseat'},\n            {field: 'zip', header: 'Address.Zip', group:'registeredseat'},\n            {field: 'country', header: 'Address.Country', group:'registeredseat'},\n            {field: 'region', header: 'Address.Region', group:'registeredseat'},\n        ];\n\n        this.newContact = {firstname: '', lastname: '', phone: '', email: '', role: UserRole.manager, userid: ''};\n        this.selectedPartnerRow = {mrid:'', eicCode:'',contacts:[], addresses:[],users:[],description:''};\n\n        for (let item in UserRole) {\n            if (isNaN(Number(item))) {\n                this.contactRoles.push({label: UserRole[item], value: UserRole[item]});\n            }\n        }\n\n        for (let item in AddressRole) {\n            if (isNaN(Number(item))) {\n                this.addressRole.push(AddressRole[item]);\n            }\n        }\n\n        this.formMode = true;\n        this.isEnabled = false;\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n        this.initFormFields();\n        this.apiURL = `${config.client_info.apiURL.serverURL}/substations`;\n    }\n\n    ngOnInit() {\n        this.subFormService.getSubFormInfo().subscribe(subFormInfo => {\n            this.isEnabled = subFormInfo.showMode;\n            this.formData = subFormInfo.value;\n            this.formMode = subFormInfo.type;\n            if (this.formMode) { //Add Mode\n                this.initFormData();\n            }\n            this.setSubDetails();\n        })\n    }\n\n    setSubDetails() {\n        this.partnerMrID = this.formData.partnermrid;\n        this.mrID = this.formData.mrid;\n        this.description = this.formData.description;\n\n        this.latitude = this.formData.location.latitude;\n        this.longitude = this.formData.location.longitude;\n        this.altitude = this.formData.location.altitude;\n\n        this.contacts = JSON.parse(JSON.stringify(this.formData.contacts)); //Array copy\n\n        this.addressNumber = this.formData.address.number;\n        this.street = this.formData.address.street;\n        this.city = this.formData.address.city;\n        this.locality = this.formData.address.locality;\n        this.zip = this.formData.address.zip;\n        this.country = this.formData.address.country;\n        this.region = this.formData.address.region;\n\n        this.isFormChanged  = false;\n        this.getPartners();\n    }\n\n    initFormFields() {\n\n        this.partnerMrID = this.mrID = this.description = '';\n        this.latitude = this.longitude = this.altitude = 0;\n        this.contacts = [];\n        this.addressNumber = this.street = this.city = this.locality = this.zip = this.country = this.region = '';\n    }\n\n    initFormData() {\n        this.formData = {\n            partnermrid: '',\n            mrid: '',\n            location: {latitude: 0, longitude: 0, altitude: 0},\n            contacts: [],\n            address: {\n                number: '',\n                street: '',\n                city: '',\n                locality: '',\n                zip: '',\n                country: '',\n                region: '',\n                // role: AddressRole.registered,\n            },\n            description: '',\n        }\n    }\n\n    onBaysTable() {\n        let self = this;\n        this.navService.setNavInfo('bay-list',true, this.formData.mrid);\n        setTimeout(function () {\n            self.expandBayService.setBayStatus(true, self.formData.mrid);\n            self.scrollService.setMovedScroll(true,'bay-list');\n        },100)\n    }\n\n    onSaveFormData() {\n        if (this.checkValidation()) {\n            let postBody = {\n                partnermrid: this.partnerMrID,\n                mrid: this.mrID,\n                location: {\n                    latitude: this.latitude,\n                    longitude: this.longitude,\n                    altitude: this.altitude\n                },\n                contacts: this.contacts,\n                address: {\n                    number: this.addressNumber,\n                    street: this.street,\n                    city: this.city,\n                    locality: this.locality,\n                    zip: this.zip,\n                    country: this.country,\n                    region: this.region,\n                    // role: this.role,\n                },\n                description: this.description,\n            };\n\n            if (this.formMode) { //Add mode\n                this.selectedPartnerRow = {mrid:'', eicCode:'',contacts:[], addresses:[],users:[],description:''};\n                this.httpService.httpPostRequest(this.accessToken, this.apiURL, postBody)\n                    .subscribe((res: any) => {\n                        this.formData = postBody;\n                        this.contacts = [];\n                        this.updateSubstationService.setSubstationInfo(true,null, postBody);\n                        this.initFormData();\n                        this.initFormFields();\n                        this.isFormChanged = false;\n                        console.log('Success in add substation', postBody);\n                    }, err => {\n                        this.formData = {};\n                        this.contacts = [];\n                        console.log('Error in add substation', err);\n                    });\n            } else { //Edit mode\n                let subEditURL = this.apiURL + '/' +this.formData.mrid;\n                this.httpService.httpPutRequest(this.accessToken, subEditURL, postBody)\n                    .subscribe((res: any) => {\n                        this.updateSubstationService.setSubstationInfo(false,this.formData.mrid, postBody);\n                        this.formData = postBody;\n                        this.contacts = JSON.parse(JSON.stringify(this.formData.contacts));\n                        this.isFormChanged = false;\n                        console.log('Success in update substations', postBody);\n                    }, err => {\n                        this.formData = {};\n                        this.isFormChanged = false;\n                        console.log('Error in update substations', err);\n                    });\n            }\n\n        }\n    }\n\n    isChanged() {\n        let opSaveBtn:any;\n        opSaveBtn = document.getElementsByClassName('op-btn-save');\n        if(opSaveBtn){\n            let disabledBtnCnt = 0;\n            for(let i = 0 ;i<opSaveBtn.length; i++){\n                if(opSaveBtn[i].disabled){\n                    disabledBtnCnt ++;\n                }\n            }\n            if(disabledBtnCnt != opSaveBtn.length){\n                return true;\n            }\n        }else{\n            return false;\n        }\n    }\n\n    closeMe() {\n        this.navService.setNavInfo('sub-list',true, '');\n        const htmlElem = document.getElementsByClassName('mg-width-virtual');\n        htmlElem[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\n        this.initFormFields();\n        this.initFormData();\n    }\n\n    onCloseComponent() {\n        let self = this;\n        if(this.isChanged()){\n            this.confirmationService.confirm({\n                message: 'Changes you made may not be saved.',\n                accept: () => {\n                    self.closeMe();\n                },\n                reject: () => {\n\n                }\n            });\n        }else{\n            this.closeMe();\n        }\n    }\n\n    checkValidation() {\n        if (this.partnerMrID.trim() == \"\") {\n            return false;\n        }\n        if (this.mrID.trim() == \"\") {\n            return false;\n        }\n        return true;\n    }\n\n    compareContacts(x: Contact, y: Contact) {\n        return (x.firstname == y.firstname &&\n            x.lastname == y.lastname &&\n            x.phone == y.phone &&\n            x.email == y.email &&\n            x.userid == y.userid &&\n            x.role == y.role);\n    }\n\n    checkFormChange() {\n        this.isFormChanged = (this.partnerMrID != this.formData.partnermrid ||\n            this.mrID != this.formData.mrid ||\n            this.longitude != this.formData.location.longitude ||\n            this.latitude != this.formData.location.latitude ||\n            this.altitude != this.formData.location.altitude ||\n            this.contacts.length != this.formData.contacts.length ||\n            this.addressNumber != this.formData.address.number ||\n            this.street != this.formData.address.street ||\n            this.city != this.formData.address.city ||\n            this.locality != this.formData.address.locality ||\n            this.zip != this.formData.address.zip ||\n            this.country != this.formData.address.country ||\n            this.region != this.formData.address.region ||\n            // this.role != this.formData.address.role ||\n            this.description != this.formData.description);\n\n        let sameObjCnt = 0;\n        let formContacts = this.formData.contacts;\n        for (let i = 0; i < this.contacts.length; i++) {\n            for (let j = 0; j < formContacts.length; j++) {\n                if(this.compareContacts(this.contacts[i], formContacts[j])){\n                    sameObjCnt ++;\n                }\n            }\n        }\n\n        this.isFormChanged = this.isFormChanged || (sameObjCnt < this.contacts.length );\n    }\n\n    partnerMrIDChange(newVal: string) {\n        this.partnerMrID = newVal;\n        this.checkFormChange();\n    }\n\n    mrIDChange(newVal: string) {\n        this.mrID = newVal;\n        this.checkFormChange();\n    }\n\n    descriptionChange(newVal: string) {\n        this.description = newVal;\n        this.checkFormChange();\n    }\n\n\n    zipChange(newVal: string) {\n        this.zip = newVal;\n        this.checkFormChange();\n    }\n\n    streetChange(newVal: string) {\n        this.street = newVal;\n        this.checkFormChange();\n    }\n\n    numberChange(newVal: string) {\n        this.addressNumber = newVal;\n        this.checkFormChange();\n    }\n\n    cityChange(newVal: string) {\n        this.city = newVal;\n        this.checkFormChange();\n    }\n\n    latitudeChange(newVal: number) {\n        this.latitude = newVal;\n        this.checkFormChange();\n    }\n\n    longitudeChange(newVal: number) {\n        this.longitude = newVal;\n        this.checkFormChange();\n    }\n\n    altitudeChange(newVal: number) {\n        this.altitude = newVal;\n        this.checkFormChange();\n    }\n\n    localityChange(newVal: string) {\n        this.locality = newVal;\n        this.checkFormChange();\n    }\n\n    countryChange(newVal: string) {\n        this.country = newVal;\n        this.checkFormChange();\n    }\n\n    regionChange(newVal: string) {\n        this.region = newVal;\n        this.checkFormChange();\n    }\n\n    newFirstNameChange(newVal: string) {\n        this.newContact.firstname = newVal;\n    }\n\n    newLastNameChange(newVal: string) {\n        this.newContact.lastname = newVal;\n    }\n\n    newPhoneChange(newVal: string) {\n        this.newContact.phone = newVal;\n    }\n\n    newEmailChange(newVal: string) {\n        this.newContact.email = newVal;\n    }\n\n    newUserIDChange(newVal: string) {\n        this.newContact.userid = newVal;\n    }\n\n    newRoleChange(newVal: string) {\n        this.newContact.role = newVal;\n    }\n\n    onShowAddDialog() {\n        this.displayAddModal = true;\n        this.newContact = {firstname: '', lastname: '', phone: '', email: '', role: UserRole.manager, userid: ''};\n    }\n\n    onDiscard() {\n        this.displayAddModal = false;\n    }\n\n    onAddRow() {\n        if (this.newContact.userid.trim() == \"\") return;\n        this.contacts.push(this.newContact);\n        this.displayAddModal = false;\n        this.newContact = {firstname: '', lastname: '', phone: '', email: '', role: UserRole.manager, userid: ''};\n        this.isFormChanged = true;\n        this.checkFormChange();\n    }\n\n    onContactEditComplete(newVal){\n        this.checkFormChange();\n    }\n\n    onDeleteContact(contactVal: Contact) {\n        let indexof = this.contacts.indexOf(contactVal);\n        if(indexof>-1){\n            this.contacts.splice(indexof,1)\n        }\n        this.checkFormChange();\n    }\n\n    onShowPartnersDialog() {\n        this.initTableSetting();\n        this.displayPartnerModal = true;\n    }\n\n    onRowSelect(event) {\n        console.log(this.selectedPartnerRow);\n    }\n\n    onRowUnselect(event) {\n        console.log(this.selectedPartnerRow);\n    }\n\n    selectAllRows(event) {\n        if (event.checked) {\n            // alert('all rows selected');\n            console.log(this.selectedPartnerRow);\n        } else {\n            // alert('all rows diselected');\n\n        }\n    }\n\n    getPartners() {\n        let partnerIdList = [];\n        let promiseList = [];\n        let partnerListURL = `${config.client_info.apiURL.serverURL}/partners`;\n        this.httpService.httpGetRequest(this.accessToken, partnerListURL).subscribe((res: any) => {\n            partnerIdList = res;\n            for (let i = 0; i < partnerIdList.length; i++) {\n                let partnerDetailURL = partnerListURL + '/' + partnerIdList[i];\n                promiseList.push(this.httpService.httpGetRequest(this.accessToken, partnerDetailURL));\n            }\n            if (partnerIdList.length > 0) {\n                forkJoin(promiseList).subscribe(results => {\n                    this.partners = results;\n                    for(let j = 0; j<results.length; j++) {\n                        if(results[j].mrid == this.partnerMrID) {\n                            this.selectedPartnerRow = results[j];\n                        }\n                    }\n                    this.contentLoaded = true;\n                }, err => {\n                    console.log(\"Can't get partners list\", err);\n                    this.partners = [];\n                    this.selectedPartnerRow = {mrid:'', eicCode:'',contacts:[], addresses:[],users:[],description:''};\n                    this.contentLoaded = true;\n                })\n            } else {\n                console.log(\"Can't get partners list\");\n                this.partners = [];\n                this.selectedPartnerRow = {mrid:'', eicCode:'',contacts:[], addresses:[],users:[],description:''};\n                this.contentLoaded = true;\n            }\n        }, error => {\n            if (error.error instanceof ErrorEvent) {\n                alert(error.error.message);\n            } else {\n                alert(`Backend returned code ${error.status}, body was: ${JSON.stringify(error.error)}`);\n            }\n            console.error(\"Can't get partners list\", error);\n            this.partners = [];\n            this.selectedPartnerRow = {mrid:'', eicCode:'',contacts:[], addresses:[],users:[],description:''};\n            this.contentLoaded = true;\n        });\n    }\n\n    onDiscardPartner() {\n        this.displayPartnerModal = false;\n    }\n\n    onSelectPartner() {\n        if (this.selectedPartnerRow && this.selectedPartnerRow.mrid){\n            this.displayPartnerModal = false;\n            this.partnerMrID = this.selectedPartnerRow.mrid;\n            this.isFormChanged = true;\n            this.checkFormChange();\n        }\n    }\n\n    initTableSetting() {\n        readTable(this.tableId);\n        let tblSettingStr = localStorage.getItem(this.tableSettingName);\n        let settingInfo: any;\n        if(tblSettingStr) {\n            settingInfo = JSON.parse(tblSettingStr);\n        } else {\n            //Write New Setting\n            settingInfo = { filter: true};\n            settingInfo.visible = [\n                'MrId','EicCode','Role','Description',\n                'Address.Number','Address.Street','Address.City',\n                'Address.Locality','Address.Zip','Address.Country','Address.Region'\n            ];\n            localStorage.setItem(this.tableSettingName, JSON.stringify(settingInfo));\n        }\n\n        this.isHideFilter = !settingInfo.filter;\n        this.partnerCols = this.checkColVisibility(this.partnerCols, settingInfo.visible);\n        this.curSelColsCnt = settingInfo.visible.length;\n    }\n\n    checkColVisibility(colList: any, visibleColList: any) {\n\n        for(let i = 0; i<colList.length; i++) {\n            colList[i].visibility = visibleColList.indexOf(colList[i].header)>-1;\n        }\n        return colList;\n    }\n\n    onChangeVisibility(item) {\n        checkTable(this.tableId, item);\n        if(item.visibility){\n            this.curSelColsCnt += 1;\n        } else {\n            this.curSelColsCnt -= 1;\n        }\n        this.settingService.setSettingInfo(this.tableSettingName,'visibility', {col:item.header,st:item.visibility})\n    }\n\n    onTblFilter(ev, item, dt) {\n        let field = (item.group != '')? item.group + '.' + item.field: item.field;\n        dt.filter(ev.target.value,  field, item.filterMatchMode);\n    }\n\n    onChangeFilter() {\n        this.isHideFilter = !this.isHideFilter;\n        this.settingService.setSettingInfo(this.tableSettingName,'filter', this.isHideFilter);\n    }\n\n    onColResize($ev) {\n        updateTableWidth(this.tableId, $ev);\n    }\n}\n","module.exports = \".substation-list {\\r\\n    width: 2270px;\\r\\n    display: inline-block;\\r\\n}\\r\\n.th-location-wrap {\\r\\n    width: 240px;\\r\\n}\\r\\n.th-id-wrap:nth-child(3) {\\r\\n    width: 135px;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL3N1YnN0YXRpb24tdGFibGUvc3Vic3RhdGlvbi10YWJsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHFCQUFxQjtBQUN6QjtBQUNBO0lBQ0ksWUFBWTtBQUNoQjtBQUNBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJjbGllbnQvYXBwL21vZHVsZXMvY29tcG9uZW50cy9zdWJzdGF0aW9uLXRhYmxlL3N1YnN0YXRpb24tdGFibGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zdWJzdGF0aW9uLWxpc3Qge1xyXG4gICAgd2lkdGg6IDIyNzBweDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG4udGgtbG9jYXRpb24td3JhcCB7XHJcbiAgICB3aWR0aDogMjQwcHg7XHJcbn1cclxuLnRoLWlkLXdyYXA6bnRoLWNoaWxkKDMpIHtcclxuICAgIHdpZHRoOiAxMzVweDtcclxufVxyXG5cclxuIl19 */\"","module.exports = \"<div class=\\\"substation-list card mg-app-component\\\" id=\\\"{{tableId}}\\\">\\n    <div class=\\\"content-loading\\\" *ngIf=\\\"!contentLoaded\\\">\\n        <img src=\\\"../../../../assets/img/loading.svg\\\">\\n    </div>\\n    <div class=\\\"card-header\\\">\\n        <div class=\\\"card-title\\\">\\n            <h4>Substations</h4>\\n        </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"table-setting-bar\\\">\\n            <div class=\\\"dropdown mg-dropdown-area\\\" >\\n                <div class=\\\"drop-down-backdrop\\\" (click)=\\\"isShowSetting=false\\\" *ngIf=\\\"isShowSetting\\\"></div>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle mg-toggle-btn\\\"\\n                        pTooltip=\\\"Column Setting\\\"  tooltipPosition=\\\"top\\\"\\n                        (click)=\\\"isShowSetting = !isShowSetting\\\">\\n                    <i class=\\\"fa fa-cog\\\"></i>\\n                </button>\\n                <div class=\\\"dropdown-menu mg-dropdown-menu\\\" *ngIf=\\\"isShowSetting\\\">\\n                    <div style=\\\"text-align:left\\\">\\n                        <table>\\n                            <thead>\\n                            <tr>\\n                                <th>Visible</th>\\n                                <th>Column</th>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let subcol of subCols\\\">\\n                                    <td><p-checkbox binary=\\\"true\\\" value=\\\"true\\\" [disabled]=\\\"subcol.visibility && curSelColsCnt == 1\\\"\\n                                                    (onChange)=\\\"onChangeVisibility(subcol)\\\"\\n                                                    [(ngModel)]=\\\"subcol.visibility\\\">\\n                                    </p-checkbox></td>\\n                                    <td>{{subcol.header}}</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n            <button class=\\\"btn filter-items\\\" (click)=\\\"onChangeFilter()\\\"\\n                    pTooltip=\\\"{{ (isHideFilter)?'On Filter':'Off Filter' }}\\\"  tooltipPosition=\\\"top\\\"\\n                    [ngClass]=\\\"{'btn-primary':!isHideFilter, 'btn-secondary':isHideFilter}\\\" >\\n                <i class=\\\"fa fa-filter\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-danger delete-item\\\"\\n                    pTooltip=\\\"Delete Rows\\\"  tooltipPosition=\\\"top\\\"\\n                    (click)=\\\"onDeleteRows()\\\" [disabled]=\\\"selectedRows.length == 0\\\">\\n                <i class=\\\"fa fa-trash\\\"></i>\\n            </button>\\n            <button class=\\\"btn btn-primary add-item\\\" (click)=\\\"onAddNewSubstation()\\\">+ Add New</button>\\n            <div class=\\\"clearfix\\\"></div>\\n        </div>\\n        <p-table #dt sortMode=\\\"multiple\\\"\\n                 [value]=\\\"substations\\\"\\n                 [totalRecords]=\\\"substations.length\\\"\\n                 [paginator]=\\\"true\\\"\\n                 [rows]=\\\"10\\\"\\n                 [(selection)]=\\\"selectedRows\\\"\\n                 selectionMode=\\\"multiple\\\"\\n                 [resizableColumns]=\\\"true\\\"\\n                 columnResizeMode=\\\"expand\\\"\\n                 (onColResize) = \\\"onColResize($event)\\\"\\n                 (onHeaderCheckboxToggle)=\\\"selectAllRows($event)\\\"\\n                 (onRowSelect)=\\\"onRowSelect($event)\\\"\\n                 (onRowUnselect)=\\\"onRowUnselect($event)\\\">\\n            <ng-template pTemplate=\\\"header\\\" let-columns>\\n                <tr>\\n                    <th class=\\\"mg-item-checkbox\\\">\\n                        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\\n                    </th>\\n                    <th class=\\\"th-id-wrap\\\"\\n                        *ngFor=\\\"let subcol of subCols\\\"\\n                        [ngClass]=\\\"{'mg-hide': !subcol.visibility}\\\"\\n                        [pSortableColumn]=\\\" (subcol.group != '')? subcol.group + '.' + subcol.field: subcol.field\\\" pResizableColumn>\\n                        {{subcol.header}}\\n                        <p-sortIcon [field]=\\\"subcol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                    </th>\\n                </tr>\\n                <tr [ngClass]=\\\"{'mg-hide':isHideFilter}\\\">\\n                    <th></th>\\n                    <th *ngFor=\\\"let subcol of subCols\\\"\\n                        [ngClass]=\\\"{'mg-hide':!subcol.visibility}\\\"\\n                        [ngSwitch]=\\\"subcol.field\\\" >\\n                        <input *ngSwitchCase=\\\"subcol.field\\\" pInputText type=\\\"text\\\"\\n                               (input)=\\\"onTblFilter($event, subcol, dt)\\\">\\n                    </th>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"body\\\" let-substation>\\n                <tr>\\n                    <td>\\n                        <p-tableCheckbox [value]=\\\"substation\\\"></p-tableCheckbox>\\n                    </td>\\n                    <td *ngFor=\\\"let subcol of subCols\\\"  (click)=\\\"editSubstation(substation)\\\"\\n                        [ngClass]=\\\"{'mg-hide':!subcol.visibility}\\\">\\n                        {{ (subcol.group != '')? substation[subcol.group][subcol.field]: substation[subcol.field]}}\\n                    </td>\\n                </tr>\\n            </ng-template>\\n        </p-table>\\n    </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {HttpServiceHelper} from '../../../core/http/HttpServiceHelper';\nimport {SubFormService} from \"../../../core/services/sub-form.service\";\nimport {ScrollMovingService} from \"../../../core/services/scroll-moving.service\";\nimport {UpdateSubstationService} from \"../../../core/services/update-substation.service\";\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {forkJoin} from \"rxjs\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {AuthService} from \"../../../core/services/auth.service\";\nimport {SettingService} from \"../../../core/services/setting.service\";\n\ndeclare function checkTable(tblId, tdInfo): any;\n\ndeclare function initTable(tblId): any;\n\ndeclare function readTable(tblId): any;\n\ndeclare function updateTableWidth(tblName, tdInfo): any;\n\ndeclare var config;\n\n@Component({\n    selector: 'app-substation-table',\n    templateUrl: './substation-table.component.html',\n    styleUrls: ['./substation-table.component.css']\n})\n\nexport class SubstationTableComponent implements OnInit {\n    substations: Array<Substation>;\n    subCols: any[];\n\n    contactCols: any[];\n    selectedRows: Array<Substation>;\n\n    accessToken: string;\n    apiURL: string;\n\n    contentLoaded: boolean;\n    isHideFilter: boolean;\n\n    isShowSetting: boolean;\n    curSelColsCnt: number;\n    tableId: string;\n    tableSettingName: string;\n\n    constructor(\n        private authService: AuthService,\n        private subFormService: SubFormService,\n        private httpService: HttpServiceHelper,\n        private scrollService: ScrollMovingService,\n        private settingService: SettingService,\n        private updateSubstationService: UpdateSubstationService,\n        private naveService: NavigationService) {\n\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n        this.contentLoaded = false;\n        this.substations = [];\n        this.apiURL = `${config.client_info.apiURL.serverURL}/substations`;\n        this.selectedRows = [];\n\n        this.tableId = 'substation-list';\n        this.tableSettingName = this.tableId + '_setting';\n        this.isShowSetting = false;\n        this.subCols = [\n            {field: 'partnermrid', header: 'PMrId', group: ''},\n            {field: 'mrid', header: 'MrId', group: ''},\n            {field: 'description', header: 'Description', group: ''},\n            {field: 'latitude', header: 'Location.Lat', group: 'location'},\n            {field: 'longitude', header: 'Location.Lon', group: 'location'},\n            {field: 'altitude', header: 'Location.Alt', group: 'location'},\n            {field: 'number', header: 'Address.Number', group: 'address'},\n            {field: 'street', header: 'Address.Street', group: 'address'},\n            {field: 'city', header: 'Address.City', group: 'address'},\n            {field: 'locality', header: 'Address.Locality', group: 'address'},\n            {field: 'zip', header: 'Address.Zip', group: 'address'},\n            {field: 'country', header: 'Address.Country', group: 'address'},\n            {field: 'region', header: 'Address.Region', group: 'address'},\n        ];\n    }\n\n    ngOnInit() {\n        this.getSubstations();\n        this.initTableSetting();\n        //Getting table setting from localstorage.\n        this.updateSubstationService.getSubstationInfo().subscribe(updateInfo => {\n            if (updateInfo.mode) {\n                console.log(updateInfo.newSub);\n                this.substations.push(updateInfo.newSub);\n            } else {\n                for (let i = 0; i < this.substations.length; i++) {\n                    if (this.substations[i].mrid == updateInfo.mrid) {\n                        this.substations[i] = updateInfo.newSub;\n                    }\n                }\n            }\n        });\n\n    }\n\n    getSubstations() {\n        let subIdList = [];\n        let promiseList = [];\n        this.httpService.httpGetRequest(this.accessToken, this.apiURL).subscribe((res: any) => {\n            subIdList = res;\n            for (let i = 0; i < subIdList.length; i++) {\n                let subDetailURL = this.apiURL + '/' + subIdList[i];\n                promiseList.push(this.httpService.httpGetRequest(this.accessToken, subDetailURL));\n            }\n            if (subIdList.length > 0) {\n                forkJoin(promiseList).subscribe(results => {\n                    this.substations = results;\n                    this.contentLoaded = true;\n                }, err => {\n                    console.log(\"Can't get substation list\", err);\n                    this.substations = [];\n                    this.contentLoaded = true;\n                })\n            } else {\n                console.log(\"Can't get substation list\");\n                alert('No substation data is accessible');\n                this.authService.setAuthInfo({login_st:false}); ////888888888888888888888888\n                this.substations = [];\n                this.contentLoaded = true;\n\n            }\n        }, (error: HttpErrorResponse) => {\n            this.httpErrorHandler(error);\n            console.error(\"Can't get substation list\", error);\n            this.substations = [];\n            this.contentLoaded = true;\n        });\n    }\n\n    httpErrorHandler(error: any) {\n        console.error(error);\n        switch (error.status) {\n            case 400:\n                console.log('Bad Request');\n                break;\n            case 401:\n                this.authService.setAuthInfo({login_st: false});\n                break;\n            default:\n                alert(`Backend returned code ${error.status}, body was: ${error.error.Message}`);\n        }\n    }\n\n    onDeleteRows() {\n        let subIds = [];\n        let promiseList = [];\n        for (let i = 0; i < this.selectedRows.length; i++) {\n            let subDeleteURL = this.apiURL + '/' + this.selectedRows[i].mrid;\n            subIds.push(this.selectedRows[i].mrid);\n            promiseList.push(this.httpService.httpDeleteRequest(this.accessToken, subDeleteURL));\n        }\n        if (subIds.length > 0) {\n            forkJoin(promiseList).subscribe(results => {\n                let leftSubstations = [];\n                for (let i = 0; i < this.substations.length; i++) {\n                    if (subIds.indexOf(this.substations[i].mrid) < 0) {\n                        leftSubstations.push(this.substations[i]);\n                    }\n                }\n                this.substations = leftSubstations;\n                this.selectedRows = [];\n                this.contentLoaded = true;\n                console.log('Success in substation Deleting', results);\n            }, err => {\n                this.substations = [];\n                this.contentLoaded = true;\n                console.error('Error in substations Deleting', err);\n            })\n        } else {\n            this.substations = [];\n            this.contentLoaded = true;\n            console.log('Error in substations Deleting due to the Empty String');\n        }\n    }\n\n    editSubstation(sub) {\n        let self = this;\n        this.naveService.setNavInfo('sub-form', true, sub.mrid);\n        setTimeout(function () {\n            self.subFormService.setSubFormInfo(false, sub, true);\n            self.scrollService.setMovedScroll(true, 'substation-form');\n        }, 100);\n\n    }\n\n    onAddNewSubstation() {\n        let self = this;\n        this.naveService.setNavInfo('sub-form', true, '');\n        setTimeout(function () {\n            self.subFormService.setSubFormInfo(true, null, true);\n            self.scrollService.setMovedScroll(true, 'substation-form');\n        }, 100);\n\n    }\n\n    onRowSelect(event) {\n        console.log(this.selectedRows);\n    }\n\n    onRowUnselect(event) {\n        console.log(this.selectedRows);\n    }\n\n    selectAllRows(event) {\n        if (event.checked) {\n            // alert('all rows selected');\n            console.log(this.selectedRows);\n        } else {\n            // alert('all rows diselected');\n\n        }\n    }\n\n    // ====================================================\n    initTableSetting() {\n\n        readTable(this.tableId);\n        let tblSettingStr = localStorage.getItem(this.tableSettingName);\n        let settingInfo: any;\n        if (tblSettingStr) {\n            settingInfo = JSON.parse(tblSettingStr);\n        } else {\n            //Write New Setting\n            settingInfo = {filter: true};\n            settingInfo.visible = [\n                'PMrId', 'MrId', 'Description',\n                'Location.Lat', 'Location.Lon', 'Location.Alt',\n                'Address.Number', 'Address.Street', 'Address.City',\n                'Address.Locality', 'Address.Zip', 'Address.Country', 'Address.Region'\n            ];\n            localStorage.setItem(this.tableSettingName, JSON.stringify(settingInfo));\n        }\n\n        this.isHideFilter = !settingInfo.filter;\n        this.subCols = this.checkColVisibility(this.subCols, settingInfo.visible);\n        this.curSelColsCnt = settingInfo.visible.length;\n    }\n\n    checkColVisibility(colList: any, visibleColList: any) {\n\n        for (let i = 0; i < colList.length; i++) {\n            colList[i].visibility = visibleColList.indexOf(colList[i].header) > -1;\n        }\n        return colList;\n    }\n\n    onChangeVisibility(item) {\n        checkTable(this.tableId, item);\n        if (item.visibility) {\n            this.curSelColsCnt += 1;\n        } else {\n            this.curSelColsCnt -= 1;\n        }\n        this.settingService.setSettingInfo(this.tableSettingName, 'visibility', {col: item.header, st: item.visibility})\n    }\n\n    onTblFilter(ev, item, dt) {\n        let field = (item.group != '') ? item.group + '.' + item.field : item.field;\n        dt.filter(ev.target.value, field, item.filterMatchMode);\n    }\n\n    onChangeFilter() {\n        this.isHideFilter = !this.isHideFilter;\n        this.settingService.setSettingInfo(this.tableSettingName, 'filter', this.isHideFilter);\n    }\n\n    onColResize($ev) {\n        updateTableWidth(this.tableId, $ev);\n    }\n}\n","module.exports = \".substation-form {\\r\\n    width: 960px;\\r\\n}\\r\\n.filter-items {\\r\\n    margin-left: 5px;\\r\\n}\\r\\n.partner-substation-list {\\r\\n    position: fixed;\\r\\n    width: 100vw;\\r\\n    height: 100vh;\\r\\n    z-index: 1;\\r\\n    opacity: 1;\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    background-color: #bfbfbfa1;\\r\\n}\\r\\n.custom-partner-modal {\\r\\n    background-color: rgba(255, 255, 255, 0.96);\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    -webkit-transform: translate(-50%, -50%);\\r\\n    transform: translate(-50%, -50%);\\r\\n    border-radius: 2px;\\r\\n    max-width: 96%;\\r\\n    max-height: 96%;\\r\\n    /*overflow-y: auto;*/\\r\\n}\\r\\n.partner-substation-list .close-icon {\\r\\n    position: absolute;\\r\\n    top: 10px;\\r\\n    right: 10px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.custom-partner-modal h6 {\\r\\n    background-color: #e0e0e085;\\r\\n    padding-left: 20px;\\r\\n    padding-top: 10px;\\r\\n    padding-bottom: 12px;\\r\\n}\\r\\n.custom-partner-modal .custom-modal-body {\\r\\n    padding: 0 20px 20px 20px;\\r\\n}\\r\\n.custom-modal-body .ui-dialog-buttonpane {\\r\\n    margin-top: 10px;\\r\\n    text-align: right\\r\\n}\\r\\n.custom-modal-body .ui-dialog-buttonpane  button.discard-btn {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL3ZpcnR1YWwtc3Vic3RhdGlvbi1mb3JtL3ZpcnR1YWwtc3Vic3RhdGlvbi1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7QUFFQTtJQUNJLGVBQWU7SUFDZixZQUFZO0lBQ1osYUFBYTtJQUNiLFVBQVU7SUFDVixVQUFVO0lBQ1YsT0FBTztJQUNQLE1BQU07SUFDTiwyQkFBMkI7QUFDL0I7QUFFQTtJQUNJLDJDQUEyQztJQUMzQyxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFNBQVM7SUFDVCx3Q0FBd0M7SUFDeEMsZ0NBQWdDO0lBQ2hDLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsZUFBZTtJQUNmLG9CQUFvQjtBQUN4QjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxXQUFXO0lBQ1gsZUFBZTtBQUNuQjtBQUVBO0lBQ0ksMkJBQTJCO0lBQzNCLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsb0JBQW9CO0FBQ3hCO0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQjtBQUNKO0FBRUE7SUFDSSxpQkFBaUI7QUFDckIiLCJmaWxlIjoiY2xpZW50L2FwcC9tb2R1bGVzL2NvbXBvbmVudHMvdmlydHVhbC1zdWJzdGF0aW9uLWZvcm0vdmlydHVhbC1zdWJzdGF0aW9uLWZvcm0uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zdWJzdGF0aW9uLWZvcm0ge1xyXG4gICAgd2lkdGg6IDk2MHB4O1xyXG59XHJcbi5maWx0ZXItaXRlbXMge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDVweDtcclxufVxyXG5cclxuLnBhcnRuZXItc3Vic3RhdGlvbi1saXN0IHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHdpZHRoOiAxMDB2dztcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICB6LWluZGV4OiAxO1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmZiZmJmYTE7XHJcbn1cclxuXHJcbi5jdXN0b20tcGFydG5lci1tb2RhbCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOTYpO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgICBtYXgtd2lkdGg6IDk2JTtcclxuICAgIG1heC1oZWlnaHQ6IDk2JTtcclxuICAgIC8qb3ZlcmZsb3cteTogYXV0bzsqL1xyXG59XHJcbi5wYXJ0bmVyLXN1YnN0YXRpb24tbGlzdCAuY2xvc2UtaWNvbiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDEwcHg7XHJcbiAgICByaWdodDogMTBweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmN1c3RvbS1wYXJ0bmVyLW1vZGFsIGg2IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlMGUwZTA4NTtcclxuICAgIHBhZGRpbmctbGVmdDogMjBweDtcclxuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEycHg7XHJcbn1cclxuXHJcbi5jdXN0b20tcGFydG5lci1tb2RhbCAuY3VzdG9tLW1vZGFsLWJvZHkge1xyXG4gICAgcGFkZGluZzogMCAyMHB4IDIwcHggMjBweDtcclxufVxyXG4uY3VzdG9tLW1vZGFsLWJvZHkgLnVpLWRpYWxvZy1idXR0b25wYW5lIHtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodFxyXG59XHJcblxyXG4uY3VzdG9tLW1vZGFsLWJvZHkgLnVpLWRpYWxvZy1idXR0b25wYW5lICBidXR0b24uZGlzY2FyZC1idG4ge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"substation-form mg-op-form mg-app-component\\\" *ngIf=\\\"isEnabled\\\" id=\\\"substation-form\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n            <div class=\\\"card-title\\\">\\n                <h4>Virtual Substation Details</h4>\\n                <span (click)=\\\"onCloseComponent()\\\"><i class=\\\"fa fa-2x fa-close\\\"></i></span>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-6\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary op-btn-save\\\" (click)=\\\"onSaveFormData()\\\"\\n                            [disabled]=\\\"!isFormChanged\\\">{{ (formMode) ? 'Add' : 'Save' }}</button>\\n                </div>\\n            </div>\\n            <div class=\\\"clearfix\\\"></div>\\n            <div class=\\\"form-content-wrap\\\">\\n                <div class=\\\"ui-g mg-group-box\\\">\\n                    <div class=\\\"mg-group-box-title\\\">\\n                        <h5 class=\\\"\\\">Partner</h5>\\n                    </div>\\n                    <div class=\\\"ui-g-9\\\">\\n                        <p>MrID : {{selectedPartnerRow.mrid}}</p>\\n                        <p>EicCode : {{selectedPartnerRow.eicCode}}</p>\\n                        <p>Description : {{selectedPartnerRow.description}}</p>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-info mg-show-popup-tbl\\\" (click)=\\\"onShowPartnersDialog()\\\">\\n                            <i class=\\\"fa fa-ellipsis-h\\\"></i>\\n                        </button>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g\\\">\\n                    <div class=\\\"ui-g-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"mrid\\\">MrID</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'mg-error':(mrID.trim().length == 0)}\\\"\\n                                   (ngModelChange)=\\\"mrIDChange($event)\\\"\\n                                   [ngModel]=\\\"mrID\\\" id=\\\"mrid\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"description\\\">Description</label>\\n                            <input name=\\\"description\\\" class=\\\"form-control\\\"\\n                                   (ngModelChange)=\\\"descriptionChange($event)\\\"\\n                                   [ngModel]=\\\"description\\\" id=\\\"description\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g mg-group-box\\\">\\n                    <div class=\\\"mg-group-box-title\\\">\\n                        <h5 class=\\\"\\\">Substations</h5>\\n                    </div>\\n                    <div class=\\\"ui-g\\\">\\n                        <div class=\\\"ui-g-12\\\">\\n                            <p-table #dt sortMode=\\\"multiple\\\"\\n                                     [value]=\\\"realSubList\\\"\\n                                     [paginator]=\\\"true\\\" [rows]=\\\"5\\\"\\n                                     [totalRecords]=\\\"realSubList.length\\\"\\n                                     selectionMode=\\\"single\\\"\\n                                     [(selection)]=\\\"curSelRealSub\\\">\\n                                <ng-template pTemplate=\\\"header\\\">\\n                                    <tr>\\n                                        <th *ngFor=\\\"let subcol of subCols\\\" [pSortableColumn]=\\\"subcol.field\\\">\\n                                            {{subcol.header}}\\n                                            <p-sortIcon [field]=\\\"subcol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                                        </th>\\n                                        <th style=\\\"width:4em\\\"></th>\\n                                    </tr>\\n                                </ng-template>\\n                                <ng-template pTemplate=\\\"body\\\" let-substation>\\n                                    <tr [pSelectableRow]=\\\"substation\\\">\\n                                        <td>{{substation['substationmrid']}}</td>\\n                                        <td>{{substation['role']}}</td>\\n                                        <td>\\n                                            <button pButton type=\\\"button\\\"\\n                                                    icon=\\\"pi pi-times\\\"\\n                                                    class=\\\"ui-button-danger\\\"\\n                                                    (click)=\\\"onDeleteSub(substation)\\\"></button>\\n                                        </td>\\n                                    </tr>\\n                                </ng-template>\\n                                <ng-template pTemplate=\\\"summary\\\">\\n                                    <div class=\\\"ui-g\\\">\\n                                        <div class=\\\"ui-g-6 text-left\\\">\\n                                            <button pButton type=\\\"button\\\"\\n                                                    icon=\\\"pi pi-plus\\\"\\n                                                    label=\\\"Add\\\"\\n                                                    (click)=\\\"onShowRealSubForm()\\\"></button>\\n                                        </div>\\n                                    </div>\\n                                </ng-template>\\n                            </p-table>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g mg-group-box\\\">\\n                    <div class=\\\"mg-group-box-title\\\">\\n                        <h5 class=\\\"\\\">Location</h5>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"latitude\\\">Latitude</label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"latitudeChange($event)\\\"\\n                                   [ngModel]=\\\"latitude\\\" id=\\\"latitude\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"longitude\\\">Longitude</label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"longitudeChange($event)\\\"\\n                                   [ngModel]=\\\"longitude\\\" id=\\\"longitude\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"altitude\\\">Altitude</label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"altitudeChange($event)\\\"\\n                                   [ngModel]=\\\"altitude\\\" id=\\\"altitude\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g mg-group-box\\\">\\n                    <div class=\\\"mg-group-box-title\\\">\\n                        <h5 class=\\\"\\\">Contacts</h5>\\n                    </div>\\n                    <div class=\\\"ui-g-12\\\">\\n                        <p-table #dt sortMode=\\\"multiple\\\"\\n                                 [value]=\\\"contacts\\\"\\n                                 [paginator]=\\\"true\\\" [rows]=\\\"5\\\"\\n                                 [totalRecords]=\\\"contacts.length\\\"\\n                                 selectionMode=\\\"multiple\\\"\\n                                 (onHeaderCheckboxToggle)=\\\"selectAllRows($event)\\\"\\n                                 (onRowSelect)=\\\"onRowSelect($event)\\\"\\n                                 (onRowUnselect)=\\\"onRowUnselect($event)\\\">\\n                            <ng-template pTemplate=\\\"header\\\">\\n                                <tr>\\n                                    <th *ngFor=\\\"let contactcol of contactCols\\\" [pSortableColumn]=\\\"contactcol.field\\\">\\n                                        {{contactcol.header}}\\n                                        <p-sortIcon [field]=\\\"contactcol.field\\\"\\n                                                    ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                                    </th>\\n                                    <th style=\\\"width:4em\\\"></th>\\n                                </tr>\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"body\\\" let-contact>\\n                                <tr>\\n                                    <td pEditableColumn *ngFor=\\\"let contactcol of contactCols\\\">\\n                                        <p-cellEditor>\\n                                            <ng-template pTemplate=\\\"input\\\">\\n                                                <input pInputText type=\\\"text\\\" *ngIf=\\\"contactcol.field != 'role'\\\"\\n                                                       [(ngModel)]=\\\"contact[contactcol.field]\\\"\\n                                                       (blur)=\\\"onContactEditComplete(contact)\\\"\\n                                                       (keydown.tab)=\\\"onContactEditComplete(contact)\\\"\\n                                                       (keydown.enter)=\\\"onContactEditComplete(contact)\\\">\\n                                                <p-dropdown [options]=\\\"contactRoles\\\" *ngIf=\\\"contactcol.field == 'role'\\\"\\n                                                            [(ngModel)]=\\\"contact[contactcol.field]\\\"\\n                                                            (onChange)=\\\"onContactEditComplete(contact)\\\"\\n                                                            [style]=\\\"{'width':'100%'}\\\">\\n                                                </p-dropdown>\\n                                            </ng-template>\\n                                            <ng-template pTemplate=\\\"output\\\">\\n                                                {{contact[contactcol.field]}}\\n                                            </ng-template>\\n                                        </p-cellEditor>\\n                                    </td>\\n                                    <td>\\n                                        <button pButton type=\\\"button\\\" icon=\\\"pi pi-times\\\" class=\\\"ui-button-danger\\\"\\n                                                (click)=\\\"onDeleteContact(contact)\\\"></button>\\n                                    </td>\\n                                </tr>\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"summary\\\" let-contact>\\n                                <div style=\\\"text-align:left\\\">\\n                                    <button type=\\\"button\\\" pButton icon=\\\"fa fa-plus\\\" (click)=\\\"onShowAddDialog()\\\"\\n                                            label=\\\"Add\\\"></button>\\n                                </div>\\n                            </ng-template>\\n                        </p-table>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g mg-group-box\\\">\\n                    <div class=\\\"mg-group-box-title\\\">\\n                        <h5 class=\\\"\\\">Address</h5>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"address-number\\\">Number</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"numberChange($event)\\\"\\n                                   [ngModel]=\\\"addressNumber\\\" id=\\\"address-number\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"street\\\">Street</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"streetChange($event)\\\"\\n                                   [ngModel]=\\\"street\\\" id=\\\"street\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"city\\\">City</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"cityChange($event)\\\"\\n                                   [ngModel]=\\\"city\\\" id=\\\"city\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"locality\\\">Locality</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"localityChange($event)\\\"\\n                                   [ngModel]=\\\"locality\\\" id=\\\"locality\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"zip\\\">Zip</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"zipChange($event)\\\"\\n                                   [ngModel]=\\\"zip\\\" id=\\\"zip\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"country\\\">Country</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"countryChange($event)\\\"\\n                                   [ngModel]=\\\"country\\\" id=\\\"country\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"region\\\">Region</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"regionChange($event)\\\"\\n                                   [ngModel]=\\\"region\\\" id=\\\"region\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <p-confirmDialog header=\\\"Warning!\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n    <p-dialog header=\\\"Contact Details\\\" [(visible)]=\\\"displayAddModal\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\"\\n              [modal]=\\\"true\\\">\\n        <div class=\\\"ui-g\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nFName\\\">First Name</label>\\n                    <input [ngModel]=\\\"newContact.firstname\\\" (ngModelChange)=\\\"newFirstNameChange($event)\\\"\\n                           type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nFName\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"ui-g-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nSName\\\">Last Name</label>\\n                    <input [ngModel]=\\\"newContact.lastname\\\" (ngModelChange)=\\\"newLastNameChange($event)\\\"\\n                           type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nSName\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"ui-g-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nPhone\\\">Phone</label>\\n                    <input [ngModel]=\\\"newContact.phone\\\" (ngModelChange)=\\\"newPhoneChange($event)\\\"\\n                           type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nPhone\\\">\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"ui-g\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nFName\\\">Email</label>\\n                    <input [ngModel]=\\\"newContact.email\\\" (ngModelChange)=\\\"newEmailChange($event)\\\"\\n                           type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nEmail\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"ui-g-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nCRole\\\">Role</label>\\n                    <select class=\\\"form-control\\\" (ngModelChange)=\\\"newRoleChange($event)\\\"\\n                            [ngModel]=\\\"newContact.role\\\">\\n                        <option *ngFor=\\\"let contactrole of contactRoles\\\" id=\\\"nCRole\\\">\\n                            {{contactrole.value}}\\n                        </option>\\n                    </select>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-g-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"nUserID\\\">UserID</label>\\n                    <input [ngModel]=\\\"newContact.userid\\\" [ngClass]=\\\"{'mg-error':(newContact.userid.trim().length == 0)}\\\"\\n                           (ngModelChange)=\\\"newUserIDChange($event)\\\"\\n                           type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nUserID\\\">\\n                </div>\\n            </div>\\n        </div>\\n        <p-footer>\\n            <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n                <button type=\\\"button\\\" pButton icon=\\\"fa fa-close\\\" (click)=\\\"onDiscard()\\\" label=\\\"Discard\\\"></button>\\n                <button type=\\\"button\\\" pButton icon=\\\"fa fa-check\\\" (click)=\\\"onAddRow()\\\" label=\\\"Save\\\"></button>\\n            </div>\\n        </p-footer>\\n    </p-dialog>\\n    <app-physical-substation-form\\n            (addNewItem)=\\\"onAddRealSub($event)\\\"\\n            (closeForm)=\\\"onDiscardRealSub()\\\"\\n            [displayModal]=\\\"displayRealSubAddModal\\\">\\n    </app-physical-substation-form>\\n</div>\\n\\n<div class=\\\"partner-substation-list\\\" [ngClass]=\\\"{'mg-hide':!displayPartnerModal}\\\" id=\\\"substation-partner-tbl\\\">\\n    <div class=\\\"custom-partner-modal\\\">\\n        <h6>Partner</h6>\\n        <span class=\\\"pi pi-times close-icon\\\" (click)=\\\"onDiscardPartner()\\\"></span>\\n        <div class=\\\"custom-modal-body\\\">\\n            <div class=\\\"table-setting-bar\\\">\\n                <div class=\\\"dropdown mg-dropdown-area\\\">\\n                    <div class=\\\"drop-down-backdrop\\\" (click)=\\\"isShowSetting=false\\\" *ngIf=\\\"isShowSetting\\\"></div>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle mg-toggle-btn\\\"\\n                            pTooltip=\\\"Column Setting\\\" tooltipPosition=\\\"top\\\"\\n                            (click)=\\\"isShowSetting = !isShowSetting\\\">\\n                        <i class=\\\"fa fa-cog\\\"></i>\\n                    </button>\\n                    <div class=\\\"dropdown-menu mg-dropdown-menu\\\" *ngIf=\\\"isShowSetting\\\">\\n                        <div style=\\\"text-align:left\\\">\\n                            <table>\\n                                <thead>\\n                                <tr>\\n                                    <th>Visible</th>\\n                                    <th>Column</th>\\n                                </tr>\\n                                </thead>\\n                                <tbody>\\n                                <tr *ngFor=\\\"let partnercol of partnerCols\\\">\\n                                    <td>\\n                                        <p-checkbox binary=\\\"true\\\" value=\\\"true\\\"\\n                                                    [disabled]=\\\"partnercol.visibility && curSelColsCnt == 1\\\"\\n                                                    (onChange)=\\\"onChangeVisibility(partnercol)\\\"\\n                                                    [(ngModel)]=\\\"partnercol.visibility\\\">\\n                                        </p-checkbox>\\n                                    </td>\\n                                    <td>{{partnercol.header}}</td>\\n                                </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n                <button class=\\\"btn filter-items\\\" (click)=\\\"onChangeFilter()\\\"\\n                        pTooltip=\\\"{{ (isHideFilter)?'On Filter':'Off Filter' }}\\\" tooltipPosition=\\\"top\\\"\\n                        [ngClass]=\\\"{'btn-primary':!isHideFilter, 'btn-secondary':isHideFilter}\\\">\\n                    <i class=\\\"fa fa-filter\\\"></i>\\n                </button>\\n                <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <p-table #dt sortMode=\\\"multiple\\\"\\n                     [value]=\\\"partners\\\"\\n                     [totalRecords]=\\\"partners.length\\\"\\n                     [paginator]=\\\"true\\\" [rows]=\\\"5\\\"\\n                     [(selection)]=\\\"selectedPartnerRow\\\"\\n                     selectionMode=\\\"single\\\"\\n                     [resizableColumns]=\\\"true\\\"\\n                     columnResizeMode=\\\"expand\\\"\\n                     (onColResize)=\\\"onColResize($event)\\\">\\n                <ng-template pTemplate=\\\"header\\\">\\n                    <tr>\\n                        <th class=\\\"th-id-wrap\\\"\\n                            *ngFor=\\\"let partnercol of partnerCols\\\"\\n                            [ngClass]=\\\"{'mg-hide': !partnercol.visibility}\\\"\\n                            [pSortableColumn]=\\\" (partnercol.group != '')? partnercol.group + '.' + partnercol.field: partnercol.field\\\"\\n                            pResizableColumn>\\n                            {{partnercol.header}}\\n                            <p-sortIcon [field]=\\\"partnercol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\n                        </th>\\n                    </tr>\\n                    <tr [ngClass]=\\\"{'mg-hide':isHideFilter}\\\">\\n                        <th *ngFor=\\\"let partnercol of partnerCols\\\"\\n                            [ngClass]=\\\"{'mg-hide':!partnercol.visibility}\\\"\\n                            [ngSwitch]=\\\"partnercol.field\\\">\\n                            <input *ngSwitchCase=\\\"partnercol.field\\\" pInputText type=\\\"text\\\"\\n                                   (input)=\\\"onTblFilter($event, partnercol, dt)\\\">\\n                        </th>\\n                    </tr>\\n                </ng-template>\\n                <ng-template pTemplate=\\\"body\\\" let-partner>\\n                    <tr [pSelectableRow]=\\\"partner\\\">\\n                        <td *ngFor=\\\"let partnercol of partnerCols\\\"\\n                            [ngClass]=\\\"{'mg-hide':!partnercol.visibility}\\\">\\n                            {{ (partnercol.group != '') ? partner[partnercol.group][partnercol.field] : partner[partnercol.field]}}\\n                        </td>\\n                    </tr>\\n                </ng-template>\\n            </p-table>\\n            <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n                <button type=\\\"button\\\" class=\\\"discard-btn\\\" pButton icon=\\\"fa fa-close\\\" (click)=\\\"onDiscardPartner()\\\"\\n                        label=\\\"Discard\\\"></button>\\n                <button type=\\\"button\\\" pButton icon=\\\"fa fa-check\\\" (click)=\\\"onSelectPartner()\\\" label=\\\"Save\\\"></button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ConfirmationService, SelectItem} from \"primeng/api\";\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\nimport {SettingService} from \"../../../core/services/setting.service\";\nimport {SubFormService} from \"../../../core/services/sub-form.service\";\nimport {ScrollMovingService} from \"../../../core/services/scroll-moving.service\";\nimport {UpdateSubstationService} from \"../../../core/services/update-substation.service\";\nimport {ExpandingBayService} from \"../../../core/services/expanding-bay.service\";\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {UserRole} from \"../../../core/interfaces/user-role\";\nimport {AddressRole} from \"../../../core/interfaces/address-role\";\nimport {forkJoin} from \"rxjs\";\n\ndeclare function checkTable(tblId, tdInfo): any;\ndeclare function initTable(tblId): any;\ndeclare function readTable(tblId): any;\ndeclare function updateTableWidth(tblName, tdInfo): any;\ndeclare var config;\n\n@Component({\n    selector: 'app-virtual-substation-form',\n    templateUrl: './virtual-substation-form.component.html',\n    styleUrls: ['./virtual-substation-form.component.css'],\n    providers: [ConfirmationService]\n})\nexport class VirtualSubstationFormComponent implements OnInit {\n\n    formMode: boolean; //True = >add mode, False=> edit mode\n    isEnabled: boolean;\n    formData: any;\n\n    partnerMrID: string;\n    mrID: string;\n    description: string;\n\n    latitude: number;\n    longitude: number;\n    altitude: number;\n\n    addressNumber: string;\n    street: string;\n    city: string;\n    locality: string;\n    zip: string;\n    country: string;\n    region: string;\n\n    contactRoles: SelectItem[];\n    addressRole: string[];\n\n    isFormChanged: boolean;\n    accessToken: string;\n    apiURL: string;\n\n    newContact: Contact;\n    contactCols: any[];\n    contacts: any[];\n    partnerCols: any[];\n    addressCols: any[];\n    displayAddModal: boolean;\n    displayRealSubAddModal: boolean;\n    displayPartnerModal: boolean;\n\n    partners: Array<Partner>;\n    selectedPartnerRow: Partner;\n    contentLoaded: boolean;\n    isHideFilter: boolean;\n\n    isShowSetting: boolean;\n    curSelColsCnt: number;\n    tableId: string;\n    tableSettingName: string;\n\n    realSubList: any[];\n    subCols: any[];\n    curSelRealSub: string;\n\n    constructor(private httpService: HttpServiceHelper,\n                private settingService: SettingService,\n                private subFormService: SubFormService,\n                private scrollService: ScrollMovingService,\n                private updateSubstationService: UpdateSubstationService,\n                private expandBayService: ExpandingBayService,\n                private navService: NavigationService,\n                private confirmationService: ConfirmationService) {\n\n        this.isFormChanged = false;\n        this.contentLoaded = false;\n        this.isHideFilter = false;\n        this.partners = [];\n        this.contactRoles = [];\n        this.addressRole = [];\n        this.displayAddModal = false;\n        this.displayPartnerModal = false;\n        this.displayRealSubAddModal = false;\n        this.contactCols = [\n            {field: 'firstname', header: 'First Name'},\n            {field: 'lastname', header: 'Last Name'},\n            {field: 'phone', header: 'Phone'},\n            {field: 'email', header: 'Email'},\n            {field: 'role', header: 'Role'},\n            {field: 'userid', header: 'UserID'},\n        ];\n\n        this.tableId = 'substation-partner-tbl';\n        this.tableSettingName = this.tableId + '_setting';\n        this.isShowSetting = false;\n\n        this.partnerCols = [\n            {field: 'mrid', header: 'MrId', group: ''},\n            {field: 'eicCode', header: 'EicCode', group: ''},\n            {field: 'role', header: 'Role', group: 'role'},\n            {field: 'description', header: 'Description', group: ''},\n            {field: 'number', header: 'Address.Number', group: 'registeredseat'},\n            {field: 'street', header: 'Address.Street', group: 'registeredseat'},\n            {field: 'city', header: 'Address.City', group: 'registeredseat'},\n            {field: 'locality', header: 'Address.Locality', group: 'registeredseat'},\n            {field: 'zip', header: 'Address.Zip', group: 'registeredseat'},\n            {field: 'country', header: 'Address.Country', group: 'registeredseat'},\n            {field: 'region', header: 'Address.Region', group: 'registeredseat'},\n        ];\n\n        this.newContact = {firstname: '', lastname: '', phone: '', email: '', role: UserRole.manager, userid: ''};\n        this.selectedPartnerRow = {mrid: '', eicCode: '', contacts: [], addresses: [], users: [], description: ''};\n\n        for (let item in UserRole) {\n            if (isNaN(Number(item))) {\n                this.contactRoles.push({label: UserRole[item], value: UserRole[item]});\n            }\n        }\n\n        for (let item in AddressRole) {\n            if (isNaN(Number(item))) {\n                this.addressRole.push(AddressRole[item]);\n            }\n        }\n\n        this.formMode = true;\n        this.isEnabled = false;\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n        this.initFormFields();\n        this.apiURL = `${config.client_info.apiURL.serverURL}/virtual_substations`;\n\n        this.realSubList = [];\n        this.curSelRealSub = '';\n        this.subCols = [\n            {field: 'substationmrid', header: 'MrID'},\n            {field: 'role', header: 'Role'},\n        ];\n    }\n\n    ngOnInit() {\n        this.subFormService.getSubFormInfo().subscribe(subFormInfo => {\n            this.isEnabled = subFormInfo.showMode;\n            this.formData = subFormInfo.value;\n            this.formMode = subFormInfo.type;\n            if (this.formMode) { //Add Mode\n                this.initFormData();\n            }\n            this.setSubDetails();\n        })\n    }\n\n    setSubDetails() {\n        this.partnerMrID = this.formData.partnermrid;\n        this.mrID = this.formData.mrid;\n        this.description = this.formData.description;\n\n        this.latitude = this.formData.location.latitude;\n        this.longitude = this.formData.location.longitude;\n        this.altitude = this.formData.location.altitude;\n\n        this.contacts = JSON.parse(JSON.stringify(this.formData.contacts)); //Array copy\n\n        this.addressNumber = this.formData.address.number;\n        this.street = this.formData.address.street;\n        this.city = this.formData.address.city;\n        this.locality = this.formData.address.locality;\n        this.zip = this.formData.address.zip;\n        this.country = this.formData.address.country;\n        this.region = this.formData.address.region;\n\n        this.realSubList = JSON.parse(JSON.stringify(this.formData.substations));\n\n        this.isFormChanged = false;\n        this.getPartners();\n    }\n\n    initFormFields() {\n        this.partnerMrID = this.mrID = this.description = '';\n        this.latitude = this.longitude = this.altitude = 0;\n        this.contacts = [];\n        this.addressNumber = this.street = this.city = this.locality = this.zip = this.country = this.region = '';\n        this.selectedPartnerRow = {\n            mrid: '',\n            eicCode: '',\n            contacts: [],\n            addresses: [],\n            users: [],\n            description: ''\n        };\n        this.realSubList = [];\n    }\n\n    initFormData() {\n        this.formData = {\n            partnermrid: '',\n            mrid: '',\n            location: {latitude: 0, longitude: 0, altitude: 0},\n            contacts: [],\n            address: {\n                number: '',\n                street: '',\n                city: '',\n                locality: '',\n                zip: '',\n                country: '',\n                region: '',\n                // role: AddressRole.registered,\n            },\n            substations: [],\n            description: '',\n        }\n    }\n\n    onBaysTable() {\n        let self = this;\n        this.navService.setNavInfo('bay-list', true, this.formData.mrid);\n        setTimeout(function () {\n            self.expandBayService.setBayStatus(true, self.formData.mrid);\n            self.scrollService.setMovedScroll(true, 'bay-list');\n        }, 100)\n    }\n\n    onSaveFormData() {\n        if (this.checkValidation()) {\n            let postBody = {\n                partnermrid: this.partnerMrID,\n                mrid: this.mrID,\n                location: {\n                    latitude: this.latitude,\n                    longitude: this.longitude,\n                    altitude: this.altitude\n                },\n                contacts: this.contacts,\n                address: {\n                    number: this.addressNumber,\n                    street: this.street,\n                    city: this.city,\n                    locality: this.locality,\n                    zip: this.zip,\n                    country: this.country,\n                    region: this.region,\n                    // role: this.role,\n                },\n                description: this.description,\n                substations: this.realSubList\n            };\n\n            if (this.formMode) { //Add mode\n                this.httpService.httpPostRequest(this.accessToken, this.apiURL, postBody)\n                    .subscribe((res: any) => {\n                        this.formData = postBody;\n                        this.updateSubstationService.setSubstationInfo(true, null, postBody);\n                        this.initFormData();\n                        this.initFormFields();\n                        this.isFormChanged = false;\n                        console.log('Success in add substation', postBody);\n                    }, err => {\n                        this.formData = {};\n                        console.log('Error in add substation', err);\n                    });\n            } else { //Edit mode\n                let subEditURL = this.apiURL + '/' + this.formData.mrid;\n                this.httpService.httpPutRequest(this.accessToken, subEditURL, postBody)\n                    .subscribe((res: any) => {\n                        this.updateSubstationService.setSubstationInfo(false, this.formData.mrid, postBody);\n                        this.formData = postBody;\n                        this.isFormChanged = false;\n                        console.log('Success in update substations', postBody);\n                    }, err => {\n                        this.formData = {};\n                        this.isFormChanged = false;\n                        console.log('Error in update substations', err);\n                    });\n            }\n\n        }\n    }\n\n    isChanged() {\n        let opSaveBtn: any;\n        opSaveBtn = document.getElementsByClassName('op-btn-save');\n        if (opSaveBtn) {\n            let disabledBtnCnt = 0;\n            for (let i = 0; i < opSaveBtn.length; i++) {\n                if (opSaveBtn[i].disabled) {\n                    disabledBtnCnt++;\n                }\n            }\n            if (disabledBtnCnt != opSaveBtn.length) {\n                return true;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    closeMe() {\n        this.navService.setNavInfo('sub-list', true, '');\n        const htmlElem = document.getElementsByClassName('mg-width-virtual');\n        htmlElem[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\n        this.initFormFields();\n        this.initFormData();\n    }\n\n    onCloseComponent() {\n        let self = this;\n        if (this.isChanged()) {\n            this.confirmationService.confirm({\n                message: 'Changes you made may not be saved.',\n                accept: () => {\n                    self.closeMe();\n                },\n                reject: () => {\n\n                }\n            });\n        } else {\n            this.closeMe();\n        }\n    }\n\n    checkValidation() {\n        if (this.partnerMrID.trim() == \"\") {\n            return false;\n        }\n        if (this.mrID.trim() == \"\") {\n            return false;\n        }\n        return true;\n    }\n\n    compareContacts(x: Contact, y: Contact) {\n        return (x.firstname == y.firstname &&\n            x.lastname == y.lastname &&\n            x.phone == y.phone &&\n            x.email == y.email &&\n            x.userid == y.userid &&\n            x.role == y.role);\n    }\n\n    checkFormChange() {\n        this.isFormChanged = (this.partnerMrID != this.formData.partnermrid ||\n            this.mrID != this.formData.mrid ||\n            this.longitude != this.formData.location.longitude ||\n            this.latitude != this.formData.location.latitude ||\n            this.altitude != this.formData.location.altitude ||\n            this.contacts.length != this.formData.contacts.length ||\n            this.addressNumber != this.formData.address.number ||\n            this.street != this.formData.address.street ||\n            this.city != this.formData.address.city ||\n            this.locality != this.formData.address.locality ||\n            this.zip != this.formData.address.zip ||\n            this.country != this.formData.address.country ||\n            this.region != this.formData.address.region ||\n            this.description != this.formData.description ||\n            this.contacts.length != this.formData.contacts.length ||\n            this.realSubList.length != this.formData.substations.length);\n\n        let sameObjCnt = 0;\n        let formContacts = this.formData.contacts;\n        for (let i = 0; i < this.contacts.length; i++) {\n            for (let j = 0; j < formContacts.length; j++) {\n                if (this.compareContacts(this.contacts[i], formContacts[j])) {\n                    sameObjCnt++;\n                }\n            }\n        }\n        this.isFormChanged = this.isFormChanged || (sameObjCnt < this.contacts.length);\n\n        sameObjCnt = 0;\n        let formSubList = this.formData.substations;\n        for (let i = 0; i < this.realSubList.length; i++) {\n            for (let j = 0; j < formSubList.length; j++) {\n                if (this.realSubList[i].substationmrid == formSubList[j].substationmrid &&\n                    this.realSubList[i].role == formSubList[j].role ) {\n                    sameObjCnt++;\n                }\n            }\n        }\n        this.isFormChanged = this.isFormChanged || (sameObjCnt < this.realSubList.length);\n\n    }\n\n    partnerMrIDChange(newVal: string) {\n        this.partnerMrID = newVal;\n        this.checkFormChange();\n    }\n\n    mrIDChange(newVal: string) {\n        this.mrID = newVal;\n        this.checkFormChange();\n    }\n\n    descriptionChange(newVal: string) {\n        this.description = newVal;\n        this.checkFormChange();\n    }\n\n\n    zipChange(newVal: string) {\n        this.zip = newVal;\n        this.checkFormChange();\n    }\n\n    streetChange(newVal: string) {\n        this.street = newVal;\n        this.checkFormChange();\n    }\n\n    numberChange(newVal: string) {\n        this.addressNumber = newVal;\n        this.checkFormChange();\n    }\n\n    cityChange(newVal: string) {\n        this.city = newVal;\n        this.checkFormChange();\n    }\n\n    latitudeChange(newVal: number) {\n        this.latitude = newVal;\n        this.checkFormChange();\n    }\n\n    longitudeChange(newVal: number) {\n        this.longitude = newVal;\n        this.checkFormChange();\n    }\n\n    altitudeChange(newVal: number) {\n        this.altitude = newVal;\n        this.checkFormChange();\n    }\n\n    localityChange(newVal: string) {\n        this.locality = newVal;\n        this.checkFormChange();\n    }\n\n    countryChange(newVal: string) {\n        this.country = newVal;\n        this.checkFormChange();\n    }\n\n    regionChange(newVal: string) {\n        this.region = newVal;\n        this.checkFormChange();\n    }\n\n    newFirstNameChange(newVal: string) {\n        this.newContact.firstname = newVal;\n    }\n\n    newLastNameChange(newVal: string) {\n        this.newContact.lastname = newVal;\n    }\n\n    newPhoneChange(newVal: string) {\n        this.newContact.phone = newVal;\n    }\n\n    newEmailChange(newVal: string) {\n        this.newContact.email = newVal;\n    }\n\n    newUserIDChange(newVal: string) {\n        this.newContact.userid = newVal;\n    }\n\n    newRoleChange(newVal: string) {\n        this.newContact.role = newVal;\n    }\n\n    onShowAddDialog() {\n        this.displayAddModal = true;\n        this.newContact = {firstname: '', lastname: '', phone: '', email: '', role: UserRole.manager, userid: ''};\n    }\n\n    onDeleteSub(item: any) {\n        for (let i = 0; i<this.realSubList.length; i++) {\n            if(this.realSubList[i].substationmrid == item.substationmrid && this.realSubList[i].role == item.role) {\n                this.realSubList.splice(i,1);\n                break;\n            }\n        }\n        this.checkFormChange();\n    }\n\n    onShowRealSubForm() {\n        this.displayRealSubAddModal = true;\n    }\n\n    onAddRealSub(item: any) {\n        this.displayRealSubAddModal = false;\n        // check duplication\n        let isexist = false;\n        for (let i = 0; i<this.realSubList.length; i++) {\n            if(this.realSubList[i].substationmrid == item.substationmrid && this.realSubList[i].role == item.role) {\n                 isexist = true;\n                 break;\n            }\n        }\n        if (!isexist) {\n            this.realSubList.push(item);\n            this.checkFormChange();\n        }\n    }\n\n    onDiscardRealSub() {\n        this.displayRealSubAddModal = false;\n    }\n\n    onDiscard() {\n        this.displayAddModal = false;\n    }\n\n    onAddRow() {\n        if (this.newContact.userid.trim() == \"\") return;\n        this.contacts.push(this.newContact);\n        this.displayAddModal = false;\n        this.newContact = {firstname: '', lastname: '', phone: '', email: '', role: UserRole.manager, userid: ''};\n        this.isFormChanged = true;\n        this.checkFormChange();\n    }\n\n    onContactEditComplete(newVal) {\n        this.checkFormChange();\n    }\n\n    onDeleteContact(contactVal: Contact) {\n        let indexof = this.contacts.indexOf(contactVal);\n        if (indexof > -1) {\n            this.contacts.splice(indexof, 1)\n        }\n        this.checkFormChange();\n    }\n\n    onShowPartnersDialog() {\n        this.initTableSetting();\n        this.displayPartnerModal = true;\n    }\n\n    onRowSelect(event) {\n        console.log(this.selectedPartnerRow);\n    }\n\n    onRowUnselect(event) {\n        console.log(this.selectedPartnerRow);\n    }\n\n    selectAllRows(event) {\n        if (event.checked) {\n            // alert('all rows selected');\n            console.log(this.selectedPartnerRow);\n        } else {\n            // alert('all rows diselected');\n\n        }\n    }\n\n    getPartners() {\n        let partnerIdList = [];\n        let promiseList = [];\n        let partnerListURL = `${config.client_info.apiURL.serverURL}/partners`;\n        this.httpService.httpGetRequest(this.accessToken, partnerListURL).subscribe((res: any) => {\n            partnerIdList = res;\n            for (let i = 0; i < partnerIdList.length; i++) {\n                let partnerDetailURL = partnerListURL + '/' + partnerIdList[i];\n                promiseList.push(this.httpService.httpGetRequest(this.accessToken, partnerDetailURL));\n            }\n            if (partnerIdList.length > 0) {\n                forkJoin(promiseList).subscribe(results => {\n                    this.partners = results;\n                    for (let j = 0; j < results.length; j++) {\n                        if (results[j].mrid == this.partnerMrID) {\n                            this.selectedPartnerRow = results[j];\n                        }\n                    }\n                    this.contentLoaded = true;\n                }, err => {\n                    console.log(\"Can't get partners list\", err);\n                    this.partners = [];\n                    this.selectedPartnerRow = {\n                        mrid: '',\n                        eicCode: '',\n                        contacts: [],\n                        addresses: [],\n                        users: [],\n                        description: ''\n                    };\n                    this.contentLoaded = true;\n                })\n            } else {\n                console.log(\"Can't get partners list\");\n                this.partners = [];\n                this.selectedPartnerRow = {\n                    mrid: '',\n                    eicCode: '',\n                    contacts: [],\n                    addresses: [],\n                    users: [],\n                    description: ''\n                };\n                this.contentLoaded = true;\n            }\n        }, error => {\n            if (error.error instanceof ErrorEvent) {\n                alert(error.error.message);\n            } else {\n                alert(`Backend returned code ${error.status}, body was: ${JSON.stringify(error.error)}`);\n            }\n            console.error(\"Can't get partners list\", error);\n            this.partners = [];\n            this.selectedPartnerRow = {mrid: '', eicCode: '', contacts: [], addresses: [], users: [], description: ''};\n            this.contentLoaded = true;\n        });\n    }\n\n    onDiscardPartner() {\n        this.displayPartnerModal = false;\n    }\n\n    onSelectPartner() {\n        if (this.selectedPartnerRow && this.selectedPartnerRow.mrid) {\n            this.displayPartnerModal = false;\n            this.partnerMrID = this.selectedPartnerRow.mrid;\n            this.isFormChanged = true;\n            this.checkFormChange();\n        }\n    }\n\n    initTableSetting() {\n        readTable(this.tableId);\n        let tblSettingStr = localStorage.getItem(this.tableSettingName);\n        let settingInfo: any;\n        if (tblSettingStr) {\n            settingInfo = JSON.parse(tblSettingStr);\n        } else {\n            //Write New Setting\n            settingInfo = {filter: true};\n            settingInfo.visible = [\n                'MrId', 'EicCode', 'Role', 'Description',\n                'Address.Number', 'Address.Street', 'Address.City',\n                'Address.Locality', 'Address.Zip', 'Address.Country', 'Address.Region'\n            ];\n            localStorage.setItem(this.tableSettingName, JSON.stringify(settingInfo));\n        }\n\n        this.isHideFilter = !settingInfo.filter;\n        this.partnerCols = this.checkColVisibility(this.partnerCols, settingInfo.visible);\n        this.curSelColsCnt = settingInfo.visible.length;\n    }\n\n    checkColVisibility(colList: any, visibleColList: any) {\n\n        for (let i = 0; i < colList.length; i++) {\n            colList[i].visibility = visibleColList.indexOf(colList[i].header) > -1;\n        }\n        return colList;\n    }\n\n    onChangeVisibility(item) {\n        checkTable(this.tableId, item);\n        if (item.visibility) {\n            this.curSelColsCnt += 1;\n        } else {\n            this.curSelColsCnt -= 1;\n        }\n        this.settingService.setSettingInfo(this.tableSettingName, 'visibility', {col: item.header, st: item.visibility})\n    }\n\n    onTblFilter(ev, item, dt) {\n        let field = (item.group != '') ? item.group + '.' + item.field : item.field;\n        dt.filter(ev.target.value, field, item.filterMatchMode);\n    }\n\n    onChangeFilter() {\n        this.isHideFilter = !this.isHideFilter;\n        this.settingService.setSettingInfo(this.tableSettingName, 'filter', this.isHideFilter);\n    }\n\n    onColResize($ev) {\n        updateTableWidth(this.tableId, $ev);\n    }\n}\n","module.exports = \".virtual-substation-list {\\r\\n    width: 2270px;\\r\\n    display: inline-block;\\r\\n}\\r\\n.th-location-wrap {\\r\\n    width: 240px;\\r\\n}\\r\\n.th-id-wrap:nth-child(3) {\\r\\n    width: 135px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9jb21wb25lbnRzL3ZpcnR1YWwtc3Vic3RhdGlvbi10YWJsZS92aXJ0dWFsLXN1YnN0YXRpb24tdGFibGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixxQkFBcUI7QUFDekI7QUFDQTtJQUNJLFlBQVk7QUFDaEI7QUFDQTtJQUNJLFlBQVk7QUFDaEIiLCJmaWxlIjoiY2xpZW50L2FwcC9tb2R1bGVzL2NvbXBvbmVudHMvdmlydHVhbC1zdWJzdGF0aW9uLXRhYmxlL3ZpcnR1YWwtc3Vic3RhdGlvbi10YWJsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnZpcnR1YWwtc3Vic3RhdGlvbi1saXN0IHtcclxuICAgIHdpZHRoOiAyMjcwcHg7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuLnRoLWxvY2F0aW9uLXdyYXAge1xyXG4gICAgd2lkdGg6IDI0MHB4O1xyXG59XHJcbi50aC1pZC13cmFwOm50aC1jaGlsZCgzKSB7XHJcbiAgICB3aWR0aDogMTM1cHg7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"virtual-substation-list card mg-app-component\\\" id=\\\"{{tableId}}\\\">\\r\\n    <div class=\\\"content-loading\\\" *ngIf=\\\"!contentLoaded\\\">\\r\\n        <img src=\\\"../../../../assets/img/loading.svg\\\">\\r\\n    </div>\\r\\n    <div class=\\\"card-header\\\">\\r\\n        <div class=\\\"card-title\\\">\\r\\n            <h4>Virtual Substations</h4>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"table-setting-bar\\\">\\r\\n            <div class=\\\"dropdown mg-dropdown-area\\\" >\\r\\n                <div class=\\\"drop-down-backdrop\\\" (click)=\\\"isShowSetting=false\\\" *ngIf=\\\"isShowSetting\\\"></div>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle mg-toggle-btn\\\"\\r\\n                        pTooltip=\\\"Column Setting\\\"  tooltipPosition=\\\"top\\\"\\r\\n                        (click)=\\\"isShowSetting = !isShowSetting\\\">\\r\\n                    <i class=\\\"fa fa-cog\\\"></i>\\r\\n                </button>\\r\\n                <div class=\\\"dropdown-menu mg-dropdown-menu\\\" *ngIf=\\\"isShowSetting\\\">\\r\\n                    <div style=\\\"text-align:left\\\">\\r\\n                        <table>\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th>Visible</th>\\r\\n                                <th>Column</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr *ngFor=\\\"let subcol of subCols\\\">\\r\\n                                <td><p-checkbox binary=\\\"true\\\" value=\\\"true\\\" [disabled]=\\\"subcol.visibility && curSelColsCnt == 1\\\"\\r\\n                                                (onChange)=\\\"onChangeVisibility(subcol)\\\"\\r\\n                                                [(ngModel)]=\\\"subcol.visibility\\\">\\r\\n                                </p-checkbox></td>\\r\\n                                <td>{{subcol.header}}</td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button class=\\\"btn filter-items\\\" (click)=\\\"onChangeFilter()\\\"\\r\\n                    pTooltip=\\\"{{ (isHideFilter)?'On Filter':'Off Filter' }}\\\"  tooltipPosition=\\\"top\\\"\\r\\n                    [ngClass]=\\\"{'btn-primary':!isHideFilter, 'btn-secondary':isHideFilter}\\\" >\\r\\n                <i class=\\\"fa fa-filter\\\"></i>\\r\\n            </button>\\r\\n            <button class=\\\"btn btn-danger delete-item\\\"\\r\\n                    pTooltip=\\\"Delete Rows\\\"  tooltipPosition=\\\"top\\\"\\r\\n                    (click)=\\\"onDeleteRows()\\\" [disabled]=\\\"selectedRows.length == 0\\\">\\r\\n                <i class=\\\"fa fa-trash\\\"></i>\\r\\n            </button>\\r\\n            <button class=\\\"btn btn-primary add-item\\\" (click)=\\\"onAddNewSubstation()\\\">+ Add New</button>\\r\\n            <div class=\\\"clearfix\\\"></div>\\r\\n        </div>\\r\\n        <p-table #dt sortMode=\\\"multiple\\\"\\r\\n                 [value]=\\\"substations\\\"\\r\\n                 [totalRecords]=\\\"substations.length\\\"\\r\\n                 [paginator]=\\\"true\\\"\\r\\n                 [rows]=\\\"10\\\"\\r\\n                 [(selection)]=\\\"selectedRows\\\"\\r\\n                 selectionMode=\\\"multiple\\\"\\r\\n                 [resizableColumns]=\\\"true\\\"\\r\\n                 columnResizeMode=\\\"expand\\\"\\r\\n                 (onColResize) = \\\"onColResize($event)\\\"\\r\\n                 (onHeaderCheckboxToggle)=\\\"selectAllRows($event)\\\"\\r\\n                 (onRowSelect)=\\\"onRowSelect($event)\\\"\\r\\n                 (onRowUnselect)=\\\"onRowUnselect($event)\\\">\\r\\n            <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                <tr>\\r\\n                    <th class=\\\"mg-item-checkbox\\\">\\r\\n                        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\\r\\n                    </th>\\r\\n                    <th class=\\\"th-id-wrap\\\"\\r\\n                        *ngFor=\\\"let subcol of subCols\\\"\\r\\n                        [ngClass]=\\\"{'mg-hide': !subcol.visibility}\\\"\\r\\n                        [pSortableColumn]=\\\" (subcol.group != '')? subcol.group + '.' + subcol.field: subcol.field\\\" pResizableColumn>\\r\\n                        {{subcol.header}}\\r\\n                        <p-sortIcon [field]=\\\"subcol.field\\\" ariaLabel=\\\"Activate to sort\\\"></p-sortIcon>\\r\\n                    </th>\\r\\n                </tr>\\r\\n                <tr [ngClass]=\\\"{'mg-hide':isHideFilter}\\\">\\r\\n                    <th></th>\\r\\n                    <th *ngFor=\\\"let subcol of subCols\\\"\\r\\n                        [ngClass]=\\\"{'mg-hide':!subcol.visibility}\\\"\\r\\n                        [ngSwitch]=\\\"subcol.field\\\" >\\r\\n                        <input *ngSwitchCase=\\\"subcol.field\\\" pInputText type=\\\"text\\\"\\r\\n                               (input)=\\\"onTblFilter($event, subcol, dt)\\\">\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n            <ng-template pTemplate=\\\"body\\\" let-substation>\\r\\n                <tr>\\r\\n                    <td>\\r\\n                        <p-tableCheckbox [value]=\\\"substation\\\"></p-tableCheckbox>\\r\\n                    </td>\\r\\n                    <td *ngFor=\\\"let subcol of subCols\\\"  (click)=\\\"editSubstation(substation)\\\"\\r\\n                        [ngClass]=\\\"{'mg-hide':!subcol.visibility}\\\">\\r\\n                        {{ (subcol.group != '')? substation[subcol.group][subcol.field]: substation[subcol.field]}}\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n        </p-table>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\nimport {PartnerFormService} from \"../../../core/services/partner-form.service\";\nimport {HttpServiceHelper} from \"../../../core/http/HttpServiceHelper\";\nimport {ScrollMovingService} from \"../../../core/services/scroll-moving.service\";\nimport {SettingService} from \"../../../core/services/setting.service\";\nimport {UpdatePartnerService} from \"../../../core/services/update-partner.service\";\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {forkJoin} from \"rxjs\";\nimport {AuthService} from \"../../../core/services/auth.service\";\nimport {SubFormService} from \"../../../core/services/sub-form.service\";\nimport {UpdateSubstationService} from \"../../../core/services/update-substation.service\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\n\ndeclare function checkTable(tblId, tdInfo): any;\n\ndeclare function initTable(tblId): any;\n\ndeclare function readTable(tblId): any;\n\ndeclare function updateTableWidth(tblName, tdInfo): any;\n\ndeclare var config;\n\n\n@Component({\n    selector: 'app-virtual-substation-table',\n    templateUrl: './virtual-substation-table.component.html',\n    styleUrls: ['./virtual-substation-table.component.css']\n})\nexport class VirtualSubstationTableComponent implements OnInit {\n\n    substations: Array<Substation>;\n    subCols: any[];\n\n    contactCols: any[];\n    selectedRows: Array<Substation>;\n\n    accessToken: string;\n    apiURL: string;\n\n    contentLoaded: boolean;\n    isHideFilter: boolean;\n\n    isShowSetting: boolean;\n    curSelColsCnt: number;\n    tableId: string;\n    tableSettingName: string;\n\n    constructor(\n        private authService: AuthService,\n        private subFormService: SubFormService,\n        private httpService: HttpServiceHelper,\n        private scrollService: ScrollMovingService,\n        private settingService: SettingService,\n        private updateSubstationService: UpdateSubstationService,\n        private naveService: NavigationService) {\n\n        this.accessToken = localStorage.getItem(config.client_info.storeInfo.tokenKey);\n        this.contentLoaded = false;\n        this.substations = [];\n        this.apiURL = `${config.client_info.apiURL.serverURL}/virtual_substations`;\n        this.selectedRows = [];\n\n        this.tableId = 'virtual-substation-list';\n        this.tableSettingName = this.tableId +'_setting';\n        this.isShowSetting = false;\n        this.subCols = [\n            {field: 'partnermrid', header: 'PMrId', group:''},\n            {field: 'mrid', header: 'MrId', group:''},\n            {field: 'description', header: 'Description', group:''},\n            {field: 'latitude', header: 'Location.Lat', group:'location'},\n            {field: 'longitude', header: 'Location.Lon', group:'location'},\n            {field: 'altitude', header: 'Location.Alt', group:'location'},\n            {field: 'number', header: 'Address.Number', group:'address'},\n            {field: 'street', header: 'Address.Street', group:'address'},\n            {field: 'city', header: 'Address.City', group:'address'},\n            {field: 'locality', header: 'Address.Locality', group:'address'},\n            {field: 'zip', header: 'Address.Zip', group:'address'},\n            {field: 'country', header: 'Address.Country', group:'address'},\n            {field: 'region', header: 'Address.Region', group:'address'},\n        ];\n    }\n\n    ngOnInit() {\n        this.getVirtualSubstations();\n        this.initTableSetting();\n        //Getting table setting from localstorage.\n        this.updateSubstationService.getSubstationInfo().subscribe(updateInfo => {\n            if (updateInfo.mode) {\n                console.log(updateInfo.newSub);\n                this.substations.push(updateInfo.newSub);\n            } else {\n                for (let i = 0; i < this.substations.length; i++) {\n                    if (this.substations[i].mrid == updateInfo.mrid) {\n                        this.substations[i] = updateInfo.newSub;\n                    }\n                }\n            }\n        });\n\n    }\n\n    getVirtualSubstations() {\n        let subIdList = [];\n        let promiseList = [];\n        this.httpService.httpGetRequest(this.accessToken, this.apiURL).subscribe((res: any) => {\n            subIdList = res;\n            for (let i = 0; i < subIdList.length; i++) {\n                let subDetailURL = this.apiURL + '/' + subIdList[i];\n                promiseList.push(this.httpService.httpGetRequest(this.accessToken, subDetailURL));\n            }\n            if (subIdList.length > 0) {\n                forkJoin(promiseList).subscribe(results => {\n                    this.substations = results;\n                    this.contentLoaded = true;\n                }, err => {\n                    console.log(\"Can't get virtual substation list\", err);\n                    this.substations = [];\n                    this.contentLoaded = true;\n                })\n            } else {\n                console.log(\"Can't get virtual substation list\");\n                alert('No virtual substation data is accessible');\n                this.authService.setAuthInfo({login_st:false}); ////888888888888888888888888\n                // this.substations = [];\n                this.contentLoaded = true;\n\n            }\n        }, (error: HttpErrorResponse) => {\n            this.httpErrorHandler(error);\n            console.error(\"Can't get virtual substation list\", error);\n            this.substations = [];\n            this.contentLoaded = true;\n        });\n    }\n\n    httpErrorHandler(error: any) {\n        console.error(error);\n        switch (error.status) {\n            case 400:\n                console.log('Bad Request');\n                break;\n            case 401:\n                this.authService.setAuthInfo({login_st:false});\n                break;\n            default:\n                alert(`Backend returned code ${error.status}, body was: ${error.error.Message}`);\n        }\n    }\n\n    onDeleteRows() {\n        let subIds = [];\n        let promiseList = [];\n        for (let i = 0; i < this.selectedRows.length; i++) {\n            let subDeleteURL = this.apiURL + '/' + this.selectedRows[i].mrid;\n            subIds.push(this.selectedRows[i].mrid);\n            promiseList.push(this.httpService.httpDeleteRequest(this.accessToken, subDeleteURL));\n        }\n        if (subIds.length > 0) {\n            forkJoin(promiseList).subscribe(results => {\n                let leftSubstations = [];\n                for (let i = 0; i < this.substations.length; i++) {\n                    if (subIds.indexOf(this.substations[i].mrid) < 0) {\n                        leftSubstations.push(this.substations[i]);\n                    }\n                }\n                this.substations = leftSubstations;\n                this.selectedRows = [];\n                this.contentLoaded = true;\n                console.log('Success in substation Deleting', results);\n            }, err => {\n                this.substations = [];\n                this.contentLoaded = true;\n                console.error('Error in substations Deleting', err);\n            })\n        } else {\n            this.substations = [];\n            this.contentLoaded = true;\n            console.log('Error in substations Deleting due to the Empty String');\n        }\n    }\n\n    editSubstation(sub) {\n        let self = this;\n        this.naveService.setNavInfo('virtual-substation-form', true, sub.mrid);\n        setTimeout(function () {\n            self.subFormService.setSubFormInfo(false, sub, true);\n            self.scrollService.setMovedScroll(true, 'substation-form');\n        }, 100);\n\n    }\n\n    onAddNewSubstation() {\n        let self = this;\n        this.naveService.setNavInfo('virtual-substation-form', true, '');\n        setTimeout(function () {\n            self.subFormService.setSubFormInfo(true, null, true);\n            self.scrollService.setMovedScroll(true, 'substation-form');\n        }, 100);\n\n    }\n\n    onRowSelect(event) {\n        console.log(this.selectedRows);\n    }\n\n    onRowUnselect(event) {\n        console.log(this.selectedRows);\n    }\n    selectAllRows(event) {\n        if (event.checked) {\n            // alert('all rows selected');\n            console.log(this.selectedRows);\n        } else {\n            // alert('all rows diselected');\n\n        }\n    }\n\n    // ====================================================\n    initTableSetting() {\n\n        readTable(this.tableId);\n        let tblSettingStr = localStorage.getItem(this.tableSettingName);\n        let settingInfo: any;\n        if(tblSettingStr) {\n            settingInfo = JSON.parse(tblSettingStr);\n        } else {\n            //Write New Setting\n            settingInfo = { filter: true};\n            settingInfo.visible = [\n                'PMrId','MrId','Description',\n                'Location.Lat','Location.Lon','Location.Alt',\n                'Address.Number','Address.Street','Address.City',\n                'Address.Locality','Address.Zip','Address.Country','Address.Region'\n            ];\n            localStorage.setItem(this.tableSettingName, JSON.stringify(settingInfo));\n        }\n\n        this.isHideFilter = !settingInfo.filter;\n        this.subCols = this.checkColVisibility(this.subCols, settingInfo.visible);\n        this.curSelColsCnt = settingInfo.visible.length;\n    }\n\n    checkColVisibility(colList: any, visibleColList: any) {\n\n        for(let i = 0; i<colList.length; i++) {\n            colList[i].visibility = visibleColList.indexOf(colList[i].header)>-1;\n        }\n        return colList;\n    }\n\n    onChangeVisibility(item) {\n        checkTable(this.tableId, item);\n        if(item.visibility){\n            this.curSelColsCnt += 1;\n        } else {\n            this.curSelColsCnt -= 1;\n        }\n        this.settingService.setSettingInfo(this.tableSettingName,'visibility', {col:item.header,st:item.visibility})\n    }\n\n    onTblFilter(ev, item, dt) {\n        let field = (item.group != '')? item.group + '.' + item.field: item.field;\n        dt.filter(ev.target.value,  field, item.filterMatchMode);\n    }\n\n    onChangeFilter() {\n        this.isHideFilter = !this.isHideFilter;\n        this.settingService.setSettingInfo(this.tableSettingName,'filter', this.isHideFilter);\n    }\n\n    onColResize($ev) {\n        updateTableWidth(this.tableId, $ev);\n    }\n\n}\n","module.exports = \".device-type-container {\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9wYWdlcy9kZXZpY2UtdHlwZS9kZXZpY2UtdHlwZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtBQUNqQiIsImZpbGUiOiJjbGllbnQvYXBwL21vZHVsZXMvcGFnZXMvZGV2aWNlLXR5cGUvZGV2aWNlLXR5cGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kZXZpY2UtdHlwZS1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"device-type-container\\\">\\n  <div class=\\\"mg-app-component\\\">\\n    <div class=\\\"mg-width-virtual\\\"></div>\\n  </div>\\n  <app-device-type-table></app-device-type-table>\\n  <app-device-type-form *ngIf=\\\"deviceTypeFormSt\\\"></app-device-type-form>\\n  <div class=\\\"mg-sb-target\\\"></div>\\n  <div>\\n    <div class=\\\"mg-width-virtual\\\"></div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {NavigationService} from \"../../../core/services/navigation.service\";\n\n@Component({\n  selector: 'app-device-type',\n  templateUrl: './device-type.component.html',\n  styleUrls: ['./device-type.component.css']\n})\nexport class DeviceTypeComponent implements OnInit {\n\n    deviceTypeFormSt: boolean;\n    constructor(private navService: NavigationService) {\n        this.deviceTypeFormSt = false;\n    }\n\n    ngOnInit() {\n        this.navService.getNavInfo().subscribe(naveInfo => {\n            let elemSt = naveInfo.st;\n            switch (naveInfo.elem) {\n                case 'device-type-list':\n                    this.deviceTypeFormSt = false;\n                    break;\n                case 'device-type-form':\n                    this.deviceTypeFormSt = elemSt;\n                    break;\n            }\n        });\n    }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjbGllbnQvYXBwL21vZHVsZXMvcGFnZXMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".measurements-container {\\r\\n    display: flex;\\r\\n}\\r\\n.mg-breadcrumb {\\r\\n    position: fixed;\\r\\n    top: 66px;\\r\\n    left: 246px;\\r\\n    width: calc(100vw - 246px);\\r\\n    padding: 5px 10px;\\r\\n    background-color: #e6e6e6c9;\\r\\n    border: 1px solid #c3c3c3;\\r\\n    border-radius: 3px;\\r\\n}\\r\\n.mg-bd-item {\\r\\n    display: inline-block;\\r\\n    margin-right: 15px;\\r\\n    font-weight: 500;\\r\\n    color: #037bfc;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.mg-bd-item:hover{\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9wYWdlcy9tZWFzdXJlbWVudHMvbWVhc3VyZW1lbnRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsU0FBUztJQUNULFdBQVc7SUFDWCwwQkFBMEI7SUFDMUIsaUJBQWlCO0lBQ2pCLDJCQUEyQjtJQUMzQix5QkFBeUI7SUFDekIsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxxQkFBcUI7SUFDckIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsZUFBZTtBQUNuQjtBQUNBO0lBQ0ksMEJBQTBCO0FBQzlCIiwiZmlsZSI6ImNsaWVudC9hcHAvbW9kdWxlcy9wYWdlcy9tZWFzdXJlbWVudHMvbWVhc3VyZW1lbnRzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWVhc3VyZW1lbnRzLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcbi5tZy1icmVhZGNydW1iIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogNjZweDtcclxuICAgIGxlZnQ6IDI0NnB4O1xyXG4gICAgd2lkdGg6IGNhbGMoMTAwdncgLSAyNDZweCk7XHJcbiAgICBwYWRkaW5nOiA1cHggMTBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTZjOTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjM2MzYzM7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbn1cclxuLm1nLWJkLWl0ZW0ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIGNvbG9yOiAjMDM3YmZjO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbi5tZy1iZC1pdGVtOmhvdmVye1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"measurements-container\\\">\\n    <div class=\\\"mg-app-component\\\">\\n        <div class=\\\"mg-width-virtual\\\"></div>\\n    </div>\\n    <app-measurement-table></app-measurement-table>\\n    <app-measurement-form></app-measurement-form>\\n    <div class=\\\"mg-sb-target\\\"></div>\\n    <div>\\n        <div class=\\\"mg-width-virtual\\\"></div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-measurements',\n  templateUrl: './measurements.component.html',\n  styleUrls: ['./measurements.component.css']\n})\nexport class MeasurementsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".partners-container {\\r\\n    display: flex;\\r\\n}\\r\\n.mg-breadcrumb {\\r\\n    position: fixed;\\r\\n    top: 66px;\\r\\n    left: 246px;\\r\\n    width: calc(100vw - 246px);\\r\\n    padding: 5px 10px;\\r\\n    background-color: #e6e6e6c9;\\r\\n    border: 1px solid #c3c3c3;\\r\\n    border-radius: 3px;\\r\\n}\\r\\n.mg-bd-item {\\r\\n    display: inline-block;\\r\\n    margin-right: 15px;\\r\\n    font-weight: 500;\\r\\n    color: #037bfc;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.mg-bd-item:hover{\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9wYWdlcy9wYXJ0bmVyL3BhcnRuZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7QUFDakI7QUFDQTtJQUNJLGVBQWU7SUFDZixTQUFTO0lBQ1QsV0FBVztJQUNYLDBCQUEwQjtJQUMxQixpQkFBaUI7SUFDakIsMkJBQTJCO0lBQzNCLHlCQUF5QjtJQUN6QixrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLHFCQUFxQjtJQUNyQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxlQUFlO0FBQ25CO0FBQ0E7SUFDSSwwQkFBMEI7QUFDOUIiLCJmaWxlIjoiY2xpZW50L2FwcC9tb2R1bGVzL3BhZ2VzL3BhcnRuZXIvcGFydG5lci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhcnRuZXJzLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcbi5tZy1icmVhZGNydW1iIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogNjZweDtcclxuICAgIGxlZnQ6IDI0NnB4O1xyXG4gICAgd2lkdGg6IGNhbGMoMTAwdncgLSAyNDZweCk7XHJcbiAgICBwYWRkaW5nOiA1cHggMTBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTZjOTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjM2MzYzM7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbn1cclxuLm1nLWJkLWl0ZW0ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIGNvbG9yOiAjMDM3YmZjO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbi5tZy1iZC1pdGVtOmhvdmVye1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"partners-container\\\">\\n    <div class=\\\"mg-app-component\\\">\\n        <div class=\\\"mg-width-virtual\\\"></div>\\n    </div>\\n    <app-partner-table></app-partner-table>\\n    <app-partner-form *ngIf=\\\"partnerFormSt\\\"></app-partner-form>\\n    <app-partner-contact-table *ngIf=\\\"partnerContactSt\\\"></app-partner-contact-table>\\n    <app-partner-address-table *ngIf=\\\"partnerAddressSt\\\"></app-partner-address-table>\\n    <app-partner-substation-table *ngIf=\\\"partnerSubstationSt\\\"></app-partner-substation-table>\\n    <div class=\\\"mg-sb-target\\\"></div>\\n    <div>\\n        <div class=\\\"mg-width-virtual\\\"></div>\\n    </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {NavigationService} from \"../../../core/services/navigation.service\";\n\n@Component({\n    selector: 'app-partner',\n    templateUrl: './partner.component.html',\n    styleUrls: ['./partner.component.css']\n})\nexport class PartnerComponent implements OnInit {\n\n    partnerFormSt: boolean;\n    partnerContactSt: boolean;\n    partnerAddressSt: boolean;\n    partnerSubstationSt: boolean;\n    constructor(private navService: NavigationService) {\n        this.partnerFormSt = false;\n        this.partnerContactSt = false;\n        this.partnerAddressSt = false;\n        this.partnerSubstationSt = false;\n    }\n\n    ngOnInit() {\n        this.navService.getNavInfo().subscribe(naveInfo => {\n            let elemSt = naveInfo.st;\n            switch (naveInfo.elem) {\n                case 'partner-list':\n                    this.partnerFormSt = false;\n                    this.partnerContactSt = this.partnerAddressSt = this.partnerSubstationSt = false;\n                    break;\n                case 'partner-form':\n                    this.partnerFormSt = elemSt;\n                    this.partnerContactSt = this.partnerAddressSt = this.partnerSubstationSt = false;\n                    break;\n                case 'partner-contact':\n                    this.partnerContactSt = elemSt;\n                    break;\n                case 'partner-address':\n                    this.partnerAddressSt = elemSt;\n                    break;\n                case 'partner-substation':\n                    this.partnerSubstationSt = elemSt;\n                    break;\n\n            }\n        });\n    }\n\n}\n","module.exports = \".substations-container {\\r\\n    display: flex;\\r\\n}\\r\\n.mg-breadcrumb {\\r\\n    position: fixed;\\r\\n    top: 66px;\\r\\n    left: 246px;\\r\\n    width: calc(100vw - 266px);\\r\\n    padding: 5px 10px;\\r\\n    background-color: #e6e6e6c9;\\r\\n    border: 1px solid #c3c3c3;\\r\\n    border-radius: 3px;\\r\\n}\\r\\n.mg-bd-item {\\r\\n    display: inline-block;\\r\\n    margin-right: 15px;\\r\\n    font-weight: 500;\\r\\n    color: #037bfc;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.mg-bd-item:hover{\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9wYWdlcy9zdWJzdGF0aW9uL3N1YnN0YXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7QUFDakI7QUFDQTtJQUNJLGVBQWU7SUFDZixTQUFTO0lBQ1QsV0FBVztJQUNYLDBCQUEwQjtJQUMxQixpQkFBaUI7SUFDakIsMkJBQTJCO0lBQzNCLHlCQUF5QjtJQUN6QixrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLHFCQUFxQjtJQUNyQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxlQUFlO0FBQ25CO0FBQ0E7SUFDSSwwQkFBMEI7QUFDOUIiLCJmaWxlIjoiY2xpZW50L2FwcC9tb2R1bGVzL3BhZ2VzL3N1YnN0YXRpb24vc3Vic3RhdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnN1YnN0YXRpb25zLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcbi5tZy1icmVhZGNydW1iIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogNjZweDtcclxuICAgIGxlZnQ6IDI0NnB4O1xyXG4gICAgd2lkdGg6IGNhbGMoMTAwdncgLSAyNjZweCk7XHJcbiAgICBwYWRkaW5nOiA1cHggMTBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTZjOTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjM2MzYzM7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbn1cclxuLm1nLWJkLWl0ZW0ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIGNvbG9yOiAjMDM3YmZjO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbi5tZy1iZC1pdGVtOmhvdmVye1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"substations-container\\\" >\\n    <div class=\\\"mg-app-component\\\"><div class=\\\"mg-width-virtual\\\"></div></div>\\n    <app-substation-table></app-substation-table>\\n    <app-substation-form *ngIf=\\\"subFormSt\\\"></app-substation-form>\\n    <app-bay-table *ngIf=\\\"bayListSt\\\"></app-bay-table>\\n    <app-bay-form *ngIf=\\\"bayFormSt\\\"></app-bay-form>\\n    <app-device-table *ngIf=\\\"devListSt\\\"></app-device-table>\\n    <app-device-form *ngIf=\\\"devFormSt\\\"></app-device-form>\\n    <app-device-measurement-table *ngIf=\\\"devMsListSt\\\"></app-device-measurement-table>\\n    <app-device-measurement-form *ngIf=\\\"devMsFormSt\\\"></app-device-measurement-form>\\n    <app-device-metering-table *ngIf=\\\"devMtListSt\\\"></app-device-metering-table>\\n    <div><div class=\\\"mg-width-virtual\\\"></div></div>\\n    <div class=\\\"mg-breadcrumb\\\" *ngIf=\\\"subFormSt && (subName != '')\\\">\\n        <div class=\\\"mg-bd-item\\\" *ngIf=\\\"subFormSt && (subName != '')\\\" (click)=\\\"showSubstationDetails()\\\"> > Substation [{{subName}}]</div>\\n        <div class=\\\"mg-bd-item\\\" *ngIf=\\\"bayFormSt && (bayName != '')\\\" (click)=\\\"showBayDetails()\\\"> > Bay [{{bayName}}]</div>\\n        <div class=\\\"mg-bd-item\\\" *ngIf=\\\"devFormSt && (devName != '')\\\" (click)=\\\"showDeviceDetails()\\\"> > Device [{{devName}}]</div>\\n    </div>\\n</div>\\n\\n\\n\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {NavigationService} from \"../../../core/services/navigation.service\";\nimport {ScrollMovingService} from \"../../../core/services/scroll-moving.service\";\n\n@Component({\n    selector: 'app-substation',\n    templateUrl: './substation.component.html',\n    styleUrls: ['./substation.component.css'],\n})\nexport class SubstationComponent implements OnInit {\n\n    subListSt: boolean;\n    subFormSt: boolean;\n\n    bayListSt: boolean;\n    bayFormSt: boolean;\n\n    devListSt: boolean;\n    devFormSt: boolean;\n\n    devMsListSt: boolean;\n    devMsFormSt: boolean;\n\n    devMtListSt: boolean;\n    devMtFormSt: boolean;\n\n    subName: string;\n    bayName: string;\n    devName: string;\n\n    constructor(private navService: NavigationService,\n                private scrollMovingService: ScrollMovingService) {\n        this.subFormSt = this.bayListSt = this.bayFormSt = this.devListSt = this.devFormSt = false;\n        this.devMsListSt = this.devMsFormSt = this.devMtListSt = this.devMtFormSt = false;\n    }\n\n    ngOnInit() {\n        this.subName = this.bayName = this.devName = \"\";\n\n        this.navService.getNavInfo().subscribe(naveInfo => {\n            let elemSt = naveInfo.st;\n            switch (naveInfo.elem) {\n                case 'sub-list':\n                    this.subListSt = elemSt;\n                    this.subFormSt = this.bayListSt = this.bayFormSt = this.devListSt = this.devFormSt = false;\n                    this.devMsListSt = this.devMsFormSt = this.devMtListSt = this.devMtFormSt = false;\n                    this.subName = this.devName = this.bayName = \"\";\n                    break;\n                case 'sub-form':\n                    this.subFormSt = elemSt;\n                    this.bayListSt = this.bayFormSt = this.devListSt = this.devFormSt = false;\n                    this.devMsListSt = this.devMsFormSt = this.devMtListSt = this.devMtFormSt = false;\n                    this.subName = naveInfo.name;\n                    this.devName = this.bayName = \"\";\n                    break;\n                case 'bay-list':\n                    this.bayListSt = elemSt;\n                    this.bayFormSt = this.devListSt = this.devFormSt = false;\n                    this.devMsListSt = this.devMsFormSt = this.devMtListSt = this.devMtFormSt = false;\n                    this.subName = naveInfo.name;\n                    this.devName = this.bayName = \"\";\n                    break;\n                case 'bay-form':\n                    this.bayFormSt = elemSt;\n                    this.devListSt = this.devFormSt = false;\n                    this.devMsListSt = this.devMsFormSt = this.devMtListSt = this.devMtFormSt = false;\n                    this.bayName = naveInfo.name;\n                    this.devName = \"\";\n                    break;\n                case 'dev-list':\n                    this.devListSt = elemSt;\n                    this.devFormSt = false;\n                    this.devMsListSt = this.devMsFormSt = this.devMtListSt = this.devMtFormSt = false;\n                    this.bayName = naveInfo.name;\n                    this.devName = \"\";\n                    break;\n                case 'dev-form':\n                    this.devFormSt = elemSt;\n                    this.devMsListSt = this.devMsFormSt = this.devMtListSt = this.devMtFormSt = false;\n                    this.devName = naveInfo.name;\n                    break;\n                case 'dev-ms-list':\n                    this.devMsListSt = elemSt;\n                    this.devMsFormSt = false;\n                    break;\n                case 'dev-ms-form':\n                    this.devMsFormSt = elemSt;\n                    break;\n                case 'dev-mt-list':\n                    this.devMtListSt = elemSt;\n                     break;\n            }\n\n        });\n    }\n\n    showSubstationDetails() {\n        this.navService.setNavInfo('sub-form',true, this.subName);\n        this.scrollMovingService.setMovedScroll(true,'');\n    }\n\n    showBayDetails() {\n        this.navService.setNavInfo('bay-form',true, this.bayName);\n        this.scrollMovingService.setMovedScroll(true,'');\n    }\n\n    showDeviceDetails() {\n        this.navService.setNavInfo('dev-form',true, this.devName);\n        this.scrollMovingService.setMovedScroll(true,'');\n    }\n\n}\n","module.exports = \".substations-container {\\r\\n    display: flex;\\r\\n}\\r\\n.mg-breadcrumb {\\r\\n    position: fixed;\\r\\n    top: 66px;\\r\\n    left: 246px;\\r\\n    width: calc(100vw - 266px);\\r\\n    padding: 5px 10px;\\r\\n    background-color: #e6e6e6c9;\\r\\n    border: 1px solid #c3c3c3;\\r\\n    border-radius: 3px;\\r\\n}\\r\\n.mg-bd-item {\\r\\n    display: inline-block;\\r\\n    margin-right: 15px;\\r\\n    font-weight: 500;\\r\\n    color: #037bfc;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.mg-bd-item:hover{\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9hcHAvbW9kdWxlcy9wYWdlcy92aXJ0dWFsLXN1YnN0YXRpb24vdmlydHVhbC1zdWJzdGF0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsU0FBUztJQUNULFdBQVc7SUFDWCwwQkFBMEI7SUFDMUIsaUJBQWlCO0lBQ2pCLDJCQUEyQjtJQUMzQix5QkFBeUI7SUFDekIsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxxQkFBcUI7SUFDckIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsZUFBZTtBQUNuQjtBQUNBO0lBQ0ksMEJBQTBCO0FBQzlCIiwiZmlsZSI6ImNsaWVudC9hcHAvbW9kdWxlcy9wYWdlcy92aXJ0dWFsLXN1YnN0YXRpb24vdmlydHVhbC1zdWJzdGF0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3Vic3RhdGlvbnMtY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuLm1nLWJyZWFkY3J1bWIge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiA2NnB4O1xyXG4gICAgbGVmdDogMjQ2cHg7XHJcbiAgICB3aWR0aDogY2FsYygxMDB2dyAtIDI2NnB4KTtcclxuICAgIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNmM5O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2MzYzNjMztcclxuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxufVxyXG4ubWctYmQtaXRlbSB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgY29sb3I6ICMwMzdiZmM7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuLm1nLWJkLWl0ZW06aG92ZXJ7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"substations-container\\\" >\\n    <div class=\\\"mg-app-component\\\"><div class=\\\"mg-width-virtual\\\"></div></div>\\n    <app-virtual-substation-table></app-virtual-substation-table>\\n    <app-virtual-substation-form *ngIf=\\\"substationFormSt\\\"></app-virtual-substation-form>\\n    <div><div class=\\\"mg-width-virtual\\\"></div></div>\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {NavigationService} from \"../../../core/services/navigation.service\";\n\n@Component({\n    selector: 'app-virtual-substation',\n    templateUrl: './virtual-substation.component.html',\n    styleUrls: ['./virtual-substation.component.css']\n})\nexport class VirtualSubstationComponent implements OnInit {\n\n    substationFormSt: boolean;\n    constructor(private navService: NavigationService) {\n        this.substationFormSt = false;\n    }\n\n    ngOnInit() {\n        this.navService.getNavInfo().subscribe(naveInfo => {\n            let elemSt = naveInfo.st;\n            switch (naveInfo.elem) {\n                case 'virtual-substation-list':\n                    this.substationFormSt = false;\n                    break;\n                case 'virtual-substation-form':\n                    this.substationFormSt = elemSt;\n                    break;\n            }\n        });\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}